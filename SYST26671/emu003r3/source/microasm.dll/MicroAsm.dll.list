                                                ; cloned from: DLL creation example
                                                     
                                                     
                                                ; lEA_TAB   is 0 to 7  or an actuall byte the follows the opcode.     
                                                            
                                                            
                                                            
00000080: 50 45 00 00 4C 01 04 00 86 80 52 43   format PE GUI 4.0 DLL
          00 00 00 00 00 00 00 00 E0 00 0E 21   entry DllEntryPoint
          0B 01 01 40 00 00 00 00 00 00 00 00   
          00 00 00 00 C4 10 00 00 00 00 00 00   
          00 00 00 00 00 00 40 00 00 10 00 00   include 'win32a.inc'
          00 02 00 00 01 00 00 00 00 00 00 00   
          04 00 00 00 00 00 00 00 00 60 00 00   ; Win32 programming headers (ASCII)
          00 04 00 00 8B 11 01 00 02 00 00 00   
          00 10 00 00 00 10 00 00 00 00 01 00   include 'macro/struct.inc'
          00 00 00 00 00 00 00 00 10 00 00 00   
          00 40 00 00 82 01 00 00 00 30 00 00   ; Macroinstructions for defining data structures
          BE 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   macro struct name
          00 00 00 00 00 50 00 00 46 00 00 00    { fields@struct equ name
          00 00 00 00 00 00 00 00 00 00 00 00      match child parent, name \{ fields@struct equ child,fields@\#parent \}
          00 00 00 00 00 00 00 00 00 00 00 00      sub@struct equ
          00 00 00 00 00 00 00 00 00 00 00 00      struc db [val] \{ \common fields@struct equ fields@struct,.,db,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      struc dw [val] \{ \common fields@struct equ fields@struct,.,dw,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      struc du [val] \{ \common fields@struct equ fields@struct,.,du,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      struc dd [val] \{ \common fields@struct equ fields@struct,.,dd,<val> \}
          00 00 00 00 00 00 00 00 2E 63 6F 64      struc dp [val] \{ \common fields@struct equ fields@struct,.,dp,<val> \}
          65 00 00 00 C0 19 00 00 00 10 00 00      struc dq [val] \{ \common fields@struct equ fields@struct,.,dq,<val> \}
          00 1A 00 00 00 04 00 00 00 00 00 00      struc dt [val] \{ \common fields@struct equ fields@struct,.,dt,<val> \}
          00 00 00 00 00 00 00 00 20 00 00 A0      struc rb count \{ fields@struct equ fields@struct,.,db,count dup (?) \}
          2E 69 64 61 74 61 00 00 BE 00 00 00      struc rw count \{ fields@struct equ fields@struct,.,dw,count dup (?) \}
          00 30 00 00 00 02 00 00 00 1E 00 00      struc rd count \{ fields@struct equ fields@struct,.,dd,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      struc rp count \{ fields@struct equ fields@struct,.,dp,count dup (?) \}
          40 00 00 C0 2E 65 64 61 74 61 00 00      struc rq count \{ fields@struct equ fields@struct,.,dq,count dup (?) \}
          82 01 00 00 00 40 00 00 00 02 00 00      struc rt count \{ fields@struct equ fields@struct,.,dt,count dup (?) \}
          00 20 00 00 00 00 00 00 00 00 00 00      macro db [val] \{ \common \local anonymous
          00 00 00 00 40 00 00 40 2E 72 65 6C   		     fields@struct equ fields@struct,anonymous,db,<val> \}
          6F 63 00 00 46 00 00 00 00 50 00 00      macro dw [val] \{ \common \local anonymous
          00 02 00 00 00 22 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dw,<val> \}
          00 00 00 00 00 00 00 00 40 00 00 02      macro du [val] \{ \common \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,du,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro dd [val] \{ \common \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dd,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro dp [val] \{ \common \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dp,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro dq [val] \{ \common \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dq,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro dt [val] \{ \common \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dt,<val> \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro rb count \{ \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,db,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro rw count \{ \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dw,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro rd count \{ \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dd,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro rp count \{ \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dp,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro rq count \{ \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dq,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro rt count \{ \local anonymous
          00 00 00 00 00 00 00 00 00 00 00 00   		     fields@struct equ fields@struct,anonymous,dt,count dup (?) \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro union \{ fields@struct equ fields@struct,,union,<
          00 00 00 00 00 00 00 00 00 00 00 00   		  sub@struct equ union \}
          00 00 00 00 00 00 00 00 00 00 00 00      macro struct \{ fields@struct equ fields@struct,,substruct,<
          00 00 00 00 00 00 00 00 00 00 00 00   		  sub@struct equ substruct \}
          00 00 00 00 00 00 00 00 00 00 00 00      virtual at 0 }
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   macro ends
          00 00 00 00 00 00 00 00 00 00 00 00    { match , sub@struct \{ restruc db,dw,du,dd,dp,dq,dt
          00 00 00 00 00 00 00 00 00 00 00 00   			 restruc rb,rw,rd,rp,rq,rt
          00 00 00 00 00 00 00 00 00 00 00 00   			 purge db,dw,du,dd,dp,dq,dt
          00 00 00 00 00 00 00 00 00 00 00 00   			 purge rb,rw,rd,rp,rq,rt
          00 00 00 00 00 00 00 00 00 00 00 00   			 purge union,struct
          00 00 00 00 00 00 00 00 00 00 00 00   			 match name=,fields,fields@struct \\{ fields@struct equ
          00 00 00 00 00 00 00 00 00 00 00 00   							      make@struct name,fields
          00 00 00 00 00 00 00 00 00 00 00 00   							      fields@\\#name equ fields \\}
          00 00 00 00 00 00 00 00 00 00 00 00   			 end virtual \}
          00 00 00 00 00 00 00 00 00 00 00 00      match any, sub@struct \{ fields@struct equ fields@struct> \}
          00 00 00 00 00 00 00 00 00 00 00 00      restore sub@struct }
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00               macro make@struct name,[field,type,def]
                                                 { common
                                                    if $
                                                     display 'Error: definition of ',`name,' contains illegal instructions.',0Dh,0Ah
                                                     err
                                                    end if
                                                    local define
                                                    define equ name
                                                   forward
                                                    local sub
                                                    match , field \{ make@substruct type,name,sub def
                                                		     define equ define,.,sub, \}
                                                    match any, field \{ define equ define,.#field,type,<def> \}
                                                   common
                                                    match fields, define \{ define@struct fields \} }
                                                
                                                macro define@struct name,[field,type,def]
                                                 { common
                                                    local list
                                                    list equ
                                                   forward
                                                    if ~ field eq .
                                                     name#field type def
                                                     sizeof.#name#field = $ - name#field
                                                    else
                                                     rb sizeof.#type
                                                    end if
                                                    local value
                                                    match any, list \{ list equ list, \}
                                                    list equ list <value>
                                                   common
                                                    sizeof.#name = $
                                                    restruc name
                                                    match values, list \{
                                                    struc name value \\{
                                                    match any, fields@struct \\\{ fields@struct equ fields@struct,.,name,<values> \\\}
                                                    match , fields@struct \\\{ label .
                                                   forward
                                                     match , value \\\\{ field type def \\\\}
                                                     match any, value \\\\{ field type value
                                                			   if ~ field eq .
                                                			    rb sizeof.#name#field - ($-field)
                                                			   end if \\\\}
                                                   common \\\} \\} \} }
                                                
                                                macro enable@substruct
                                                 { macro make@substruct substruct,parent,name,[field,type,def]
                                                    \{ \common
                                                	\local define
                                                	define equ parent,name
                                                       \forward
                                                	\local sub
                                                	match , field \\{ match any, type \\\{ enable@substruct
                                                					       make@substruct type,name,sub def
                                                					       purge make@substruct
                                                					       define equ define,.,sub, \\\} \\}
                                                	match any, field \\{ define equ define,.\#field,type,<def> \\}
                                                       \common
                                                	match fields, define \\{ define@\#substruct fields \\} \} }
                                                
                                                enable@substruct
                                                
                                                macro define@union parent,name,[field,type,def]
                                                 { common
                                                    virtual at 0
                                                   forward
                                                    if ~ field eq .
                                                     virtual at 0
                                                      parent#field type def
                                                      sizeof.#parent#field = $ - parent#field
                                                     end virtual
                                                     if sizeof.#parent#field > $
                                                      rb sizeof.#parent#field - $
                                                     end if
                                                    else if sizeof.#type > $
                                                     rb sizeof.#type - $
                                                    end if
                                                   common
                                                    sizeof.#name = $
                                                    end virtual
                                                    struc name [value] \{ \common
                                                    label .\#name
                                                    last@union equ
                                                   forward
                                                    match any, last@union \\{ virtual at .\#name
                                                			       field type def
                                                			      end virtual \\}
                                                    match , last@union \\{ match , value \\\{ field type def \\\}
                                                			   match any, value \\\{ field type value \\\} \\}
                                                    last@union equ field
                                                   common rb sizeof.#name - ($ - .\#name) \} }
                                                
                                                macro define@substruct parent,name,[field,type,def]
                                                 { common
                                                    virtual at 0
                                                   forward
                                                    if ~ field eq .
                                                     parent#field type def
                                                     sizeof.#parent#field = $ - parent#field
                                                    else
                                                     rb sizeof.#type
                                                    end if
                                                    local value
                                                   common
                                                    sizeof.#name = $
                                                    end virtual
                                                    struc name value \{
                                                    label .\#name
                                                   forward
                                                     match , value \\{ field type def \\}
                                                     match any, value \\{ field type value
                                                			  if ~ field eq .
                                                			   rb sizeof.#parent#field - ($-field)
                                                			  end if \\}
                                                   common \} }
                                                
                                                include 'macro/proc32.inc'
                                                
                                                ; Macroinstructions for defining and calling HLL procedures
                                                
                                                macro stdcall proc,[arg]		; directly call STDCALL procedure
                                                 { common
                                                    if ~ arg eq
                                                   reverse
                                                    pushd arg
                                                   common
                                                    end if
                                                    call proc }
                                                
                                                macro invoke proc,[arg] 		; indirectly call STDCALL procedure
                                                 { common
                                                    if ~ arg eq
                                                   reverse
                                                     pushd arg
                                                   common
                                                    end if
                                                    call [proc] }
                                                
                                                macro ccall proc,[arg]			; directly call CDECL procedure
                                                 { common
                                                    size@ccall = 0
                                                    if ~ arg eq
                                                   reverse
                                                    pushd arg
                                                    size@ccall = size@ccall+4
                                                   common
                                                    end if
                                                    call proc
                                                    if size@ccall
                                                    add esp,size@ccall
                                                    end if }
                                                
                                                macro cinvoke proc,[arg]		; indirectly call CDECL procedure
                                                 { common
                                                    size@ccall = 0
                                                    if ~ arg eq
                                                   reverse
                                                    pushd arg
                                                    size@ccall = size@ccall+4
                                                   common
                                                    end if
                                                    call [proc]
                                                    if size@ccall
                                                    add esp,size@ccall
                                                    end if }
                                                
                                                macro proc [args]			; define procedure
                                                 { common
                                                    match name params, args>
                                                    \{ define@proc name,<params \} }
                                                
                                                prologue@proc equ prologuedef
                                                
                                                macro prologuedef procname,flag,parmbytes,localbytes,reglist
                                                 { if parmbytes | localbytes
                                                    push ebp
                                                    mov ebp,esp
                                                    if localbytes
                                                     sub esp,localbytes
                                                    end if
                                                   end if
                                                   irps reg, reglist \{ push reg \} }
                                                
                                                epilogue@proc equ epiloguedef
                                                
                                                macro epiloguedef procname,flag,parmbytes,localbytes,reglist
                                                 { irps reg, reglist \{ reverse pop reg \}
                                                   if parmbytes | localbytes
                                                    leave
                                                   end if
                                                   if flag and 10000b
                                                    retn
                                                   else
                                                    retn parmbytes
                                                   end if }
                                                
                                                macro define@proc name,statement
                                                 { local params,flag,regs,parmbytes,localbytes,current
                                                   if used name
                                                   name:
                                                   match =stdcall args, statement \{ params equ args
                                                				     flag = 11b \}
                                                   match =stdcall, statement \{ params equ
                                                				flag = 11b \}
                                                   match =c args, statement \{ params equ args
                                                			       flag = 10001b \}
                                                   match =c, statement \{ params equ
                                                			  flag = 10001b \}
                                                   match =params, params \{ params equ statement
                                                			    flag = 0 \}
                                                   virtual at ebp+8
                                                   match =uses reglist=,args, params \{ regs equ reglist
                                                					params equ args \}
                                                   match =regs =uses reglist, regs params \{ regs equ reglist
                                                					     params equ \}
                                                   match =regs, regs \{ regs equ \}
                                                   match =,args, params \{ defargs@proc args \}
                                                   match =args@proc args, args@proc params \{ defargs@proc args \}
                                                   parmbytes = $ - (ebp+8)
                                                   end virtual
                                                   name # % = parmbytes/4
                                                   all@vars equ
                                                   current = 0
                                                   match prologue:reglist, prologue@proc:<regs> \{ prologue name,flag,parmbytes,localbytes,reglist \}
                                                   macro locals
                                                   \{ virtual at ebp-localbytes+current
                                                      macro label . \\{ deflocal@proc .,:, \\}
                                                      struc db [val] \\{ \common deflocal@proc .,db,val \\}
                                                      struc dw [val] \\{ \common deflocal@proc .,dw,val \\}
                                                      struc dp [val] \\{ \common deflocal@proc .,dp,val \\}
                                                      struc dd [val] \\{ \common deflocal@proc .,dd,val \\}
                                                      struc dt [val] \\{ \common deflocal@proc .,dt,val \\}
                                                      struc dq [val] \\{ \common deflocal@proc .,dq,val \\}
                                                      struc rb cnt \\{ deflocal@proc .,rb cnt, \\}
                                                      struc rw cnt \\{ deflocal@proc .,rw cnt, \\}
                                                      struc rp cnt \\{ deflocal@proc .,rp cnt, \\}
                                                      struc rd cnt \\{ deflocal@proc .,rd cnt, \\}
                                                      struc rt cnt \\{ deflocal@proc .,rt cnt, \\}
                                                      struc rq cnt \\{ deflocal@proc .,rq cnt, \\} \}
                                                   macro endl
                                                   \{ purge label
                                                      restruc db,dw,dp,dd,dt,dq
                                                      restruc rb,rw,rp,rd,rt,rq
                                                      restruc byte,word,dword,pword,tword,qword
                                                      current = $-(ebp-localbytes)
                                                      end virtual \}
                                                   macro ret operand
                                                   \{ match any, operand \\{ retn operand \\}
                                                      match , operand \\{ match epilogue:reglist, epilogue@proc:<regs>
                                                			  \\\{ epilogue name,flag,parmbytes,localbytes,reglist \\\} \\} \}
                                                   macro finish@proc \{ localbytes = (((current-1) shr 2)+1) shl 2
                                                			end if \} }
                                                
                                                macro defargs@proc [arg]
                                                 { common
                                                    if ~ arg eq
                                                   forward
                                                     local ..arg,current@arg
                                                     match argname:type, arg
                                                      \{ current@arg equ argname
                                                	 label ..arg type
                                                	 argname equ ..arg
                                                	 if dqword eq type
                                                	   dd ?,?,?,?
                                                	 else if tbyte eq type
                                                	   dd ?,?,?
                                                	 else if qword eq type | pword eq type
                                                	   dd ?,?
                                                	 else
                                                	   dd ?
                                                	 end if \}
                                                     match =current@arg,current@arg
                                                      \{ current@arg equ arg
                                                	 arg equ ..arg
                                                	 ..arg dd ? \}
                                                   common
                                                     args@proc equ current@arg
                                                   forward
                                                     restore current@arg
                                                   common
                                                    end if }
                                                
                                                macro deflocal@proc name,def,[val]
                                                 { common
                                                    match vars, all@vars \{ all@vars equ all@vars, \}
                                                    all@vars equ all@vars name
                                                   forward
                                                    local ..var,..tmp
                                                    ..var def val
                                                    match =?, val \{ ..tmp equ \}
                                                    match any =dup (=?), val \{ ..tmp equ \}
                                                    match tmp : value, ..tmp : val
                                                     \{ tmp: end virtual
                                                	initlocal@proc ..var,def value
                                                	virtual at tmp\}
                                                   common
                                                    match first rest, ..var, \{ name equ first \} }
                                                
                                                macro initlocal@proc name,def
                                                 { virtual at name
                                                    def
                                                    size@initlocal = $ - name
                                                    if size@initlocal = 1
                                                     load byte@initlocal byte from name
                                                    else if size@initlocal = 2
                                                     load word@initlocal word from name
                                                    else if size@initlocal = 3
                                                     load word@initlocal word from name
                                                     load byte@initlocal byte from name+2
                                                    else if size@initlocal >= 4
                                                     load dword@initlocal dword from name
                                                    end if
                                                   end virtual
                                                   if size@initlocal = 1
                                                    mov byte [name],byte@initlocal
                                                   else if size@initlocal = 2
                                                    mov word [name],word@initlocal
                                                   else if size@initlocal = 3
                                                    mov word [name],word@initlocal
                                                    mov byte [name+2],byte@initlocal
                                                   else if size@initlocal >= 4
                                                    mov dword [name],dword@initlocal
                                                    repeat size@initlocal/4
                                                     virtual at name
                                                      def
                                                      size@initlocal = $ - (name+%*4)
                                                      if size@initlocal = 1
                                                       load byte@initlocal byte from name+%*4
                                                      else if size@initlocal = 2
                                                       load word@initlocal word from name+%*4
                                                      else if size@initlocal = 3
                                                       load word@initlocal word from name+%*4
                                                       load byte@initlocal byte from name+%*4+2
                                                      else if size@initlocal >= 4
                                                       load dword@initlocal dword from name+%*4
                                                      end if
                                                     end virtual
                                                     if size@initlocal = 1
                                                      mov byte [name+%*4],byte@initlocal
                                                     else if size@initlocal = 2
                                                      mov word [name+%*4],word@initlocal
                                                     else if size@initlocal = 3
                                                      mov word [name+%*4],word@initlocal
                                                      mov byte [name+%*4+2],byte@initlocal
                                                     else if size@initlocal >= 4
                                                      mov dword [name+%*4],dword@initlocal
                                                     end if
                                                    end repeat
                                                   end if }
                                                
                                                macro endp
                                                 { purge ret,locals,endl
                                                   finish@proc
                                                   purge finish@proc
                                                   restore regs@proc
                                                   match all,args@proc \{ restore all \}
                                                   restore args@proc
                                                   match all,all@vars \{ restore all \} }
                                                
                                                macro local [var]
                                                 { common
                                                    locals
                                                   forward done@local equ
                                                    match varname[count]:vartype, var
                                                    \{ match =BYTE, vartype \\{ varname rb count
                                                				restore done@local \\}
                                                       match =WORD, vartype \\{ varname rw count
                                                				restore done@local \\}
                                                       match =DWORD, vartype \\{ varname rd count
                                                				 restore done@local \\}
                                                       match =PWORD, vartype \\{ varname rp count
                                                				 restore done@local \\}
                                                       match =QWORD, vartype \\{ varname rq count
                                                				 restore done@local \\}
                                                       match =TBYTE, vartype \\{ varname rt count
                                                				 restore done@local \\}
                                                       match =DQWORD, vartype \\{ label varname dqword
                                                				  rq count+count
                                                				  restore done@local \\}
                                                       match , done@local \\{ virtual
                                                			       varname vartype
                                                			      end virtual
                                                			      rb count*sizeof.\#vartype
                                                			      restore done@local \\} \}
                                                    match :varname:vartype, done@local:var
                                                    \{ match =BYTE, vartype \\{ varname db ?
                                                				restore done@local \\}
                                                       match =WORD, vartype \\{ varname dw ?
                                                				restore done@local \\}
                                                       match =DWORD, vartype \\{ varname dd ?
                                                				 restore done@local \\}
                                                       match =PWORD, vartype \\{ varname dp ?
                                                				 restore done@local \\}
                                                       match =QWORD, vartype \\{ varname dq ?
                                                				 restore done@local \\}
                                                       match =TBYTE, vartype \\{ varname dt ?
                                                				 restore done@local \\}
                                                       match =DQWORD, vartype \\{ label varname dqword
                                                				  dq ?,?
                                                				  restore done@local \\}
                                                       match , done@local \\{ varname vartype
                                                			      restore done@local \\} \}
                                                    match ,done@local
                                                    \{ var
                                                       restore done@local \}
                                                   common
                                                    endl }
                                                
                                                include 'macro/com32.inc'
                                                
                                                ; Macroinstructions for interfacing the COM (Component Object Model) classes
                                                
                                                macro cominvk object,proc,[arg]
                                                 { common
                                                    if ~ arg eq
                                                   reverse
                                                     pushd arg
                                                   common
                                                    end if
                                                    mov eax,[object]
                                                    push eax
                                                    mov eax,[eax]
                                                    call [eax+object#.#proc] }
                                                
                                                macro comcall handle,object,proc,[arg]
                                                 { common
                                                    if ~ arg eq
                                                   reverse
                                                     pushd arg
                                                   common
                                                    end if
                                                    if handle eqtype eax | handle eqtype 0
                                                     push handle
                                                     local ..handle
                                                     label ..handle at handle
                                                     mov eax,[..handle]
                                                    else
                                                     mov eax,handle
                                                     push eax
                                                     mov eax,[eax]
                                                    end if
                                                    call [eax+object#.#proc] }
                                                
                                                macro interface name,[proc]
                                                 { common
                                                    struc name \{
                                                    match any, fields@struct \\{ fields@struct equ fields@struct,.,name, \\}
                                                    match , fields@struct \\{ . dd ?
                                                    virtual at 0
                                                   forward
                                                    .#proc dd ?
                                                   common
                                                    end virtual \\} \}
                                                    virtual at 0
                                                   forward
                                                     name#.#proc dd ?
                                                   common
                                                    end virtual }
                                                
                                                
                                                include 'macro/import32.inc'
                                                
                                                ; Macroinstructions for making import section
                                                
                                                macro library [name,string]
                                                 { forward
                                                    local _label
                                                    if defined name#.redundant
                                                     if ~ name#.redundant
                                                      dd RVA name#.lookup,0,0,RVA _label,RVA name#.address
                                                     end if
                                                    end if
                                                   common
                                                    dd 0,0,0,0,0
                                                   forward
                                                    if defined name#.redundant
                                                     if ~ name#.redundant
                                                      _label db string,0
                                                     end if
                                                    end if }
                                                
                                                macro import name,[label,string]
                                                 { common
                                                    name#.lookup:
                                                   forward
                                                    if used label
                                                     if string eqtype ''
                                                      local _label
                                                      dd RVA _label
                                                     else
                                                      dd 80000000h + string
                                                     end if
                                                    end if
                                                   common
                                                    if $ > name#.lookup
                                                     name#.redundant = 0
                                                     dd 0
                                                    else
                                                     name#.redundant = 1
                                                    end if
                                                    name#.address:
                                                   forward
                                                    if used label
                                                     if string eqtype ''
                                                      label dd RVA _label
                                                     else
                                                      label dd 80000000h + string
                                                     end if
                                                    end if
                                                   common
                                                    if ~ name#.redundant
                                                     dd 0
                                                    end if
                                                   forward
                                                    if used label & string eqtype ''
                                                    _label dw 0
                                                	   db string,0
                                                    end if }
                                                
                                                include 'macro/export.inc'
                                                
                                                ; Macroinstruction for making export section
                                                
                                                macro export dllname,[label,string]
                                                 { common
                                                    local module,addresses,names,ordinal,count
                                                    count = 0
                                                   forward
                                                    count = count+1
                                                   common
                                                    dd 0,0,0,RVA module,1
                                                    dd count,count,RVA addresses,RVA names,RVA ordinal
                                                    addresses:
                                                   forward
                                                    dd RVA label
                                                   common
                                                    names:
                                                   forward
                                                    local name
                                                    dd RVA name
                                                   common
                                                    ordinal: count = 0
                                                   forward
                                                    dw count
                                                    count = count+1
                                                   common
                                                    module db dllname,0
                                                   forward
                                                    name db string,0
                                                   common
                                                    local x,y,z,str1,str2,v1,v2
                                                    x = count shr 1
                                                    while x > 0
                                                     y = x
                                                     while y < count
                                                      z = y
                                                      while z-x >= 0
                                                       load v1 dword from names+z*4
                                                       str1=($-RVA $)+v1
                                                       load v2 dword from names+(z-x)*4
                                                       str2=($-RVA $)+v2
                                                       while v1 > 0
                                                	load v1 from str1+%-1
                                                	load v2 from str2+%-1
                                                	if v1 <> v2
                                                	 break
                                                	end if
                                                       end while
                                                       if v1<v2
                                                	load v1 dword from names+z*4
                                                	load v2 dword from names+(z-x)*4
                                                	store dword v1 at names+(z-x)*4
                                                	store dword v2 at names+z*4
                                                	load v1 word from ordinal+z*2
                                                	load v2 word from ordinal+(z-x)*2
                                                	store word v1 at ordinal+(z-x)*2
                                                	store word v2 at ordinal+z*2
                                                       else
                                                	break
                                                       end if
                                                       z = z-x
                                                      end while
                                                      y = y+1
                                                     end while
                                                     x = x shr 1
                                                    end while }
                                                
                                                include 'macro/resource.inc'
                                                
                                                ; Macroinstructions for making resource section
                                                
                                                macro directory [type,label]
                                                 { common
                                                    local max,count
                                                    count = 0
                                                    max = 0
                                                   forward
                                                    count = count + 1
                                                    if type > max
                                                     max = type
                                                    end if
                                                   common
                                                    root@resource dd 0,%t,0,count shl 16
                                                    repeat max
                                                   forward
                                                    if % = type
                                                     dd type,80000000h+label-root@resource
                                                    end if
                                                   common
                                                    end repeat }
                                                
                                                macro resource dir,[id,lang,label]
                                                 { common
                                                    dir:
                                                    local min,max,count,current
                                                   forward
                                                    min = id
                                                    max = id
                                                   common
                                                    count = 0
                                                   forward
                                                    count = count + 1
                                                    if id < min
                                                     min = id
                                                    else if id > max
                                                     max = id
                                                    end if
                                                   common
                                                    dd 0,%t,0,count shl 16
                                                    repeat max-min+1
                                                     current = $
                                                   forward
                                                     if min+%-1 = id
                                                      if current = $
                                                       dd id,80000000h+label#.directory-root@resource
                                                      end if
                                                     end if
                                                   common
                                                    end repeat
                                                    repeat max-min+1
                                                     current = $
                                                   forward
                                                     if min+%-1 = id
                                                      if current = $
                                                       label#.directory dd 0,%t,0,10000h,lang,label-root@resource
                                                       count = 1
                                                      else
                                                       dd lang,label-root@resource
                                                       count = count + 1
                                                      end if
                                                     end if
                                                     label#.resid = id
                                                   common
                                                     local x,y,z,v1,v2
                                                     if count > 1
                                                      store word count at current+0Eh
                                                      x = count shr 1
                                                      while x > 0
                                                       y = x
                                                       while y < count
                                                	z = y
                                                	while z-x >= 0
                                                	 load v1 dword from current+10h+z*8
                                                	 load v2 dword from current+10h+(z-x)*8
                                                	 if v1<v2
                                                	  store dword v1 at current+10h+(z-x)*8
                                                	  store dword v2 at current+10h+z*8
                                                	  load v1 dword from current+10h+z*8+4
                                                	  load v2 dword from current+10h+(z-x)*8+4
                                                	  store dword v1 at current+10h+(z-x)*8+4
                                                	  store dword v2 at current+10h+z*8+4
                                                	 else
                                                	  break
                                                	 end if
                                                	 z = z-x
                                                	end while
                                                	y = y+1
                                                       end while
                                                       x = x shr 1
                                                      end while
                                                     end if
                                                    end repeat }
                                                
                                                macro bitmap label,bitmap_file
                                                 { local data,size
                                                   label dd RVA data,size,0,0
                                                   data file bitmap_file:0Eh
                                                   size = $ - data
                                                   align 4 }
                                                
                                                macro icon group,[label,icon_file]
                                                 { common local count
                                                    count = 0
                                                   forward local data,size,position
                                                    label dd RVA data,size,0,0
                                                    virtual at 0
                                                     file icon_file:6,16
                                                     load size dword from 8
                                                     load position dword from 12
                                                    end virtual
                                                    data file icon_file:position,size
                                                    count = count+1
                                                   common local header
                                                    align 4
                                                    group dd RVA header,6+count*14,0,0
                                                    header dw 0,1,count
                                                   forward
                                                    file icon_file:6,12
                                                    dw label#.resid
                                                   common
                                                    align 4 }
                                                
                                                macro cursor group,[label,cursor_file]
                                                 { common local count
                                                    count = 0
                                                   forward local data,width,height,size,position
                                                    label dd RVA data,size+4,0,0
                                                    virtual at 0
                                                     file cursor_file:6,16
                                                     load width byte from 0
                                                     load height byte from 1
                                                     load size dword from 8
                                                     load position dword from 12
                                                    end virtual
                                                    data file cursor_file:10,4
                                                	 file cursor_file:position,size
                                                    count = count+1
                                                   common local header
                                                    align 4
                                                    group dd RVA header,6+count*14,0,0
                                                    header dw 0,2,count
                                                   forward
                                                    dw width,height,1,0
                                                    dd size+4
                                                    dw label#.resid
                                                   common
                                                    align 4 }
                                                
                                                macro menu label
                                                 { local data,size
                                                   label dd RVA data,size,0,0
                                                   data dw 1,4,0,0
                                                   menu_size equ size = $ - data
                                                   menu_level = 1 }
                                                
                                                macro menuitem string,id,resinfo,status,type
                                                 { dd MFT_STRING or type+0,status+0,id
                                                   dw resinfo+0
                                                   du string,0
                                                   align 4
                                                   if ~ resinfo eq
                                                    if resinfo and MFR_END
                                                     menu_level = menu_level - 1
                                                    end if
                                                    if resinfo and MFR_POPUP
                                                     menu_level = menu_level + 1
                                                     dd 0
                                                    end if
                                                   end if
                                                   if menu_level = 0
                                                    menu_size
                                                   end if }
                                                
                                                macro menuseparator resinfo
                                                 { dd MFT_SEPARATOR,0,0
                                                   dw resinfo+0,0
                                                   if ~ resinfo eq
                                                    if resinfo and MFR_END
                                                     menu_level = menu_level - 1
                                                    end if
                                                   end if
                                                   if menu_level = 0
                                                    menu_size
                                                   end if }
                                                
                                                macro dialog label,title,x,y,cx,cy,style,exstyle,menu,fontname,fontsize
                                                 { local data,size,items
                                                   label dd RVA data,size,0,0
                                                   data dd style or DS_SETFONT,exstyle +0
                                                   dw items,x,y,cx,cy
                                                   if menu+0 <> 0
                                                    dw 0FFFFh
                                                   end if
                                                   du menu+0,0,title,0
                                                   if fontname eq
                                                    du 8,'MS Sans Serif',0
                                                   else
                                                    du fontsize+0,fontname,0
                                                   end if
                                                   align 4
                                                   dialog_size equ size = $ - data
                                                   dialog_items equ items = dialog_items_counter
                                                   dialog_items_counter = 0 }
                                                
                                                macro dialogitem class,title,id,x,y,cx,cy,style,exstyle
                                                 { dd style or WS_CHILD,exstyle +0
                                                   dw x,y,cx,cy,id
                                                   if class eq 'BUTTON'
                                                    dw 0FFFFh,80h
                                                   else if class eq 'EDIT'
                                                    dw 0FFFFh,81h
                                                   else if class eq 'STATIC'
                                                    dw 0FFFFh,82h
                                                   else if class eq 'LISTBOX'
                                                    dw 0FFFFh,83h
                                                   else if class eq 'SCROLLBAR'
                                                    dw 0FFFFh,84h
                                                   else if class eq 'COMBOBOX'
                                                    dw 0FFFFh,85h
                                                   else
                                                    du class,0
                                                   end if
                                                   if title eqtype 0
                                                    dw 0FFFFh,title
                                                   else
                                                    du title,0
                                                   end if
                                                   dw 0
                                                   align 4
                                                   dialog_items_counter = dialog_items_counter + 1 }
                                                
                                                macro enddialog
                                                 { dialog_items
                                                   dialog_size }
                                                
                                                macro accelerator label,[fvirt,key,cmd]
                                                 { common
                                                    local data,size
                                                    label dd RVA data,size,0,0
                                                    data:
                                                    accel_count = 0
                                                   forward
                                                    accel_count = accel_count + 1
                                                   common
                                                    size = accel_count * 8
                                                   forward
                                                    accel_count = accel_count - 1
                                                    if accel_count = 0
                                                     dw fvirt or 80h,key
                                                    else
                                                     dw fvirt,key
                                                    end if
                                                    dd cmd }
                                                
                                                macro versioninfo label,fileos,filetype,filesubtype,lang,cp,[name,value]
                                                 { common
                                                    local data,size,vivalue,visize
                                                    label dd RVA data,size,0,0
                                                    data dw size,visize,0
                                                    du 'VS_VERSION_INFO',0,0
                                                    vivalue dd 0FEEF04BDh,00010000h
                                                    local version,count,shift,char,filever,productver
                                                    filever = 0
                                                    productver = 0
                                                   forward
                                                    if name eq 'FileVersion' | name eq 'ProductVersion'
                                                     virtual at 0
                                                      db value
                                                      count = $
                                                      version = 0
                                                      shift = 16
                                                      repeat count
                                                       load char from %-1
                                                       if char='.'
                                                	if shift mod 32
                                                	 shift = shift-16
                                                	else
                                                	 shift = shift+32+16
                                                	end if
                                                       else
                                                	version = (version and not (0FFFFh shl shift)) or ((version shr shift and 0FFFFh)*10+char-'0') shl shift
                                                       end if
                                                      end repeat
                                                     end virtual
                                                     if name eq 'FileVersion'
                                                      filever = version
                                                     else if name eq 'ProductVersion'
                                                      productver = version
                                                     end if
                                                    end if
                                                   common
                                                    dq filever,productver
                                                    dd 0,0,fileos,filetype+0,filesubtype+0,0,0
                                                    visize = $ - vivalue
                                                    local sfi_data,sfi_size
                                                    sfi_data dd sfi_size
                                                    du 1,'StringFileInfo',0
                                                    local str_data,str_size
                                                    str_data dd str_size
                                                    du 1,'040904E4',0
                                                   forward
                                                    local vs_data,vs_size,value_data,value_size
                                                    align 4
                                                    vs_data dw vs_size,value_size/2
                                                    du 1,name,0
                                                    align 4
                                                    value_data du value,0
                                                    value_size = $ - value_data
                                                    vs_size = $ - vs_data
                                                   common
                                                    align 4
                                                    str_size = $ - str_data
                                                    sfi_size = $ - sfi_data
                                                    local vfi_data,vfi_size,var_data,var_size
                                                    vfi_data dd vfi_size
                                                    du 1,'VarFileInfo',0,0
                                                    var_data dw var_size,4
                                                    du 0,'Translation',0,0
                                                    dw lang,cp+0
                                                    var_size = $ - var_data
                                                    vfi_size = $ - vfi_data
                                                    size = $ - data }
                                                
                                                macro resdata label
                                                { local data,size
                                                  label dd RVA data,size,0,0
                                                  data = $
                                                  ressize equ size = $ - data }
                                                
                                                macro endres
                                                { ressize
                                                  align 4 }
                                                
                                                
                                                struc CHAR val { match any, val \{ . db val \}
                                                		 match , val \{ . db ? \} }
                                                
                                                include 'equates/kernel32.inc'
                                                
                                                ; KERNEL32.DLL structures and constants
                                                
                                                struct SYSTEM_INFO
                                                  wProcessorArchitecture      dw ?
                                                  wReserved		      dw ?
                                                  dwPageSize		      dd ?
                                                  lpMinimumApplicationAddress dd ?
                                                  lpMaximumApplicationAddress dd ?
                                                  dwActiveProcessorMask       dd ?
                                                  dwNumberOfProcessors	      dd ?
                                                  dwProcessorType	      dd ?
                                                  dwAllocationGranularity     dd ?
                                                  wProcessorLevel	      dw ?
                                                  wProcessorRevision	      dw ?
                                                ends
                                                
                                                struct OSVERSIONINFO
                                                  dwOSVersionInfoSize dd ?
                                                  dwMajorVersion      dd ?
                                                  dwMinorVersion      dd ?
                                                  dwBuildNumber       dd ?
                                                  dwPlatformId	      dd ?
                                                  szCSDVersion	      db 128 dup (?)
                                                ends
                                                
                                                struct MEMORYSTATUS
                                                  dwiLength	  dd ?
                                                  dwMemoryLoad	  dd ?
                                                  dwTotalPhys	  dd ?
                                                  dwAvailPhys	  dd ?
                                                  dwTotalPageFile dd ?
                                                  dwAvailPageFile dd ?
                                                  dwTotalVirtual  dd ?
                                                  dwAvailVirtual  dd ?
                                                ends
                                                
                                                struct STARTUPINFO
                                                  cb		  dd ?
                                                  lpReserved	  dd ?
                                                  lpDesktop	  dd ?
                                                  lpTitle	  dd ?
                                                  dwX		  dd ?
                                                  dwY		  dd ?
                                                  dwXSize	  dd ?
                                                  dwYSize	  dd ?
                                                  dwXCountChars   dd ?
                                                  dwYCountChars   dd ?
                                                  dwFillAttribute dd ?
                                                  dwFlags	  dd ?
                                                  wShowWindow	  dw ?
                                                  cbReserved2	  dw ?
                                                  lpReserved2	  dd ?
                                                  hStdInput	  dd ?
                                                  hStdOutput	  dd ?
                                                  hStdError	  dd ?
                                                ends
                                                
                                                struct PROCESS_INFORMATION
                                                  hProcess    dd ?
                                                  hThread     dd ?
                                                  dwProcessId dd ?
                                                  dwThreadId  dd ?
                                                ends
                                                
                                                struct FILETIME
                                                  dwLowDateTime  dd ?
                                                  dwHighDateTime dd ?
                                                ends
                                                
                                                struct SYSTEMTIME
                                                  wYear 	dw ?
                                                  wMonth	dw ?
                                                  wDayOfWeek	dw ?
                                                  wDay		dw ?
                                                  wHour 	dw ?
                                                  wMinute	dw ?
                                                  wSecond	dw ?
                                                  wMilliseconds dw ?
                                                ends
                                                
                                                struct BY_HANDLE_FILE_INFORMATION
                                                  dwFileAttributes     dd ?
                                                  ftCreationTime       FILETIME
                                                  ftLastAccessTime     FILETIME
                                                  ftLastWriteTime      FILETIME
                                                  dwVolumeSerialNumber dd ?
                                                  nFileSizeHigh        dd ?
                                                  nFileSizeLow	       dd ?
                                                  nNumberOfLinks       dd ?
                                                  nFileIndexHigh       dd ?
                                                  nFileIndexLow        dd ?
                                                ends
                                                
                                                struct FINDDATA
                                                  dwFileAttributes   dd ?
                                                  ftCreationTime     FILETIME
                                                  ftLastAccessTime   FILETIME
                                                  ftLastWriteTime    FILETIME
                                                  nFileSizeHigh      dd ?
                                                  nFileSizeLow	     dd ?
                                                  dwReserved0	     dd ?
                                                  dwReserved1	     dd ?
                                                  cFileName	     db 260 dup (?)
                                                  cAlternateFileName db 14 dup (?)
                                                ends
                                                
                                                ; General constants
                                                
                                                NULL  = 0
                                                TRUE  = 1
                                                FALSE = 0
                                                
                                                ; Access rights
                                                
                                                DELETE_RIGHT		  = 00010000h
                                                READ_CONTROL		  = 00020000h
                                                WRITE_DAC		  = 00040000h
                                                WRITE_OWNER		  = 00080000h
                                                SYNCHRONIZE		  = 00100000h
                                                STANDARD_RIGHTS_READ	  = READ_CONTROL
                                                STANDARD_RIGHTS_WRITE	  = READ_CONTROL
                                                STANDARD_RIGHTS_EXECUTE   = READ_CONTROL
                                                STANDARD_RIGHTS_REQUIRED  = 000F0000h
                                                STANDARD_RIGHTS_ALL	  = 001F0000h
                                                SPECIFIC_RIGHTS_ALL	  = 0000FFFFh
                                                ACCESS_SYSTEM_SECURITY	  = 01000000h
                                                MAXIMUM_ALLOWED 	  = 02000000h
                                                GENERIC_READ		  = 80000000h
                                                GENERIC_WRITE		  = 40000000h
                                                GENERIC_EXECUTE 	  = 20000000h
                                                GENERIC_ALL		  = 10000000h
                                                PROCESS_TERMINATE	  = 00000001h
                                                PROCESS_CREATE_THREAD	  = 00000002h
                                                PROCESS_VM_OPERATION	  = 00000008h
                                                PROCESS_VM_READ 	  = 00000010h
                                                PROCESS_VM_WRITE	  = 00000020h
                                                PROCESS_DUP_HANDLE	  = 00000040h
                                                PROCESS_CREATE_PROCESS	  = 00000080h
                                                PROCESS_SET_QUOTA	  = 00000100h
                                                PROCESS_SET_INFORMATION   = 00000200h
                                                PROCESS_QUERY_INFORMATION = 00000400h
                                                PROCESS_ALL_ACCESS	  = STANDARD_RIGHTS_REQUIRED or SYNCHRONIZE or 0FFFh
                                                FILE_SHARE_READ 	  = 00000001h
                                                FILE_SHARE_WRITE	  = 00000002h
                                                FILE_SHARE_DELETE	  = 00000004h
                                                
                                                ; CreateFile actions
                                                
                                                CREATE_NEW	  = 1
                                                CREATE_ALWAYS	  = 2
                                                OPEN_EXISTING	  = 3
                                                OPEN_ALWAYS	  = 4
                                                TRUNCATE_EXISTING = 5
                                                
                                                ; OpenFile modes
                                                
                                                OF_READ 	    = 0000h
                                                OF_WRITE	    = 0001h
                                                OF_READWRITE	    = 0002h
                                                OF_SHARE_COMPAT     = 0000h
                                                OF_SHARE_EXCLUSIVE  = 0010h
                                                OF_SHARE_DENY_WRITE = 0020h
                                                OF_SHARE_DENY_READ  = 0030h
                                                OF_SHARE_DENY_NONE  = 0040h
                                                OF_PARSE	    = 0100h
                                                OF_DELETE	    = 0200h
                                                OF_VERIFY	    = 0400h
                                                OF_CANCEL	    = 0800h
                                                OF_CREATE	    = 1000h
                                                OF_PROMPT	    = 2000h
                                                OF_EXIST	    = 4000h
                                                OF_REOPEN	    = 8000h
                                                
                                                ; SetFilePointer methods
                                                
                                                FILE_BEGIN   = 0
                                                FILE_CURRENT = 1
                                                FILE_END     = 2
                                                
                                                ; File attributes
                                                
                                                FILE_ATTRIBUTE_READONLY   = 001h
                                                FILE_ATTRIBUTE_HIDDEN	  = 002h
                                                FILE_ATTRIBUTE_SYSTEM	  = 004h
                                                FILE_ATTRIBUTE_DIRECTORY  = 010h
                                                FILE_ATTRIBUTE_ARCHIVE	  = 020h
                                                FILE_ATTRIBUTE_NORMAL	  = 080h
                                                FILE_ATTRIBUTE_TEMPORARY  = 100h
                                                FILE_ATTRIBUTE_COMPRESSED = 800h
                                                
                                                ; File flags
                                                
                                                FILE_FLAG_WRITE_THROUGH    = 80000000h
                                                FILE_FLAG_OVERLAPPED	   = 40000000h
                                                FILE_FLAG_NO_BUFFERING	   = 20000000h
                                                FILE_FLAG_RANDOM_ACCESS    = 10000000h
                                                FILE_FLAG_SEQUENTIAL_SCAN  = 08000000h
                                                FILE_FLAG_DELETE_ON_CLOSE  = 04000000h
                                                FILE_FLAG_BACKUP_SEMANTICS = 02000000h
                                                FILE_FLAG_POSIX_SEMANTICS  = 01000000h
                                                
                                                ; Notify filters
                                                
                                                FILE_NOTIFY_CHANGE_FILE_NAME  = 001h
                                                FILE_NOTIFY_CHANGE_DIR_NAME   = 002h
                                                FILE_NOTIFY_CHANGE_ATTRIBUTES = 004h
                                                FILE_NOTIFY_CHANGE_SIZE       = 008h
                                                FILE_NOTIFY_CHANGE_LAST_WRITE = 010h
                                                FILE_NOTIFY_CHANGE_SECURITY   = 100h
                                                
                                                ; File types
                                                
                                                FILE_TYPE_UNKNOWN = 0
                                                FILE_TYPE_DISK	  = 1
                                                FILE_TYPE_CHAR	  = 2
                                                FILE_TYPE_PIPE	  = 3
                                                FILE_TYPE_REMOTE  = 8000h
                                                
                                                ; LockFileEx flags
                                                
                                                LOCKFILE_FAIL_IMMEDIATELY = 1
                                                LOCKFILE_EXCLUSIVE_LOCK   = 2
                                                
                                                ; MoveFileEx flags
                                                
                                                MOVEFILE_REPLACE_EXISTING   = 1
                                                MOVEFILE_COPY_ALLOWED	    = 2
                                                MOVEFILE_DELAY_UNTIL_REBOOT = 4
                                                MOVEFILE_WRITE_THROUGH	    = 8
                                                
                                                ; FindFirstFileEx flags
                                                
                                                FIND_FIRST_EX_CASE_SENSITIVE = 1
                                                
                                                ; Device handles
                                                
                                                INVALID_HANDLE_VALUE = -1
                                                STD_INPUT_HANDLE     = -10
                                                STD_OUTPUT_HANDLE    = -11
                                                STD_ERROR_HANDLE     = -12
                                                
                                                ; DuplicateHandle options
                                                
                                                DUPLICATE_CLOSE_SOURCE = 1
                                                DUPLICATE_SAME_ACCESS  = 2
                                                
                                                ; File mapping acccess rights
                                                
                                                SECTION_QUERY	    = 01h
                                                SECTION_MAP_WRITE   = 02h
                                                SECTION_MAP_READ    = 04h
                                                SECTION_MAP_EXECUTE = 08h
                                                SECTION_EXTEND_SIZE = 10h
                                                SECTION_ALL_ACCESS  = STANDARD_RIGHTS_REQUIRED or SECTION_QUERY or SECTION_MAP_WRITE or SECTION_MAP_READ or SECTION_MAP_EXECUTE or SECTION_EXTEND_SIZE
                                                FILE_MAP_COPY	    = SECTION_QUERY
                                                FILE_MAP_WRITE	    = SECTION_MAP_WRITE
                                                FILE_MAP_READ	    = SECTION_MAP_READ
                                                FILE_MAP_ALL_ACCESS = SECTION_ALL_ACCESS
                                                
                                                ; File system flags
                                                
                                                FILE_CASE_SENSITIVE_SEARCH = 0001h
                                                FILE_CASE_PRESERVED_NAMES  = 0002h
                                                FILE_UNICODE_ON_DISK	   = 0004h
                                                FILE_PERSISTENT_ACLS	   = 0008h
                                                FILE_FILE_COMPRESSION	   = 0010h
                                                FILE_VOLUME_IS_COMPRESSED  = 8000h
                                                FS_CASE_IS_PRESERVED	   = FILE_CASE_PRESERVED_NAMES
                                                FS_CASE_SENSITIVE	   = FILE_CASE_SENSITIVE_SEARCH
                                                FS_UNICODE_STORED_ON_DISK  = FILE_UNICODE_ON_DISK
                                                FS_PERSISTENT_ACLS	   = FILE_PERSISTENT_ACLS
                                                
                                                ; Drive types
                                                
                                                DRIVE_UNKNOWN	  = 0
                                                DRIVE_NO_ROOT_DIR = 1
                                                DRIVE_REMOVABLE   = 2
                                                DRIVE_FIXED	  = 3
                                                DRIVE_REMOTE	  = 4
                                                DRIVE_CDROM	  = 5
                                                DRIVE_RAMDISK	  = 6
                                                
                                                ; Pipe modes
                                                
                                                PIPE_ACCESS_INBOUND	 = 1
                                                PIPE_ACCESS_OUTBOUND	 = 2
                                                PIPE_ACCESS_DUPLEX	 = 3
                                                PIPE_CLIENT_END 	 = 0
                                                PIPE_SERVER_END 	 = 1
                                                PIPE_WAIT		 = 0
                                                PIPE_NOWAIT		 = 1
                                                PIPE_READMODE_BYTE	 = 0
                                                PIPE_READMODE_MESSAGE	 = 2
                                                PIPE_TYPE_BYTE		 = 0
                                                PIPE_TYPE_MESSAGE	 = 4
                                                PIPE_UNLIMITED_INSTANCES = 255
                                                
                                                ; Global memory flags
                                                
                                                GMEM_FIXED	       = 0000h
                                                GMEM_MOVEABLE	       = 0002h
                                                GMEM_NOCOMPACT	       = 0010h
                                                GMEM_NODISCARD	       = 0020h
                                                GMEM_ZEROINIT	       = 0040h
                                                GMEM_MODIFY	       = 0080h
                                                GMEM_DISCARDABLE       = 0100h
                                                GMEM_NOT_BANKED        = 1000h
                                                GMEM_SHARE	       = 2000h
                                                GMEM_DDESHARE	       = 2000h
                                                GMEM_NOTIFY	       = 4000h
                                                GMEM_LOWER	       = GMEM_NOT_BANKED
                                                GMEM_VALID_FLAGS       = 7F72h
                                                GMEM_INVALID_HANDLE    = 8000h
                                                GMEM_DISCARDED	       = 4000h
                                                GMEM_LOCKCOUNT	       = 0FFh
                                                GHND		       = GMEM_MOVEABLE + GMEM_ZEROINIT
                                                GPTR		       = GMEM_FIXED + GMEM_ZEROINIT
                                                
                                                ; Local memory flags
                                                
                                                LMEM_FIXED	       = 0000h
                                                LMEM_MOVEABLE	       = 0002h
                                                LMEM_NOCOMPACT	       = 0010h
                                                LMEM_NODISCARD	       = 0020h
                                                LMEM_ZEROINIT	       = 0040h
                                                LMEM_MODIFY	       = 0080h
                                                LMEM_DISCARDABLE       = 0F00h
                                                LMEM_VALID_FLAGS       = 0F72h
                                                LMEM_INVALID_HANDLE    = 8000h
                                                LHND		       = LMEM_MOVEABLE + LMEM_ZEROINIT
                                                LPTR		       = LMEM_FIXED + LMEM_ZEROINIT
                                                LMEM_DISCARDED	       = 4000h
                                                LMEM_LOCKCOUNT	       = 00FFh
                                                
                                                ; Page access flags
                                                
                                                PAGE_NOACCESS	       = 001h
                                                PAGE_READONLY	       = 002h
                                                PAGE_READWRITE	       = 004h
                                                PAGE_WRITECOPY	       = 008h
                                                PAGE_EXECUTE	       = 010h
                                                PAGE_EXECUTE_READ      = 020h
                                                PAGE_EXECUTE_READWRITE = 040h
                                                PAGE_EXECUTE_WRITECOPY = 080h
                                                PAGE_GUARD	       = 100h
                                                PAGE_NOCACHE	       = 200h
                                                
                                                ; Memory allocation flags
                                                
                                                MEM_COMMIT	       = 001000h
                                                MEM_RESERVE	       = 002000h
                                                MEM_DECOMMIT	       = 004000h
                                                MEM_RELEASE	       = 008000h
                                                MEM_FREE	       = 010000h
                                                MEM_PRIVATE	       = 020000h
                                                MEM_MAPPED	       = 040000h
                                                MEM_RESET	       = 080000h
                                                MEM_TOP_DOWN	       = 100000h
                                                
                                                ; Heap allocation flags
                                                
                                                HEAP_NO_SERIALIZE	 = 1
                                                HEAP_GENERATE_EXCEPTIONS = 4
                                                HEAP_ZERO_MEMORY	 = 8
                                                
                                                ; Platform identifiers
                                                
                                                VER_PLATFORM_WIN32s	   = 0
                                                VER_PLATFORM_WIN32_WINDOWS = 1
                                                VER_PLATFORM_WIN32_NT	   = 2
                                                
                                                ; GetBinaryType return values
                                                
                                                SCS_32BIT_BINARY = 0
                                                SCS_DOS_BINARY	 = 1
                                                SCS_WOW_BINARY	 = 2
                                                SCS_PIF_BINARY	 = 3
                                                SCS_POSIX_BINARY = 4
                                                SCS_OS216_BINARY = 5
                                                
                                                ; CreateProcess flags
                                                
                                                DEBUG_PROCESS		 = 001h
                                                DEBUG_ONLY_THIS_PROCESS  = 002h
                                                CREATE_SUSPENDED	 = 004h
                                                DETACHED_PROCESS	 = 008h
                                                CREATE_NEW_CONSOLE	 = 010h
                                                NORMAL_PRIORITY_CLASS	 = 020h
                                                IDLE_PRIORITY_CLASS	 = 040h
                                                HIGH_PRIORITY_CLASS	 = 080h
                                                REALTIME_PRIORITY_CLASS  = 100h
                                                CREATE_NEW_PROCESS_GROUP = 200h
                                                CREATE_SEPARATE_WOW_VDM  = 800h
                                                
                                                ; Thread priority values
                                                
                                                THREAD_BASE_PRIORITY_MIN      = -2
                                                THREAD_BASE_PRIORITY_MAX      = 2
                                                THREAD_BASE_PRIORITY_LOWRT    = 15
                                                THREAD_BASE_PRIORITY_IDLE     = -15
                                                THREAD_PRIORITY_LOWEST	      = THREAD_BASE_PRIORITY_MIN
                                                THREAD_PRIORITY_BELOW_NORMAL  = THREAD_PRIORITY_LOWEST + 1
                                                THREAD_PRIORITY_NORMAL	      = 0
                                                THREAD_PRIORITY_HIGHEST       = THREAD_BASE_PRIORITY_MAX
                                                THREAD_PRIORITY_ABOVE_NORMAL  = THREAD_PRIORITY_HIGHEST - 1
                                                THREAD_PRIORITY_ERROR_RETURN  = 7FFFFFFFh
                                                THREAD_PRIORITY_TIME_CRITICAL = THREAD_BASE_PRIORITY_LOWRT
                                                THREAD_PRIORITY_IDLE	      = THREAD_BASE_PRIORITY_IDLE
                                                
                                                ; Startup flags
                                                
                                                STARTF_USESHOWWINDOW	= 001h
                                                STARTF_USESIZE		= 002h
                                                STARTF_USEPOSITION	= 004h
                                                STARTF_USECOUNTCHARS	= 008h
                                                STARTF_USEFILLATTRIBUTE = 010h
                                                STARTF_RUNFULLSCREEN	= 020h
                                                STARTF_FORCEONFEEDBACK	= 040h
                                                STARTF_FORCEOFFFEEDBACK = 080h
                                                STARTF_USESTDHANDLES	= 100h
                                                
                                                ; Shutdown flags
                                                
                                                SHUTDOWN_NORETRY = 1h
                                                
                                                ; LoadLibraryEx flags
                                                
                                                DONT_RESOLVE_DLL_REFERENCES   = 1
                                                LOAD_LIBRARY_AS_DATAFILE      = 2
                                                LOAD_WITH_ALTERED_SEARCH_PATH = 8
                                                
                                                ; DLL entry-point calls
                                                
                                                DLL_PROCESS_DETACH = 0
                                                DLL_PROCESS_ATTACH = 1
                                                DLL_THREAD_ATTACH  = 2
                                                DLL_THREAD_DETACH  = 3
                                                
                                                ; Status codes
                                                
                                                STATUS_WAIT_0			= 000000000h
                                                STATUS_ABANDONED_WAIT_0 	= 000000080h
                                                STATUS_USER_APC 		= 0000000C0h
                                                STATUS_TIMEOUT			= 000000102h
                                                STATUS_PENDING			= 000000103h
                                                STATUS_DATATYPE_MISALIGNMENT	= 080000002h
                                                STATUS_BREAKPOINT		= 080000003h
                                                STATUS_SINGLE_STEP		= 080000004h
                                                STATUS_ACCESS_VIOLATION 	= 0C0000005h
                                                STATUS_IN_PAGE_ERROR		= 0C0000006h
                                                STATUS_NO_MEMORY		= 0C0000017h
                                                STATUS_ILLEGAL_INSTRUCTION	= 0C000001Dh
                                                STATUS_NONCONTINUABLE_EXCEPTION = 0C0000025h
                                                STATUS_INVALID_DISPOSITION	= 0C0000026h
                                                STATUS_ARRAY_BOUNDS_EXCEEDED	= 0C000008Ch
                                                STATUS_FLOAT_DENORMAL_OPERAND	= 0C000008Dh
                                                STATUS_FLOAT_DIVIDE_BY_ZERO	= 0C000008Eh
                                                STATUS_FLOAT_INEXACT_RESULT	= 0C000008Fh
                                                STATUS_FLOAT_INVALID_OPERATION	= 0C0000090h
                                                STATUS_FLOAT_OVERFLOW		= 0C0000091h
                                                STATUS_FLOAT_STACK_CHECK	= 0C0000092h
                                                STATUS_FLOAT_UNDERFLOW		= 0C0000093h
                                                STATUS_INTEGER_DIVIDE_BY_ZERO	= 0C0000094h
                                                STATUS_INTEGER_OVERFLOW 	= 0C0000095h
                                                STATUS_PRIVILEGED_INSTRUCTION	= 0C0000096h
                                                STATUS_STACK_OVERFLOW		= 0C00000FDh
                                                STATUS_CONTROL_C_EXIT		= 0C000013Ah
                                                WAIT_FAILED			= -1
                                                WAIT_OBJECT_0			= STATUS_WAIT_0
                                                WAIT_ABANDONED			= STATUS_ABANDONED_WAIT_0
                                                WAIT_ABANDONED_0		= STATUS_ABANDONED_WAIT_0
                                                WAIT_TIMEOUT			= STATUS_TIMEOUT
                                                WAIT_IO_COMPLETION		= STATUS_USER_APC
                                                STILL_ACTIVE			= STATUS_PENDING
                                                
                                                ; Exception codes
                                                
                                                EXCEPTION_CONTINUABLE		= 0
                                                EXCEPTION_NONCONTINUABLE	= 1
                                                EXCEPTION_ACCESS_VIOLATION	= STATUS_ACCESS_VIOLATION
                                                EXCEPTION_DATATYPE_MISALIGNMENT = STATUS_DATATYPE_MISALIGNMENT
                                                EXCEPTION_BREAKPOINT		= STATUS_BREAKPOINT
                                                EXCEPTION_SINGLE_STEP		= STATUS_SINGLE_STEP
                                                EXCEPTION_ARRAY_BOUNDS_EXCEEDED = STATUS_ARRAY_BOUNDS_EXCEEDED
                                                EXCEPTION_FLT_DENORMAL_OPERAND	= STATUS_FLOAT_DENORMAL_OPERAND
                                                EXCEPTION_FLT_DIVIDE_BY_ZERO	= STATUS_FLOAT_DIVIDE_BY_ZERO
                                                EXCEPTION_FLT_INEXACT_RESULT	= STATUS_FLOAT_INEXACT_RESULT
                                                EXCEPTION_FLT_INVALID_OPERATION = STATUS_FLOAT_INVALID_OPERATION
                                                EXCEPTION_FLT_OVERFLOW		= STATUS_FLOAT_OVERFLOW
                                                EXCEPTION_FLT_STACK_CHECK	= STATUS_FLOAT_STACK_CHECK
                                                EXCEPTION_FLT_UNDERFLOW 	= STATUS_FLOAT_UNDERFLOW
                                                EXCEPTION_INT_DIVIDE_BY_ZERO	= STATUS_INTEGER_DIVIDE_BY_ZERO
                                                EXCEPTION_INT_OVERFLOW		= STATUS_INTEGER_OVERFLOW
                                                EXCEPTION_ILLEGAL_INSTRUCTION	= STATUS_ILLEGAL_INSTRUCTION
                                                EXCEPTION_PRIV_INSTRUCTION	= STATUS_PRIVILEGED_INSTRUCTION
                                                EXCEPTION_IN_PAGE_ERROR 	= STATUS_IN_PAGE_ERROR
                                                
                                                ; Registry options
                                                
                                                REG_OPTION_RESERVED	       = 0
                                                REG_OPTION_NON_VOLATILE        = 0
                                                REG_OPTION_VOLATILE	       = 1
                                                REG_OPTION_CREATE_LINK	       = 2
                                                REG_OPTION_BACKUP_RESTORE      = 4
                                                REG_CREATED_NEW_KEY	       = 1
                                                REG_OPENED_EXISTING_KEY        = 2
                                                REG_WHOLE_HIVE_VOLATILE        = 1
                                                REG_REFRESH_HIVE	       = 2
                                                REG_NOTIFY_CHANGE_NAME	       = 1
                                                REG_NOTIFY_CHANGE_ATTRIBUTES   = 2
                                                REG_NOTIFY_CHANGE_LAST_SET     = 4
                                                REG_NOTIFY_CHANGE_SECURITY     = 8
                                                REG_LEGAL_CHANGE_FILTER        = REG_NOTIFY_CHANGE_NAME or REG_NOTIFY_CHANGE_ATTRIBUTES or REG_NOTIFY_CHANGE_LAST_SET or REG_NOTIFY_CHANGE_SECURITY
                                                REG_LEGAL_OPTION	       = REG_OPTION_RESERVED or REG_OPTION_NON_VOLATILE or REG_OPTION_VOLATILE or REG_OPTION_CREATE_LINK or REG_OPTION_BACKUP_RESTORE
                                                REG_NONE		       = 0
                                                REG_SZ			       = 1
                                                REG_EXPAND_SZ		       = 2
                                                REG_BINARY		       = 3
                                                REG_DWORD		       = 4
                                                REG_DWORD_LITTLE_ENDIAN        = 4
                                                REG_DWORD_BIG_ENDIAN	       = 5
                                                REG_LINK		       = 6
                                                REG_MULTI_SZ		       = 7
                                                REG_RESOURCE_LIST	       = 8
                                                REG_FULL_RESOURCE_DESCRIPTOR   = 9
                                                REG_RESOURCE_REQUIREMENTS_LIST = 10
                                                
                                                ; Registry access modes
                                                
                                                KEY_QUERY_VALUE 	       = 1
                                                KEY_SET_VALUE		       = 2
                                                KEY_CREATE_SUB_KEY	       = 4
                                                KEY_ENUMERATE_SUB_KEYS	       = 8
                                                KEY_NOTIFY		       = 10h
                                                KEY_CREATE_LINK 	       = 20h
                                                KEY_READ		       = STANDARD_RIGHTS_READ or KEY_QUERY_VALUE or KEY_ENUMERATE_SUB_KEYS or KEY_NOTIFY and not SYNCHRONIZE
                                                KEY_WRITE		       = STANDARD_RIGHTS_WRITE or KEY_SET_VALUE or KEY_CREATE_SUB_KEY and not SYNCHRONIZE
                                                KEY_EXECUTE		       = KEY_READ
                                                KEY_ALL_ACCESS		       = STANDARD_RIGHTS_ALL or KEY_QUERY_VALUE or KEY_SET_VALUE or KEY_CREATE_SUB_KEY or KEY_ENUMERATE_SUB_KEYS or KEY_NOTIFY or KEY_CREATE_LINK and not SYNCHRONIZE
                                                
                                                ; Predefined registry keys
                                                
                                                HKEY_CLASSES_ROOT     = 80000000h
                                                HKEY_CURRENT_USER     = 80000001h
                                                HKEY_LOCAL_MACHINE    = 80000002h
                                                HKEY_USERS	      = 80000003h
                                                HKEY_PERFORMANCE_DATA = 80000004h
                                                HKEY_CURRENT_CONFIG   = 80000005h
                                                HKEY_DYN_DATA	      = 80000006h
                                                
                                                ; FormatMessage flags
                                                
                                                FORMAT_MESSAGE_ALLOCATE_BUFFER = 0100h
                                                FORMAT_MESSAGE_IGNORE_INSERTS  = 0200h
                                                FORMAT_MESSAGE_FROM_STRING     = 0400h
                                                FORMAT_MESSAGE_FROM_HMODULE    = 0800h
                                                FORMAT_MESSAGE_FROM_SYSTEM     = 1000h
                                                FORMAT_MESSAGE_ARGUMENT_ARRAY  = 2000h
                                                FORMAT_MESSAGE_MAX_WIDTH_MASK  = 00FFh
                                                
                                                ; Language identifiers
                                                
                                                LANG_NEUTRAL		     = 00h
                                                LANG_BULGARIAN		     = 02h
                                                LANG_CHINESE		     = 04h
                                                LANG_CROATIAN		     = 1Ah
                                                LANG_CZECH		     = 05h
                                                LANG_DANISH		     = 06h
                                                LANG_DUTCH		     = 13h
                                                LANG_ENGLISH		     = 09h
                                                LANG_FINNISH		     = 0Bh
                                                LANG_FRENCH		     = 0Ch
                                                LANG_GERMAN		     = 07h
                                                LANG_GREEK		     = 08h
                                                LANG_HUNGARIAN		     = 0Eh
                                                LANG_ICELANDIC		     = 0Fh
                                                LANG_ITALIAN		     = 10h
                                                LANG_JAPANESE		     = 11h
                                                LANG_KOREAN		     = 12h
                                                LANG_NORWEGIAN		     = 14h
                                                LANG_POLISH		     = 15h
                                                LANG_PORTUGUESE 	     = 16h
                                                LANG_ROMANIAN		     = 18h
                                                LANG_RUSSIAN		     = 19h
                                                LANG_SLOVAK		     = 1Bh
                                                LANG_SLOVENIAN		     = 24h
                                                LANG_SPANISH		     = 0Ah
                                                LANG_SWEDISH		     = 1Dh
                                                LANG_THAI		     = 1Eh
                                                LANG_TURKISH		     = 1Fh
                                                
                                                ; Sublanguage identifiers
                                                
                                                SUBLANG_NEUTRAL 	     = 00h shl 10
                                                SUBLANG_DEFAULT 	     = 01h shl 10
                                                SUBLANG_SYS_DEFAULT	     = 02h shl 10
                                                SUBLANG_CHINESE_TRADITIONAL  = 01h shl 10
                                                SUBLANG_CHINESE_SIMPLIFIED   = 02h shl 10
                                                SUBLANG_CHINESE_HONGKONG     = 03h shl 10
                                                SUBLANG_CHINESE_SINGAPORE    = 04h shl 10
                                                SUBLANG_DUTCH		     = 01h shl 10
                                                SUBLANG_DUTCH_BELGIAN	     = 02h shl 10
                                                SUBLANG_ENGLISH_US	     = 01h shl 10
                                                SUBLANG_ENGLISH_UK	     = 02h shl 10
                                                SUBLANG_ENGLISH_AUS	     = 03h shl 10
                                                SUBLANG_ENGLISH_CAN	     = 04h shl 10
                                                SUBLANG_ENGLISH_NZ	     = 05h shl 10
                                                SUBLANG_ENGLISH_EIRE	     = 06h shl 10
                                                SUBLANG_FRENCH		     = 01h shl 10
                                                SUBLANG_FRENCH_BELGIAN	     = 02h shl 10
                                                SUBLANG_FRENCH_CANADIAN      = 03h shl 10
                                                SUBLANG_FRENCH_SWISS	     = 04h shl 10
                                                SUBLANG_GERMAN		     = 01h shl 10
                                                SUBLANG_GERMAN_SWISS	     = 02h shl 10
                                                SUBLANG_GERMAN_AUSTRIAN      = 03h shl 10
                                                SUBLANG_ITALIAN 	     = 01h shl 10
                                                SUBLANG_ITALIAN_SWISS	     = 02h shl 10
                                                SUBLANG_NORWEGIAN_BOKMAL     = 01h shl 10
                                                SUBLANG_NORWEGIAN_NYNORSK    = 02h shl 10
                                                SUBLANG_PORTUGUESE	     = 02h shl 10
                                                SUBLANG_PORTUGUESE_BRAZILIAN = 01h shl 10
                                                SUBLANG_SPANISH 	     = 01h shl 10
                                                SUBLANG_SPANISH_MEXICAN      = 02h shl 10
                                                SUBLANG_SPANISH_MODERN	     = 03h shl 10
                                                
                                                ; Sorting identifiers
                                                
                                                SORT_DEFAULT		     = 0 shl 16
                                                SORT_JAPANESE_XJIS	     = 0 shl 16
                                                SORT_JAPANESE_UNICODE	     = 1 shl 16
                                                SORT_CHINESE_BIG5	     = 0 shl 16
                                                SORT_CHINESE_PRCP	     = 0 shl 16
                                                SORT_CHINESE_UNICODE	     = 1 shl 16
                                                SORT_CHINESE_PRC	     = 2 shl 16
                                                SORT_CHINESE_BOPOMOFO	     = 3 shl 16
                                                SORT_KOREAN_KSC 	     = 0 shl 16
                                                SORT_KOREAN_UNICODE	     = 1 shl 16
                                                SORT_GERMAN_PHONE_BOOK	     = 1 shl 16
                                                SORT_HUNGARIAN_DEFAULT	     = 0 shl 16
                                                SORT_HUNGARIAN_TECHNICAL     = 1 shl 16
                                                
                                                ; Resource types
                                                
                                                RT_CURSOR	= 1
                                                RT_BITMAP	= 2
                                                RT_ICON 	= 3
                                                RT_MENU 	= 4
                                                RT_DIALOG	= 5
                                                RT_STRING	= 6
                                                RT_FONTDIR	= 7
                                                RT_FONT 	= 8
                                                RT_ACCELERATOR	= 9
                                                RT_RCDATA	= 10
                                                RT_MESSAGETABLE = 11
                                                RT_GROUP_CURSOR = 12
                                                RT_GROUP_ICON	= 14
                                                RT_VERSION	= 16
                                                RT_DLGINCLUDE	= 17
                                                RT_PLUGPLAY	= 19
                                                RT_VXD		= 20
                                                RT_ANICURSOR	= 21
                                                RT_ANIICON	= 22
                                                RT_HTML 	= 23
                                                RT_MANIFEST	= 24
                                                
                                                ; Clipboard formats
                                                
                                                CF_TEXT 	   = 001h
                                                CF_BITMAP	   = 002h
                                                CF_METAFILEPICT    = 003h
                                                CF_SYLK 	   = 004h
                                                CF_DIF		   = 005h
                                                CF_TIFF 	   = 006h
                                                CF_OEMTEXT	   = 007h
                                                CF_DIB		   = 008h
                                                CF_PALETTE	   = 009h
                                                CF_PENDATA	   = 00Ah
                                                CF_RIFF 	   = 00Bh
                                                CF_WAVE 	   = 00Ch
                                                CF_UNICODETEXT	   = 00Dh
                                                CF_ENHMETAFILE	   = 00Eh
                                                CF_HDROP	   = 00Fh
                                                CF_LOCALE	   = 010h
                                                CF_OWNERDISPLAY    = 080h
                                                CF_DSPTEXT	   = 081h
                                                CF_DSPBITMAP	   = 082h
                                                CF_DSPMETAFILEPICT = 083h
                                                CF_DSPENHMETAFILE  = 08Eh
                                                CF_PRIVATEFIRST    = 200h
                                                CF_PRIVATELAST	   = 2FFh
                                                CF_GDIOBJFIRST	   = 300h
                                                CF_GDIOBJLAST	   = 3FFh
                                                
                                                ; OS types for version info
                                                
                                                VOS_UNKNOWN	  = 00000000h
                                                VOS_DOS 	  = 00010000h
                                                VOS_OS216	  = 00020000h
                                                VOS_OS232	  = 00030000h
                                                VOS_NT		  = 00040000h
                                                VOS__BASE	  = 00000000h
                                                VOS__WINDOWS16	  = 00000001h
                                                VOS__PM16	  = 00000002h
                                                VOS__PM32	  = 00000003h
                                                VOS__WINDOWS32	  = 00000004h
                                                VOS_DOS_WINDOWS16 = 00010001h
                                                VOS_DOS_WINDOWS32 = 00010004h
                                                VOS_OS216_PM16	  = 00020002h
                                                VOS_OS232_PM32	  = 00030003h
                                                VOS_NT_WINDOWS32  = 00040004h
                                                
                                                ; File types for version info
                                                
                                                VFT_UNKNOWN    = 00000000h
                                                VFT_APP        = 00000001h
                                                VFT_DLL        = 00000002h
                                                VFT_DRV        = 00000003h
                                                VFT_FONT       = 00000004h
                                                VFT_VXD        = 00000005h
                                                VFT_STATIC_LIB = 00000007h
                                                
                                                ; File subtypes for version info
                                                
                                                VFT2_UNKNOWN		   = 00000000h
                                                VFT2_DRV_PRINTER	   = 00000001h
                                                VFT2_DRV_KEYBOARD	   = 00000002h
                                                VFT2_DRV_LANGUAGE	   = 00000003h
                                                VFT2_DRV_DISPLAY	   = 00000004h
                                                VFT2_DRV_MOUSE		   = 00000005h
                                                VFT2_DRV_NETWORK	   = 00000006h
                                                VFT2_DRV_SYSTEM 	   = 00000007h
                                                VFT2_DRV_INSTALLABLE	   = 00000008h
                                                VFT2_DRV_SOUND		   = 00000009h
                                                VFT2_DRV_COMM		   = 0000000Ah
                                                VFT2_DRV_INPUTMETHOD	   = 0000000Bh
                                                VFT2_DRV_VERSIONED_PRINTER = 0000000Ch
                                                VFT2_FONT_RASTER	   = 00000001h
                                                VFT2_FONT_VECTOR	   = 00000002h
                                                VFT2_FONT_TRUETYPE	   = 00000003h
                                                
                                                include 'equates/user32.inc'
                                                
                                                ; USER32.DLL structures and constants
                                                
                                                struct POINT
                                                  x dd ?
                                                  y dd ?
                                                ends
                                                
                                                struct RECT
                                                  left	 dd ?
                                                  top	 dd ?
                                                  right  dd ?
                                                  bottom dd ?
                                                ends
                                                
                                                struct WNDCLASS
                                                  style 	dd ?
                                                  lpfnWndProc	dd ?
                                                  cbClsExtra	dd ?
                                                  cbWndExtra	dd ?
                                                  hInstance	dd ?
                                                  hIcon 	dd ?
                                                  hCursor	dd ?
                                                  hbrBackground dd ?
                                                  lpszMenuName	dd ?
                                                  lpszClassName dd ?
                                                ends
                                                
                                                struct WNDCLASSEX
                                                  cbSize	dd ?
                                                  style 	dd ?
                                                  lpfnWndProc	dd ?
                                                  cbClsExtra	dd ?
                                                  cbWndExtra	dd ?
                                                  hInstance	dd ?
                                                  hIcon 	dd ?
                                                  hCursor	dd ?
                                                  hbrBackground dd ?
                                                  lpszMenuName	dd ?
                                                  lpszClassName dd ?
                                                  hIconSm	dd ?
                                                ends
                                                
                                                struct CREATESTRUCT
                                                  lpCreateParams dd ?
                                                  hInstance	 dd ?
                                                  hMenu 	 dd ?
                                                  hwndParent	 dd ?
                                                  cy		 dd ?
                                                  cx		 dd ?
                                                  y		 dd ?
                                                  x		 dd ?
                                                  style 	 dd ?
                                                  lpszName	 dd ?
                                                  lpszClass	 dd ?
                                                  dwExStyle	 dd ?
                                                ends
                                                
                                                struct CLIENTCREATESTRUCT
                                                  hWindowMenu  dd ?
                                                  idFirstChild dd ?
                                                ends
                                                
                                                struct MDICREATESTRUCT
                                                  szClass dd ?
                                                  szTitle dd ?
                                                  hOwner  dd ?
                                                  x	  dd ?
                                                  y	  dd ?
                                                  cx	  dd ?
                                                  cy	  dd ?
                                                  style   dd ?
                                                  lParam  dd ?
                                                ends
                                                
                                                struct SCROLLINFO
                                                  cbSize    dd ?
                                                  fMask     dd ?
                                                  nMin	    dd ?
                                                  nMax	    dd ?
                                                  nPage     dd ?
                                                  nPos	    dd ?
                                                  nTrackPos dd ?
                                                ends
                                                
                                                struct MSG
                                                  hwnd	  dd ?
                                                  message dd ?
                                                  wParam  dd ?
                                                  lParam  dd ?
                                                  time	  dd ?
                                                  pt	  POINT
                                                ends
                                                
                                                struct MINMAXINFO
                                                  ptReserved	 POINT
                                                  ptMaxSize	 POINT
                                                  ptMaxPosition  POINT
                                                  ptMinTrackSize POINT
                                                  ptMaxTrackSize POINT
                                                ends
                                                
                                                struct WINDOWPLACEMENT
                                                  length	   dd ?
                                                  flags 	   dd ?
                                                  showCmd	   dd ?
                                                  ptMinPosition    POINT
                                                  ptMaxPosition    POINT
                                                  rcNormalPosition RECT
                                                ends
                                                
                                                struct WINDOWPOS
                                                  hwnd		  dd ?
                                                  hwndInsertAfter dd ?
                                                  x		  dd ?
                                                  y		  dd ?
                                                  cx		  dd ?
                                                  cy		  dd ?
                                                  flags 	  dd ?
                                                ends
                                                
                                                struct NMHDR
                                                  hwndFrom dd ?
                                                  idFrom   dd ?
                                                  code	   dd ?
                                                ends
                                                
                                                struct COPYDATASTRUCT
                                                  dwData dd ?
                                                  cbData dd ?
                                                  lpData dd ?
                                                ends
                                                
                                                struct ACCEL
                                                  fVirt dw ?
                                                  key	dw ?
                                                  cmd	dw ?
                                                ends
                                                
                                                struct PAINTSTRUCT
                                                  hdc	      dd ?
                                                  fErase      dd ?
                                                  rcPaint     RECT
                                                  fRestore    dd ?
                                                  fIncUpdate  dd ?
                                                  rgbReserved db 32 dup (?)
                                                ends
                                                
                                                struct DRAWTEXTPARAMS
                                                  cbSize	dd ?
                                                  iTabLength	dd ?
                                                  iLeftMargin	dd ?
                                                  iRightMargin	dd ?
                                                  uiLengthDrawn dd ?
                                                ends
                                                
                                                struct DRAWITEMSTRUCT
                                                  CtlType    dd ?
                                                  CtlID      dd ?
                                                  itemID     dd ?
                                                  itemAction dd ?
                                                  itemState  dd ?
                                                  hwndItem   dd ?
                                                  hDC	     dd ?
                                                  rcItem     RECT
                                                  itemData   dd ?
                                                ends
                                                
                                                struct MENUITEMINFO
                                                  cbSize	dd ?
                                                  fMask 	dd ?
                                                  fType 	dd ?
                                                  fState	dd ?
                                                  wID		dd ?
                                                  hSubMenu	dd ?
                                                  hbmpChecked	dd ?
                                                  hbmpUnchecked dd ?
                                                  dwItemData	dd ?
                                                  dwTypeData	dd ?
                                                  cch		dd ?
                                                ends
                                                
                                                struct MEASUREITEMSTRUCT
                                                  CtlType    dd ?
                                                  CtlID      dd ?
                                                  itemID     dd ?
                                                  itemWidth  dd ?
                                                  itemHeight dd ?
                                                  itemData   dd ?
                                                ends
                                                
                                                struct MSGBOXPARAMS
                                                  cbSize	     dd ?
                                                  hwndOwner	     dd ?
                                                  hInstance	     dd ?
                                                  lpszText	     dd ?
                                                  lpszCaption	     dd ?
                                                  dwStyle	     dd ?
                                                  lpszIcon	     dd ?
                                                  dwContextHelpId    dd ?
                                                  lpfnMsgBoxCallback dd ?
                                                  dwLanguageId	     dd ?
                                                ends
                                                
                                                ; MessageBox type flags
                                                
                                                MB_OK			= 000000h
                                                MB_OKCANCEL		= 000001h
                                                MB_ABORTRETRYIGNORE	= 000002h
                                                MB_YESNOCANCEL		= 000003h
                                                MB_YESNO		= 000004h
                                                MB_RETRYCANCEL		= 000005h
                                                MB_ICONHAND		= 000010h
                                                MB_ICONQUESTION 	= 000020h
                                                MB_ICONEXCLAMATION	= 000030h
                                                MB_ICONASTERISK 	= 000040h
                                                MB_USERICON		= 000080h
                                                MB_ICONWARNING		= MB_ICONEXCLAMATION
                                                MB_ICONERROR		= MB_ICONHAND
                                                MB_ICONINFORMATION	= MB_ICONASTERISK
                                                MB_ICONSTOP		= MB_ICONHAND
                                                MB_DEFBUTTON1		= 000000h
                                                MB_DEFBUTTON2		= 000100h
                                                MB_DEFBUTTON3		= 000200h
                                                MB_DEFBUTTON4		= 000300h
                                                MB_APPLMODAL		= 000000h
                                                MB_SYSTEMMODAL		= 001000h
                                                MB_TASKMODAL		= 002000h
                                                MB_HELP 		= 004000h
                                                MB_NOFOCUS		= 008000h
                                                MB_SETFOREGROUND	= 010000h
                                                MB_DEFAULT_DESKTOP_ONLY = 020000h
                                                MB_TOPMOST		= 040000h
                                                MB_RIGHT		= 080000h
                                                MB_RTLREADING		= 100000h
                                                MB_SERVICE_NOTIFICATION = 200000h
                                                
                                                ; Conventional dialog box and message box command IDs
                                                
                                                IDOK	 = 1
                                                IDCANCEL = 2
                                                IDABORT  = 3
                                                IDRETRY  = 4
                                                IDIGNORE = 5
                                                IDYES	 = 6
                                                IDNO	 = 7
                                                IDCLOSE  = 8
                                                IDHELP	 = 9
                                                
                                                ; Class styles
                                                
                                                CS_VREDRAW	   = 00001h
                                                CS_HREDRAW	   = 00002h
                                                CS_KEYCVTWINDOW    = 00004h
                                                CS_DBLCLKS	   = 00008h
                                                CS_OWNDC	   = 00020h
                                                CS_CLASSDC	   = 00040h
                                                CS_PARENTDC	   = 00080h
                                                CS_NOKEYCVT	   = 00100h
                                                CS_SAVEBITS	   = 00800h
                                                CS_NOCLOSE	   = 00200h
                                                CS_BYTEALIGNCLIENT = 01000h
                                                CS_BYTEALIGNWINDOW = 02000h
                                                CS_PUBLICCLASS	   = 04000h
                                                CS_GLOBALCLASS	   = CS_PUBLICCLASS
                                                CS_IME		   = 10000h
                                                
                                                ; Windows styles
                                                
                                                WS_OVERLAPPED	= 000000000h
                                                WS_ICONICPOPUP	= 0C0000000h
                                                WS_POPUP	= 080000000h
                                                WS_CHILD	= 040000000h
                                                WS_MINIMIZE	= 020000000h
                                                WS_VISIBLE	= 010000000h
                                                WS_DISABLED	= 008000000h
                                                WS_CLIPSIBLINGS = 004000000h
                                                WS_CLIPCHILDREN = 002000000h
                                                WS_MAXIMIZE	= 001000000h
                                                WS_CAPTION	= 000C00000h
                                                WS_BORDER	= 000800000h
                                                WS_DLGFRAME	= 000400000h
                                                WS_VSCROLL	= 000200000h
                                                WS_HSCROLL	= 000100000h
                                                WS_SYSMENU	= 000080000h
                                                WS_THICKFRAME	= 000040000h
                                                WS_HREDRAW	= 000020000h
                                                WS_VREDRAW	= 000010000h
                                                WS_GROUP	= 000020000h
                                                WS_TABSTOP	= 000010000h
                                                WS_MINIMIZEBOX	= 000020000h
                                                WS_MAXIMIZEBOX	= 000010000h
                                                
                                                ; Common Window Styles
                                                
                                                WS_OVERLAPPEDWINDOW = WS_OVERLAPPED or WS_CAPTION or WS_SYSMENU or WS_THICKFRAME or WS_MINIMIZEBOX or WS_MAXIMIZEBOX
                                                WS_POPUPWINDOW	    = WS_POPUP or WS_BORDER or WS_SYSMENU
                                                WS_CHILDWINDOW	    = WS_CHILD
                                                WS_TILEDWINDOW	    = WS_OVERLAPPEDWINDOW
                                                WS_TILED	    = WS_OVERLAPPED
                                                WS_ICONIC	    = WS_MINIMIZE
                                                WS_SIZEBOX	    = WS_THICKFRAME
                                                
                                                ; Extended Window Styles
                                                
                                                WS_EX_DLGMODALFRAME    = 00001h
                                                WS_EX_DRAGOBJECT       = 00002h
                                                WS_EX_NOPARENTNOTIFY   = 00004h
                                                WS_EX_TOPMOST	       = 00008h
                                                WS_EX_ACCEPTFILES      = 00010h
                                                WS_EX_TRANSPARENT      = 00020h
                                                WS_EX_MDICHILD	       = 00040h
                                                WS_EX_TOOLWINDOW       = 00080h
                                                WS_EX_WINDOWEDGE       = 00100h
                                                WS_EX_CLIENTEDGE       = 00200h
                                                WS_EX_CONTEXTHELP      = 00400h
                                                WS_EX_RIGHT	       = 01000h
                                                WS_EX_LEFT	       = 00000h
                                                WS_EX_RTLREADING       = 02000h
                                                WS_EX_LTRREADING       = 00000h
                                                WS_EX_LEFTSCROLLBAR    = 04000h
                                                WS_EX_RIGHTSCROLLBAR   = 00000h
                                                WS_EX_CONTROLPARENT    = 10000h
                                                WS_EX_STATICEDGE       = 20000h
                                                WS_EX_APPWINDOW        = 40000h
                                                WS_EX_LAYERED	       = 80000h
                                                WS_EX_OVERLAPPEDWINDOW = WS_EX_WINDOWEDGE or WS_EX_CLIENTEDGE
                                                WS_EX_PALETTEWINDOW    = WS_EX_WINDOWEDGE or WS_EX_TOOLWINDOW or WS_EX_TOPMOST
                                                
                                                ; MDI client style bits
                                                
                                                MDIS_ALLCHILDSTYLES = 1
                                                
                                                ; Special CreateWindow position value
                                                
                                                CW_USEDEFAULT = 8000h
                                                
                                                ; Predefined window handle
                                                
                                                HWND_DESKTOP   = 0
                                                
                                                ; ShowWindow commands
                                                
                                                SW_HIDE 	   = 0
                                                SW_SHOWNORMAL	   = 1
                                                SW_NORMAL	   = 1
                                                SW_SHOWMINIMIZED   = 2
                                                SW_SHOWMAXIMIZED   = 3
                                                SW_MAXIMIZE	   = 3
                                                SW_SHOWNOACTIVATE  = 4
                                                SW_SHOW 	   = 5
                                                SW_MINIMIZE	   = 6
                                                SW_SHOWMINNOACTIVE = 7
                                                SW_SHOWNA	   = 8
                                                SW_RESTORE	   = 9
                                                SW_SHOWDEFAULT	   = 10
                                                
                                                ; SetWindowPos flags
                                                
                                                SWP_NOSIZE	   = 0001h
                                                SWP_NOMOVE	   = 0002h
                                                SWP_NOZORDER	   = 0004h
                                                SWP_NOREDRAW	   = 0008h
                                                SWP_NOACTIVATE	   = 0010h
                                                SWP_DRAWFRAME	   = 0020h
                                                SWP_SHOWWINDOW	   = 0040h
                                                SWP_HIDEWINDOW	   = 0080h
                                                SWP_NOCOPYBITS	   = 0100h
                                                SWP_NOREPOSITION   = 0200h
                                                SWP_DEFERERASE	   = 2000h
                                                SWP_ASYNCWINDOWPOS = 4000h
                                                
                                                ; SetWindowPos special handle values
                                                
                                                HWND_TOP       = 0
                                                HWND_BOTTOM    = 1
                                                HWND_TOPMOST   = -1
                                                HWND_NOTOPMOST = -2
                                                
                                                ; GetWindow flags
                                                
                                                GW_HWNDFIRST = 0
                                                GW_HWNDLAST  = 1
                                                GW_HWNDNEXT  = 2
                                                GW_HWNDPREV  = 3
                                                GW_OWNER     = 4
                                                GW_CHILD     = 5
                                                
                                                ; RedrawWindow flags
                                                
                                                RDW_INVALIDATE	    = 0001h
                                                RDW_INTERNALPAINT   = 0002h
                                                RDW_ERASE	    = 0004h
                                                RDW_VALIDATE	    = 0008h
                                                RDW_NOINTERNALPAINT = 0010h
                                                RDW_NOERASE	    = 0020h
                                                RDW_NOCHILDREN	    = 0040h
                                                RDW_ALLCHILDREN     = 0080h
                                                RDW_UPDATENOW	    = 0100h
                                                RDW_ERASENOW	    = 0200h
                                                RDW_FRAME	    = 0400h
                                                RDW_NOFRAME	    = 0800h
                                                
                                                ; PeekMessage Options
                                                
                                                PM_NOREMOVE = 0000h
                                                PM_REMOVE   = 0001h
                                                PM_NOYIELD  = 0002h
                                                
                                                ; Window state messages
                                                
                                                WM_STATE		  = 0000h
                                                WM_NULL 		  = 0000h
                                                WM_CREATE		  = 0001h
                                                WM_DESTROY		  = 0002h
                                                WM_MOVE 		  = 0003h
                                                WM_SIZE 		  = 0005h
                                                WM_ACTIVATE		  = 0006h
                                                WM_SETFOCUS		  = 0007h
                                                WM_KILLFOCUS		  = 0008h
                                                WM_ENABLE		  = 000Ah
                                                WM_SETREDRAW		  = 000Bh
                                                WM_SETTEXT		  = 000Ch
                                                WM_GETTEXT		  = 000Dh
                                                WM_GETTEXTLENGTH	  = 000Eh
                                                WM_PAINT		  = 000Fh
                                                WM_CLOSE		  = 0010h
                                                WM_QUERYENDSESSION	  = 0011h
                                                WM_QUIT 		  = 0012h
                                                WM_QUERYOPEN		  = 0013h
                                                WM_ERASEBKGND		  = 0014h
                                                WM_SYSCOLORCHANGE	  = 0015h
                                                WM_ENDSESSION		  = 0016h
                                                WM_SYSTEMERROR		  = 0017h
                                                WM_SHOWWINDOW		  = 0018h
                                                WM_CTLCOLOR		  = 0019h
                                                WM_WININICHANGE 	  = 001Ah
                                                WM_DEVMODECHANGE	  = 001Bh
                                                WM_ACTIVATEAPP		  = 001Ch
                                                WM_FONTCHANGE		  = 001Dh
                                                WM_TIMECHANGE		  = 001Eh
                                                WM_CANCELMODE		  = 001Fh
                                                WM_SETCURSOR		  = 0020h
                                                WM_MOUSEACTIVATE	  = 0021h
                                                WM_CHILDACTIVATE	  = 0022h
                                                WM_QUEUESYNC		  = 0023h
                                                WM_GETMINMAXINFO	  = 0024h
                                                WM_PAINTICON		  = 0026h
                                                WM_ICONERASEBKGND	  = 0027h
                                                WM_NEXTDLGCTL		  = 0028h
                                                WM_SPOOLERSTATUS	  = 002Ah
                                                WM_DRAWITEM		  = 002Bh
                                                WM_MEASUREITEM		  = 002Ch
                                                WM_DELETEITEM		  = 002Dh
                                                WM_VKEYTOITEM		  = 002Eh
                                                WM_CHARTOITEM		  = 002Fh
                                                WM_SETFONT		  = 0030h
                                                WM_GETFONT		  = 0031h
                                                WM_SETHOTKEY		  = 0032h
                                                WM_QUERYDRAGICON	  = 0037h
                                                WM_COMPAREITEM		  = 0039h
                                                WM_COMPACTING		  = 0041h
                                                WM_COMMNOTIFY		  = 0044h
                                                WM_WINDOWPOSCHANGING	  = 0046h
                                                WM_WINDOWPOSCHANGED	  = 0047h
                                                WM_POWER		  = 0048h
                                                WM_COPYDATA		  = 004Ah
                                                WM_CANCELJOURNAL	  = 004Bh
                                                WM_NOTIFY		  = 004Eh
                                                WM_INPUTLANGCHANGEREQUEST = 0050h
                                                WM_INPUTLANGCHANGE	  = 0051h
                                                WM_TCARD		  = 0052h
                                                WM_HELP 		  = 0053h
                                                WM_USERCHANGED		  = 0054h
                                                WM_NOTIFYFORMAT 	  = 0055h
                                                WM_CONTEXTMENU		  = 007Bh
                                                WM_STYLECHANGING	  = 007Ch
                                                WM_STYLECHANGED 	  = 007Dh
                                                WM_DISPLAYCHANGE	  = 007Eh
                                                WM_GETICON		  = 007Fh
                                                WM_SETICON		  = 0080h
                                                WM_NCCREATE		  = 0081h
                                                WM_NCDESTROY		  = 0082h
                                                WM_NCCALCSIZE		  = 0083h
                                                WM_NCHITTEST		  = 0084h
                                                WM_NCPAINT		  = 0085h
                                                WM_NCACTIVATE		  = 0086h
                                                WM_GETDLGCODE		  = 0087h
                                                WM_NCMOUSEMOVE		  = 00A0h
                                                WM_NCLBUTTONDOWN	  = 00A1h
                                                WM_NCLBUTTONUP		  = 00A2h
                                                WM_NCLBUTTONDBLCLK	  = 00A3h
                                                WM_NCRBUTTONDOWN	  = 00A4h
                                                WM_NCRBUTTONUP		  = 00A5h
                                                WM_NCRBUTTONDBLCLK	  = 00A6h
                                                WM_NCMBUTTONDOWN	  = 00A7h
                                                WM_NCMBUTTONUP		  = 00A8h
                                                WM_NCMBUTTONDBLCLK	  = 00A9h
                                                WM_KEYFIRST		  = 0100h
                                                WM_KEYDOWN		  = 0100h
                                                WM_KEYUP		  = 0101h
                                                WM_CHAR 		  = 0102h
                                                WM_DEADCHAR		  = 0103h
                                                WM_SYSKEYDOWN		  = 0104h
                                                WM_SYSKEYUP		  = 0105h
                                                WM_SYSCHAR		  = 0106h
                                                WM_SYSDEADCHAR		  = 0107h
                                                WM_KEYLAST		  = 0108h
                                                WM_INITDIALOG		  = 0110h
                                                WM_COMMAND		  = 0111h
                                                WM_SYSCOMMAND		  = 0112h
                                                WM_TIMER		  = 0113h
                                                WM_HSCROLL		  = 0114h
                                                WM_VSCROLL		  = 0115h
                                                WM_INITMENU		  = 0116h
                                                WM_INITMENUPOPUP	  = 0117h
                                                WM_MENUSELECT		  = 011Fh
                                                WM_MENUCHAR		  = 0120h
                                                WM_ENTERIDLE		  = 0121h
                                                WM_MENURBUTTONUP	  = 0122h
                                                WM_MENUDRAG		  = 0123h
                                                WM_MENUGETOBJECT	  = 0124h
                                                WM_UNINITMENUPOPUP	  = 0125h
                                                WM_MENUCOMMAND		  = 0126h
                                                WM_CTLCOLORMSGBOX	  = 0132h
                                                WM_CTLCOLOREDIT 	  = 0133h
                                                WM_CTLCOLORLISTBOX	  = 0134h
                                                WM_CTLCOLORBTN		  = 0135h
                                                WM_CTLCOLORDLG		  = 0136h
                                                WM_CTLCOLORSCROLLBAR	  = 0137h
                                                WM_CTLCOLORSTATIC	  = 0138h
                                                WM_MOUSEFIRST		  = 0200h
                                                WM_MOUSEMOVE		  = 0200h
                                                WM_LBUTTONDOWN		  = 0201h
                                                WM_LBUTTONUP		  = 0202h
                                                WM_LBUTTONDBLCLK	  = 0203h
                                                WM_RBUTTONDOWN		  = 0204h
                                                WM_RBUTTONUP		  = 0205h
                                                WM_RBUTTONDBLCLK	  = 0206h
                                                WM_MBUTTONDOWN		  = 0207h
                                                WM_MBUTTONUP		  = 0208h
                                                WM_MBUTTONDBLCLK	  = 0209h
                                                WM_MOUSEWHEEL		  = 020Ah
                                                WM_MOUSELAST		  = 020Ah
                                                WM_PARENTNOTIFY 	  = 0210h
                                                WM_ENTERMENULOOP	  = 0211h
                                                WM_EXITMENULOOP 	  = 0212h
                                                WM_NEXTMENU		  = 0213h
                                                WM_SIZING		  = 0214h
                                                WM_CAPTURECHANGED	  = 0215h
                                                WM_MOVING		  = 0216h
                                                WM_POWERBROADCAST	  = 0218h
                                                WM_DEVICECHANGE 	  = 0219h
                                                WM_MDICREATE		  = 0220h
                                                WM_MDIDESTROY		  = 0221h
                                                WM_MDIACTIVATE		  = 0222h
                                                WM_MDIRESTORE		  = 0223h
                                                WM_MDINEXT		  = 0224h
                                                WM_MDIMAXIMIZE		  = 0225h
                                                WM_MDITILE		  = 0226h
                                                WM_MDICASCADE		  = 0227h
                                                WM_MDIICONARRANGE	  = 0228h
                                                WM_MDIGETACTIVE 	  = 0229h
                                                WM_MDISETMENU		  = 0230h
                                                WM_ENTERSIZEMOVE	  = 0231h
                                                WM_EXITSIZEMOVE 	  = 0232h
                                                WM_DROPFILES		  = 0233h
                                                WM_MDIREFRESHMENU	  = 0234h
                                                WM_IME_SETCONTEXT	  = 0281h
                                                WM_IME_NOTIFY		  = 0282h
                                                WM_IME_CONTROL		  = 0283h
                                                WM_IME_COMPOSITIONFULL	  = 0284h
                                                WM_IME_SELECT		  = 0285h
                                                WM_IME_CHAR		  = 0286h
                                                WM_IME_KEYDOWN		  = 0290h
                                                WM_IME_KEYUP		  = 0291h
                                                WM_MOUSEHOVER		  = 02A1h
                                                WM_MOUSELEAVE		  = 02A3h
                                                WM_CUT			  = 0300h
                                                WM_COPY 		  = 0301h
                                                WM_PASTE		  = 0302h
                                                WM_CLEAR		  = 0303h
                                                WM_UNDO 		  = 0304h
                                                WM_RENDERFORMAT 	  = 0305h
                                                WM_RENDERALLFORMATS	  = 0306h
                                                WM_DESTROYCLIPBOARD	  = 0307h
                                                WM_DRAWCLIPBOARD	  = 0308h
                                                WM_PAINTCLIPBOARD	  = 0309h
                                                WM_VSCROLLCLIPBOARD	  = 030Ah
                                                WM_SIZECLIPBOARD	  = 030Bh
                                                WM_ASKCBFORMATNAME	  = 030Ch
                                                WM_CHANGECBCHAIN	  = 030Dh
                                                WM_HSCROLLCLIPBOARD	  = 030Eh
                                                WM_QUERYNEWPALETTE	  = 030Fh
                                                WM_PALETTEISCHANGING	  = 0310h
                                                WM_PALETTECHANGED	  = 0311h
                                                WM_HOTKEY		  = 0312h
                                                WM_PRINT		  = 0317h
                                                WM_PRINTCLIENT		  = 0318h
                                                WM_HANDHELDFIRST	  = 0358h
                                                WM_HANDHELDLAST 	  = 035Fh
                                                WM_AFXFIRST		  = 0360h
                                                WM_AFXLAST		  = 037Fh
                                                WM_PENWINFIRST		  = 0380h
                                                WM_PENWINLAST		  = 038Fh
                                                WM_COALESCE_FIRST	  = 0390h
                                                WM_COALESCE_LAST	  = 039Fh
                                                WM_USER 		  = 0400h
                                                
                                                ; WM_SIZE commands
                                                
                                                SIZE_RESTORED  = 0
                                                SIZE_MINIMIZED = 1
                                                SIZE_MAXIMIZED = 2
                                                SIZE_MAXSHOW   = 3
                                                SIZE_MAXHIDE   = 4
                                                
                                                ; WM_ACTIVATE states
                                                
                                                WA_INACTIVE    = 0
                                                WA_ACTIVE      = 1
                                                WA_CLICKACTIVE = 2
                                                
                                                ; WM_SHOWWINDOW identifiers
                                                
                                                SW_PARENTCLOSING = 1
                                                SW_OTHERZOOM	 = 2
                                                SW_PARENTOPENING = 3
                                                SW_OTHERUNZOOM	 = 4
                                                
                                                ; WM_MOUSEACTIVATE return codes
                                                
                                                MA_ACTIVATE	    = 1
                                                MA_ACTIVATEANDEAT   = 2
                                                MA_NOACTIVATE	    = 3
                                                MA_NOACTIVATEANDEAT = 4
                                                
                                                ; WM_MDITILE flags
                                                
                                                MDITILE_VERTICAL     = 0
                                                MDITILE_HORIZONTAL   = 1
                                                MDITILE_SKIPDISABLED = 2
                                                
                                                ; WM_NOTIFY codes
                                                
                                                NM_OUTOFMEMORY = -1
                                                NM_CLICK       = -2
                                                NM_DBLCLICK    = -3
                                                NM_RETURN      = -4
                                                NM_RCLICK      = -5
                                                NM_RDBLCLK     = -6
                                                NM_SETFOCUS    = -7
                                                NM_KILLFOCUS   = -8
                                                
                                                ; WM_SETICON types
                                                
                                                ICON_SMALL = 0
                                                ICON_BIG   = 1
                                                
                                                ; WM_HOTKEY commands
                                                
                                                HOTKEYF_SHIFT	= 01h
                                                HOTKEYF_CONTROL = 02h
                                                HOTKEYF_ALT	= 04h
                                                HOTKEYF_EXT	= 08h
                                                
                                                ; Keystroke flags
                                                
                                                KF_EXTENDED = 0100h
                                                KF_DLGMODE  = 0800h
                                                KF_MENUMODE = 1000h
                                                KF_ALTDOWN  = 2000h
                                                KF_REPEAT   = 4000h
                                                KF_UP	    = 8000h
                                                
                                                ; Key state masks for mouse messages
                                                
                                                MK_LBUTTON = 01h
                                                MK_RBUTTON = 02h
                                                MK_SHIFT   = 04h
                                                MK_CONTROL = 08h
                                                MK_MBUTTON = 10h
                                                
                                                ; WM_SIZING codes
                                                
                                                WMSZ_LEFT	 = 1
                                                WMSZ_RIGHT	 = 2
                                                WMSZ_TOP	 = 3
                                                WMSZ_TOPLEFT	 = 4
                                                WMSZ_TOPRIGHT	 = 5
                                                WMSZ_BOTTOM	 = 6
                                                WMSZ_BOTTOMLEFT  = 7
                                                WMSZ_BOTTOMRIGHT = 8
                                                
                                                ; WM_HOTKEY modifiers
                                                
                                                MOD_ALT     = 1
                                                MOD_CONTROL = 2
                                                MOD_SHIFT   = 4
                                                MOD_WIN     = 8
                                                
                                                ; WM_PRINT flags
                                                
                                                PRF_CHECKVISIBLE = 01h
                                                PRF_NONCLIENT	 = 02h
                                                PRF_CLIENT	 = 04h
                                                PRF_ERASEBKGND	 = 08h
                                                PRF_CHILDREN	 = 10h
                                                PRF_OWNED	 = 20h
                                                
                                                ; Virtual key codes
                                                
                                                VK_LBUTTON   = 001h
                                                VK_CANCEL    = 003h
                                                VK_RBUTTON   = 002h
                                                VK_MBUTTON   = 004h
                                                VK_BACK      = 008h
                                                VK_TAB	     = 009h
                                                VK_CLEAR     = 00Ch
                                                VK_RETURN    = 00Dh
                                                VK_SHIFT     = 010h
                                                VK_CONTROL   = 011h
                                                VK_MENU      = 012h
                                                VK_PAUSE     = 013h
                                                VK_CAPITAL   = 014h
                                                VK_ESCAPE    = 01Bh
                                                VK_SPACE     = 020h
                                                VK_PRIOR     = 021h
                                                VK_PGUP      = 021h
                                                VK_PGDN      = 022h
                                                VK_NEXT      = 022h
                                                VK_END	     = 023h
                                                VK_HOME      = 024h
                                                VK_LEFT      = 025h
                                                VK_UP	     = 026h
                                                VK_RIGHT     = 027h
                                                VK_DOWN      = 028h
                                                VK_SELECT    = 029h
                                                VK_PRINT     = 02Ah
                                                VK_EXECUTE   = 02Bh
                                                VK_SNAPSHOT  = 02Ch
                                                VK_INSERT    = 02Dh
                                                VK_DELETE    = 02Eh
                                                VK_HELP      = 02Fh
                                                VK_LWIN      = 05Bh
                                                VK_RWIN      = 05Ch
                                                VK_APPS      = 05Dh
                                                VK_NUMPAD0   = 060h
                                                VK_NUMPAD1   = 061h
                                                VK_NUMPAD2   = 062h
                                                VK_NUMPAD3   = 063h
                                                VK_NUMPAD4   = 064h
                                                VK_NUMPAD5   = 065h
                                                VK_NUMPAD6   = 066h
                                                VK_NUMPAD7   = 067h
                                                VK_NUMPAD8   = 068h
                                                VK_NUMPAD9   = 069h
                                                VK_MULTIPLY  = 06Ah
                                                VK_ADD	     = 06Bh
                                                VK_SEPARATOR = 06Ch
                                                VK_SUBTRACT  = 06Dh
                                                VK_DECIMAL   = 06Eh
                                                VK_DIVIDE    = 06Fh
                                                VK_F1	     = 070h
                                                VK_F2	     = 071h
                                                VK_F3	     = 072h
                                                VK_F4	     = 073h
                                                VK_F5	     = 074h
                                                VK_F6	     = 075h
                                                VK_F7	     = 076h
                                                VK_F8	     = 077h
                                                VK_F9	     = 078h
                                                VK_F10	     = 079h
                                                VK_F11	     = 07Ah
                                                VK_F12	     = 07Bh
                                                VK_F13	     = 07Ch
                                                VK_F14	     = 07Dh
                                                VK_F15	     = 07Eh
                                                VK_F16	     = 07Fh
                                                VK_F17	     = 080h
                                                VK_F18	     = 081h
                                                VK_F19	     = 082h
                                                VK_F20	     = 083h
                                                VK_F21	     = 084h
                                                VK_F22	     = 085h
                                                VK_F23	     = 086h
                                                VK_F24	     = 087h
                                                VK_NUMLOCK   = 090h
                                                VK_SCROLL    = 091h
                                                VK_LSHIFT    = 0A0h
                                                VK_RSHIFT    = 0A1h
                                                VK_LCONTROL  = 0A2h
                                                VK_RCONTROL  = 0A3h
                                                VK_LMENU     = 0A4h
                                                VK_RMENU     = 0A5h
                                                VK_ATTN      = 0F6h
                                                VK_CRSEL     = 0F7h
                                                VK_EXSEL     = 0F8h
                                                VK_EREOF     = 0F9h
                                                VK_PLAY      = 0FAh
                                                VK_ZOOM      = 0FBh
                                                VK_NONAME    = 0FCh
                                                VK_PA1	     = 0FDh
                                                VK_OEM_CLEAR = 0FEh
                                                
                                                ; Accelerator flags
                                                
                                                FVIRTKEY  = 01h
                                                FNOINVERT = 02h
                                                FSHIFT	  = 04h
                                                FCONTROL  = 08h
                                                FALT	  = 10h
                                                
                                                ; GetClassLong offsets
                                                
                                                GCL_MENUNAME	  = -8
                                                GCL_HBRBACKGROUND = -10
                                                GCL_HCURSOR	  = -12
                                                GCL_HICON	  = -14
                                                GCL_HMODULE	  = -16
                                                GCL_CBWNDEXTRA	  = -18
                                                GCL_CBCLSEXTRA	  = -20
                                                GCL_WNDPROC	  = -24
                                                GCL_STYLE	  = -26
                                                GCW_ATOM	  = -32
                                                GCL_HICONSM	  = -34
                                                
                                                ; WNDCLASS parameters
                                                
                                                DLGWINDOWEXTRA = 30
                                                
                                                ; GetWindowLong offsets
                                                
                                                GWL_WNDPROC	  = -4
                                                GWL_HINSTANCE	  = -6
                                                GWL_HWNDPARENT	  = -8
                                                GWL_STYLE	  = -16
                                                GWL_EXSTYLE	  = -20
                                                GWL_USERDATA	  = -21
                                                GWL_ID		  = -12
                                                DWL_MSGRESULT	  = 0
                                                DWL_DLGPROC	  = 4
                                                DWL_USER	  = 8
                                                
                                                ; GetSystemMetrics codes
                                                
                                                SM_CXSCREEN	     = 0
                                                SM_CYSCREEN	     = 1
                                                SM_CXVSCROLL	     = 2
                                                SM_CYHSCROLL	     = 3
                                                SM_CYCAPTION	     = 4
                                                SM_CXBORDER	     = 5
                                                SM_CYBORDER	     = 6
                                                SM_CXDLGFRAME	     = 7
                                                SM_CYDLGFRAME	     = 8
                                                SM_CYVTHUMB	     = 9
                                                SM_CXHTHUMB	     = 10
                                                SM_CXICON	     = 11
                                                SM_CYICON	     = 12
                                                SM_CXCURSOR	     = 13
                                                SM_CYCURSOR	     = 14
                                                SM_CYMENU	     = 15
                                                SM_CXFULLSCREEN      = 16
                                                SM_CYFULLSCREEN      = 17
                                                SM_CYKANJIWINDOW     = 18
                                                SM_MOUSEPRESENT      = 19
                                                SM_CYVSCROLL	     = 20
                                                SM_CXHSCROLL	     = 21
                                                SM_DEBUG	     = 22
                                                SM_SWAPBUTTON	     = 23
                                                SM_RESERVED1	     = 24
                                                SM_RESERVED2	     = 25
                                                SM_RESERVED3	     = 26
                                                SM_RESERVED4	     = 27
                                                SM_CXMIN	     = 28
                                                SM_CYMIN	     = 29
                                                SM_CXSIZE	     = 30
                                                SM_CYSIZE	     = 31
                                                SM_CXFRAME	     = 32
                                                SM_CYFRAME	     = 33
                                                SM_CXMINTRACK	     = 34
                                                SM_CYMINTRACK	     = 35
                                                SM_CXDOUBLECLK	     = 36
                                                SM_CYDOUBLECLK	     = 37
                                                SM_CXICONSPACING     = 38
                                                SM_CYICONSPACING     = 39
                                                SM_MENUDROPALIGNMENT = 40
                                                SM_PENWINDOWS	     = 41
                                                SM_DBCSENABLED	     = 42
                                                SM_CMOUSEBUTTONS     = 43
                                                SM_CXFIXEDFRAME      = SM_CXDLGFRAME
                                                SM_CYFIXEDFRAME      = SM_CYDLGFRAME
                                                SM_CXSIZEFRAME	     = SM_CXFRAME
                                                SM_CYSIZEFRAME	     = SM_CYFRAME
                                                SM_SECURE	     = 44
                                                SM_CXEDGE	     = 45
                                                SM_CYEDGE	     = 46
                                                SM_CXMINSPACING      = 47
                                                SM_CYMINSPACING      = 48
                                                SM_CXSMICON	     = 49
                                                SM_CYSMICON	     = 50
                                                SM_CYSMCAPTION	     = 51
                                                SM_CXSMSIZE	     = 52
                                                SM_CYSMSIZE	     = 53
                                                SM_CXMENUSIZE	     = 54
                                                SM_CYMENUSIZE	     = 55
                                                SM_ARRANGE	     = 56
                                                SM_CXMINIMIZED	     = 57
                                                SM_CYMINIMIZED	     = 58
                                                SM_CXMAXTRACK	     = 59
                                                SM_CYMAXTRACK	     = 60
                                                SM_CXMAXIMIZED	     = 61
                                                SM_CYMAXIMIZED	     = 62
                                                SM_NETWORK	     = 63
                                                SM_CLEANBOOT	     = 67
                                                SM_CXDRAG	     = 68
                                                SM_CYDRAG	     = 69
                                                SM_SHOWSOUNDS	     = 70
                                                SM_CXMENUCHECK	     = 71
                                                SM_CYMENUCHECK	     = 72
                                                SM_SLOWMACHINE	     = 73
                                                SM_MIDEASTENABLED    = 74
                                                SM_MOUSEWHEELPRESENT = 75
                                                SM_CMETRICS	     = 76
                                                
                                                ; Predefined cursor identifiers
                                                
                                                IDC_ARROW	= 32512
                                                IDC_IBEAM	= 32513
                                                IDC_WAIT	= 32514
                                                IDC_CROSS	= 32515
                                                IDC_UPARROW	= 32516
                                                IDC_SIZE	= 32640
                                                IDC_ICON	= 32641
                                                IDC_SIZENWSE	= 32642
                                                IDC_SIZENESW	= 32643
                                                IDC_SIZEWE	= 32644
                                                IDC_SIZENS	= 32645
                                                IDC_NO		= 32648
                                                IDC_HAND	= 32649
                                                IDC_APPSTARTING = 32650
                                                IDC_HELP	= 32651
                                                
                                                ; Predefined icon identifiers
                                                
                                                IDI_APPLICATION = 32512
                                                IDI_HAND	= 32513
                                                IDI_QUESTION	= 32514
                                                IDI_EXCLAMATION = 32515
                                                IDI_ASTERISK	= 32516
                                                IDI_WINLOGO	= 32517
                                                
                                                ; System colors
                                                
                                                COLOR_SCROLLBAR 	      = 0
                                                COLOR_BACKGROUND	      = 1
                                                COLOR_ACTIVECAPTION	      = 2
                                                COLOR_INACTIVECAPTION	      = 3
                                                COLOR_MENU		      = 4
                                                COLOR_WINDOW		      = 5
                                                COLOR_WINDOWFRAME	      = 6
                                                COLOR_MENUTEXT		      = 7
                                                COLOR_WINDOWTEXT	      = 8
                                                COLOR_CAPTIONTEXT	      = 9
                                                COLOR_ACTIVEBORDER	      = 10
                                                COLOR_INACTIVEBORDER	      = 11
                                                COLOR_APPWORKSPACE	      = 12
                                                COLOR_HIGHLIGHT 	      = 13
                                                COLOR_HIGHLIGHTTEXT	      = 14
                                                COLOR_BTNFACE		      = 15
                                                COLOR_BTNSHADOW 	      = 16
                                                COLOR_GRAYTEXT		      = 17
                                                COLOR_BTNTEXT		      = 18
                                                COLOR_INACTIVECAPTIONTEXT     = 19
                                                COLOR_BTNHIGHLIGHT	      = 20
                                                COLOR_3DDKSHADOW	      = 21
                                                COLOR_3DLIGHT		      = 22
                                                COLOR_INFOTEXT		      = 23
                                                COLOR_INFOBK		      = 24
                                                COLOR_HOTLIGHT		      = 26
                                                COLOR_GRADIENTACTIVECAPTION   = 27
                                                COLOR_GRADIENTINACTIVECAPTION = 28
                                                
                                                ; Button messages
                                                
                                                BM_GETCHECK = 00F0h
                                                BM_SETCHECK = 00F1h
                                                BM_GETSTATE = 00F2h
                                                BM_SETSTATE = 00F3h
                                                BM_SETSTYLE = 00F4h
                                                BM_CLICK    = 00F5h
                                                BM_GETIMAGE = 00F6h
                                                BM_SETIMAGE = 00F7h
                                                
                                                ; Button notifications
                                                
                                                BN_CLICKED	 = 0
                                                BN_PAINT	 = 1
                                                BN_HILITE	 = 2
                                                BN_UNHILITE	 = 3
                                                BN_DISABLE	 = 4
                                                BN_DOUBLECLICKED = 5
                                                BN_SETFOCUS	 = 6
                                                BN_KILLFOCUS	 = 7
                                                BN_PUSHED	 = BN_HILITE
                                                BN_UNPUSHED	 = BN_UNHILITE
                                                BN_DBLCLK	 = BN_DOUBLECLICKED
                                                
                                                ; Button styles
                                                
                                                BS_PUSHBUTTON	   = 0000h
                                                BS_DEFPUSHBUTTON   = 0001h
                                                BS_CHECKBOX	   = 0002h
                                                BS_AUTOCHECKBOX    = 0003h
                                                BS_RADIOBUTTON	   = 0004h
                                                BS_3STATE	   = 0005h
                                                BS_AUTO3STATE	   = 0006h
                                                BS_GROUPBOX	   = 0007h
                                                BS_USERBUTTON	   = 0008h
                                                BS_AUTORADIOBUTTON = 0009h
                                                BS_OWNERDRAW	   = 000Bh
                                                BS_TEXT 	   = 0000h
                                                BS_LEFTTEXT	   = 0020h
                                                BS_RIGHTBUTTON	   = BS_LEFTTEXT
                                                BS_ICON 	   = 0040h
                                                BS_BITMAP	   = 0080h
                                                BS_LEFT 	   = 0100h
                                                BS_RIGHT	   = 0200h
                                                BS_CENTER	   = 0300h
                                                BS_TOP		   = 0400h
                                                BS_BOTTOM	   = 0800h
                                                BS_VCENTER	   = 0C00h
                                                BS_PUSHLIKE	   = 1000h
                                                BS_MULTILINE	   = 2000h
                                                BS_NOTIFY	   = 4000h
                                                BS_FLAT 	   = 8000h
                                                
                                                ; Button states
                                                
                                                BST_UNCHECKED	  = 0
                                                BST_CHECKED	  = 1
                                                BST_INDETERMINATE = 2
                                                BST_PUSHED	  = 4
                                                BST_FOCUS	  = 8
                                                
                                                ; List box messages
                                                
                                                LB_ADDSTRING	       = 0180h
                                                LB_INSERTSTRING        = 0181h
                                                LB_DELETESTRING        = 0182h
                                                LB_SELITEMRANGEEX      = 0183h
                                                LB_RESETCONTENT        = 0184h
                                                LB_SETSEL	       = 0185h
                                                LB_SETCURSEL	       = 0186h
                                                LB_GETSEL	       = 0187h
                                                LB_GETCURSEL	       = 0188h
                                                LB_GETTEXT	       = 0189h
                                                LB_GETTEXTLEN	       = 018Ah
                                                LB_GETCOUNT	       = 018Bh
                                                LB_SELECTSTRING        = 018Ch
                                                LB_DIR		       = 018Dh
                                                LB_GETTOPINDEX	       = 018Eh
                                                LB_FINDSTRING	       = 018Fh
                                                LB_GETSELCOUNT	       = 0190h
                                                LB_GETSELITEMS	       = 0191h
                                                LB_SETTABSTOPS	       = 0192h
                                                LB_GETHORIZONTALEXTENT = 0193h
                                                LB_SETHORIZONTALEXTENT = 0194h
                                                LB_SETCOLUMNWIDTH      = 0195h
                                                LB_ADDFILE	       = 0196h
                                                LB_SETTOPINDEX	       = 0197h
                                                LB_GETITEMRECT	       = 0198h
                                                LB_GETITEMDATA	       = 0199h
                                                LB_SETITEMDATA	       = 019Ah
                                                LB_SELITEMRANGE        = 019Bh
                                                LB_SETANCHORINDEX      = 019Ch
                                                LB_GETANCHORINDEX      = 019Dh
                                                LB_SETCARETINDEX       = 019Eh
                                                LB_GETCARETINDEX       = 019Fh
                                                LB_SETITEMHEIGHT       = 01A0h
                                                LB_GETITEMHEIGHT       = 01A1h
                                                LB_FINDSTRINGEXACT     = 01A2h
                                                LB_SETLOCALE	       = 01A5h
                                                LB_GETLOCALE	       = 01A6h
                                                LB_SETCOUNT	       = 01A7h
                                                LB_INITSTORAGE	       = 01A8h
                                                LB_ITEMFROMPOINT       = 01A9h
                                                
                                                ; List box notifications
                                                
                                                LBN_ERRSPACE  = -2
                                                LBN_SELCHANGE = 1
                                                LBN_DBLCLK    = 2
                                                LBN_SELCANCEL = 3
                                                LBN_SETFOCUS  = 4
                                                LBN_KILLFOCUS = 5
                                                
                                                ; List box styles
                                                
                                                LBS_NOTIFY	      = 0001h
                                                LBS_SORT	      = 0002h
                                                LBS_NOREDRAW	      = 0004h
                                                LBS_MULTIPLESEL       = 0008h
                                                LBS_OWNERDRAWFIXED    = 0010h
                                                LBS_OWNERDRAWVARIABLE = 0020h
                                                LBS_HASSTRINGS	      = 0040h
                                                LBS_USETABSTOPS       = 0080h
                                                LBS_NOINTEGRALHEIGHT  = 0100h
                                                LBS_MULTICOLUMN       = 0200h
                                                LBS_WANTKEYBOARDINPUT = 0400h
                                                LBS_EXTENDEDSEL       = 0800h
                                                LBS_DISABLENOSCROLL   = 1000h
                                                LBS_NODATA	      = 2000h
                                                LBS_NOSEL	      = 4000h
                                                LBS_STANDARD	      = LBS_NOTIFY or LBS_SORT or WS_VSCROLL or WS_BORDER
                                                
                                                ; List box return values
                                                
                                                LB_OKAY     = 0
                                                LB_ERR	    = -1
                                                LB_ERRSPACE = -2
                                                
                                                ; Combo box messages
                                                
                                                CB_GETEDITSEL		 = 0140h
                                                CB_LIMITTEXT		 = 0141h
                                                CB_SETEDITSEL		 = 0142h
                                                CB_ADDSTRING		 = 0143h
                                                CB_DELETESTRING 	 = 0144h
                                                CB_DIR			 = 0145h
                                                CB_GETCOUNT		 = 0146h
                                                CB_GETCURSEL		 = 0147h
                                                CB_GETLBTEXT		 = 0148h
                                                CB_GETLBTEXTLEN 	 = 0149h
                                                CB_INSERTSTRING 	 = 014Ah
                                                CB_RESETCONTENT 	 = 014Bh
                                                CB_FINDSTRING		 = 014Ch
                                                CB_SELECTSTRING 	 = 014Dh
                                                CB_SETCURSEL		 = 014Eh
                                                CB_SHOWDROPDOWN 	 = 014Fh
                                                CB_GETITEMDATA		 = 0150h
                                                CB_SETITEMDATA		 = 0151h
                                                CB_GETDROPPEDCONTROLRECT = 0152h
                                                CB_SETITEMHEIGHT	 = 0153h
                                                CB_GETITEMHEIGHT	 = 0154h
                                                CB_SETEXTENDEDUI	 = 0155h
                                                CB_GETEXTENDEDUI	 = 0156h
                                                CB_GETDROPPEDSTATE	 = 0157h
                                                CB_FINDSTRINGEXACT	 = 0158h
                                                CB_SETLOCALE		 = 0159h
                                                CB_GETLOCALE		 = 015Ah
                                                CB_GETTOPINDEX		 = 015Bh
                                                CB_SETTOPINDEX		 = 015Ch
                                                CB_GETHORIZONTALEXTENT	 = 015Dh
                                                CB_SETHORIZONTALEXTENT	 = 015Eh
                                                CB_GETDROPPEDWIDTH	 = 015Fh
                                                CB_SETDROPPEDWIDTH	 = 0160h
                                                CB_INITSTORAGE		 = 0161h
                                                
                                                ; Combo box notifications
                                                
                                                CBN_ERRSPACE	 = -1
                                                CBN_SELCHANGE	 = 1
                                                CBN_DBLCLK	 = 2
                                                CBN_SETFOCUS	 = 3
                                                CBN_KILLFOCUS	 = 4
                                                CBN_EDITCHANGE	 = 5
                                                CBN_EDITUPDATE	 = 6
                                                CBN_DROPDOWN	 = 7
                                                CBN_CLOSEUP	 = 8
                                                CBN_SELENDOK	 = 9
                                                CBN_SELENDCANCEL = 10
                                                
                                                ; Combo box styles
                                                
                                                CBS_SIMPLE	      = 0001h
                                                CBS_DROPDOWN	      = 0002h
                                                CBS_DROPDOWNLIST      = 0003h
                                                CBS_OWNERDRAWFIXED    = 0010h
                                                CBS_OWNERDRAWVARIABLE = 0020h
                                                CBS_AUTOHSCROLL       = 0040h
                                                CBS_OEMCONVERT	      = 0080h
                                                CBS_SORT	      = 0100h
                                                CBS_HASSTRINGS	      = 0200h
                                                CBS_NOINTEGRALHEIGHT  = 0400h
                                                CBS_DISABLENOSCROLL   = 0800h
                                                CBS_UPPERCASE	      = 2000h
                                                CBS_LOWERCASE	      = 4000h
                                                
                                                ; Combo box return values
                                                
                                                CB_OKAY     = 0
                                                CB_ERR	    = -1
                                                CB_ERRSPACE = -2
                                                
                                                ; Edit control messages
                                                
                                                EM_GETSEL	       = 00B0h
                                                EM_SETSEL	       = 00B1h
                                                EM_GETRECT	       = 00B2h
                                                EM_SETRECT	       = 00B3h
                                                EM_SETRECTNP	       = 00B4h
                                                EM_SCROLL	       = 00B5h
                                                EM_LINESCROLL	       = 00B6h
                                                EM_SCROLLCARET	       = 00B7h
                                                EM_GETMODIFY	       = 00B8h
                                                EM_SETMODIFY	       = 00B9h
                                                EM_GETLINECOUNT        = 00BAh
                                                EM_LINEINDEX	       = 00BBh
                                                EM_SETHANDLE	       = 00BCh
                                                EM_GETHANDLE	       = 00BDh
                                                EM_GETTHUMB	       = 00BEh
                                                EM_LINELENGTH	       = 00C1h
                                                EM_REPLACESEL	       = 00C2h
                                                EM_GETLINE	       = 00C4h
                                                EM_LIMITTEXT	       = 00C5h
                                                EM_CANUNDO	       = 00C6h
                                                EM_UNDO 	       = 00C7h
                                                EM_FMTLINES	       = 00C8h
                                                EM_LINEFROMCHAR        = 00C9h
                                                EM_SETTABSTOPS	       = 00CBh
                                                EM_SETPASSWORDCHAR     = 00CCh
                                                EM_EMPTYUNDOBUFFER     = 00CDh
                                                EM_GETFIRSTVISIBLELINE = 00CEh
                                                EM_SETREADONLY	       = 00CFh
                                                EM_SETWORDBREAKPROC    = 00D0h
                                                EM_GETWORDBREAKPROC    = 00D1h
                                                EM_GETPASSWORDCHAR     = 00D2h
                                                EM_SETMARGINS	       = 00D3h
                                                EM_GETMARGINS	       = 00D4h
                                                EM_SETLIMITTEXT        = EM_LIMITTEXT
                                                EM_GETLIMITTEXT        = 00D5h
                                                EM_POSFROMCHAR	       = 00D6h
                                                EM_CHARFROMPOS	       = 00D7h
                                                
                                                ; Edit control EM_SETMARGIN parameters
                                                
                                                EC_LEFTMARGIN  = 1
                                                EC_RIGHTMARGIN = 2
                                                EC_USEFONTINFO = 0FFFFh
                                                
                                                ; Edit control notifications
                                                
                                                EN_SETFOCUS  = 0100h
                                                EN_KILLFOCUS = 0200h
                                                EN_CHANGE    = 0300h
                                                EN_UPDATE    = 0400h
                                                EN_ERRSPACE  = 0500h
                                                EN_MAXTEXT   = 0501h
                                                EN_HSCROLL   = 0601h
                                                EN_VSCROLL   = 0602h
                                                
                                                ; Edit control styles
                                                
                                                ES_LEFT        = 0000h
                                                ES_CENTER      = 0001h
                                                ES_RIGHT       = 0002h
                                                ES_MULTILINE   = 0004h
                                                ES_UPPERCASE   = 0008h
                                                ES_LOWERCASE   = 0010h
                                                ES_PASSWORD    = 0020h
                                                ES_AUTOVSCROLL = 0040h
                                                ES_AUTOHSCROLL = 0080h
                                                ES_NOHIDESEL   = 0100h
                                                ES_OEMCONVERT  = 0400h
                                                ES_READONLY    = 0800h
                                                ES_WANTRETURN  = 1000h
                                                ES_NUMBER      = 2000h
                                                
                                                ; Static window messages
                                                
                                                STM_SETICON  = 0170h
                                                STM_GETICON  = 0171h
                                                STM_SETIMAGE = 0172h
                                                STM_GETIMAGE = 0173h
                                                
                                                ; Static window notifications
                                                
                                                STN_CLICKED = 0
                                                STN_DBLCLK  = 1
                                                STN_ENABLE  = 2
                                                STN_DISABLE = 3
                                                
                                                ; Static window styles
                                                
                                                SS_LEFT 	  = 0000h
                                                SS_CENTER	  = 0001h
                                                SS_RIGHT	  = 0002h
                                                SS_ICON 	  = 0003h
                                                SS_BLACKRECT	  = 0004h
                                                SS_GRAYRECT	  = 0005h
                                                SS_WHITERECT	  = 0006h
                                                SS_BLACKFRAME	  = 0007h
                                                SS_GRAYFRAME	  = 0008h
                                                SS_WHITEFRAME	  = 0009h
                                                SS_USERITEM	  = 000Ah
                                                SS_SIMPLE	  = 000Bh
                                                SS_LEFTNOWORDWRAP = 000Ch
                                                SS_BITMAP	  = 000Eh
                                                SS_OWNERDRAW	  = 000Dh
                                                SS_ENHMETAFILE	  = 000Fh
                                                SS_ETCHEDHORZ	  = 0010h
                                                SS_ETCHEDVERT	  = 0011h
                                                SS_ETCHEDFRAME	  = 0012h
                                                SS_TYPEMASK	  = 001Fh
                                                SS_NOPREFIX	  = 0080h
                                                SS_NOTIFY	  = 0100h
                                                SS_CENTERIMAGE	  = 0200h
                                                SS_RIGHTJUST	  = 0400h
                                                SS_REALSIZEIMAGE  = 0800h
                                                SS_SUNKEN	  = 1000h
                                                
                                                ; Scroll bar constants
                                                
                                                SB_HORZ 	 = 0
                                                SB_VERT 	 = 1
                                                SB_CTL		 = 2
                                                SB_BOTH 	 = 3
                                                
                                                ; Scroll bar messages
                                                
                                                SBM_SETPOS	   = 00E0h
                                                SBM_GETPOS	   = 00E1h
                                                SBM_SETRANGE	   = 00E2h
                                                SBM_SETRANGEREDRAW = 00E6h
                                                SBM_GETRANGE	   = 00E3h
                                                SBM_ENABLE_ARROWS  = 00E4h
                                                SBM_SETSCROLLINFO  = 00E9h
                                                SBM_GETSCROLLINFO  = 00EAh
                                                
                                                ; Scroll bar commands
                                                
                                                SB_LINEUP	 = 0
                                                SB_LINELEFT	 = 0
                                                SB_LINEDOWN	 = 1
                                                SB_LINERIGHT	 = 1
                                                SB_PAGEUP	 = 2
                                                SB_PAGELEFT	 = 2
                                                SB_PAGEDOWN	 = 3
                                                SB_PAGERIGHT	 = 3
                                                SB_THUMBPOSITION = 4
                                                SB_THUMBTRACK	 = 5
                                                SB_TOP		 = 6
                                                SB_LEFT 	 = 6
                                                SB_BOTTOM	 = 7
                                                SB_RIGHT	 = 7
                                                SB_ENDSCROLL	 = 8
                                                
                                                ; Scroll bar styles
                                                
                                                SBS_HORZ		    = 0000h
                                                SBS_VERT		    = 0001h
                                                SBS_TOPALIGN		    = 0002h
                                                SBS_LEFTALIGN		    = 0002h
                                                SBS_BOTTOMALIGN 	    = 0004h
                                                SBS_RIGHTALIGN		    = 0004h
                                                SBS_SIZEBOXTOPLEFTALIGN     = 0002h
                                                SBS_SIZEBOXBOTTOMRIGHTALIGN = 0004h
                                                SBS_SIZEBOX		    = 0008h
                                                SBS_SIZEGRIP		    = 0010h
                                                
                                                ; Scroll bar info flags
                                                
                                                SIF_RANGE	    = 0001h
                                                SIF_PAGE	    = 0002h
                                                SIF_POS 	    = 0004h
                                                SIF_DISABLENOSCROLL = 0008h
                                                SIF_TRACKPOS	    = 0010h
                                                SIF_ALL 	    = SIF_RANGE or SIF_PAGE or SIF_POS or SIF_TRACKPOS
                                                
                                                ; Dialog styles
                                                
                                                DS_ABSALIGN	 = 0001h
                                                DS_SYSMODAL	 = 0002h
                                                DS_3DLOOK	 = 0004h
                                                DS_FIXEDSYS	 = 0008h
                                                DS_NOFAILCREATE  = 0010h
                                                DS_LOCALEDIT	 = 0020h
                                                DS_SETFONT	 = 0040h
                                                DS_MODALFRAME	 = 0080h
                                                DS_NOIDLEMSG	 = 0100h
                                                DS_SETFOREGROUND = 0200h
                                                DS_CONTROL	 = 0400h
                                                DS_CENTER	 = 0800h
                                                DS_CENTERMOUSE	 = 1000h
                                                DS_CONTEXTHELP	 = 2000h
                                                
                                                ; Dialog codes
                                                
                                                DLGC_WANTARROWS      = 0001h
                                                DLGC_WANTTAB	     = 0002h
                                                DLGC_WANTALLKEYS     = 0004h
                                                DLGC_WANTMESSAGE     = 0004h
                                                DLGC_HASSETSEL	     = 0008h
                                                DLGC_DEFPUSHBUTTON   = 0010h
                                                DLGC_UNDEFPUSHBUTTON = 0020h
                                                DLGC_RADIOBUTTON     = 0040h
                                                DLGC_WANTCHARS	     = 0080h
                                                DLGC_STATIC	     = 0100h
                                                DLGC_BUTTON	     = 2000h
                                                
                                                ; Menu flags
                                                
                                                MF_INSERT	   = 0000h
                                                MF_CHANGE	   = 0080h
                                                MF_APPEND	   = 0100h
                                                MF_DELETE	   = 0200h
                                                MF_REMOVE	   = 1000h
                                                MF_BYCOMMAND	   = 0000h
                                                MF_BYPOSITION	   = 0400h
                                                MF_SEPARATOR	   = 0800h
                                                MF_UNCHECKED	   = 0000h
                                                MF_ENABLED	   = 0000h
                                                MF_GRAYED	   = 0001h
                                                MF_DISABLED	   = 0002h
                                                MF_CHECKED	   = 0008h
                                                MF_USECHECKBITMAPS = 0200h
                                                MF_STRING	   = 0000h
                                                MF_BITMAP	   = 0004h
                                                MF_OWNERDRAW	   = 0100h
                                                MF_POPUP	   = 0010h
                                                MF_MENUBARBREAK    = 0020h
                                                MF_MENUBREAK	   = 0040h
                                                MF_UNHILITE	   = 0000h
                                                MF_HILITE	   = 0080h
                                                MF_DEFAULT	   = 1000h
                                                MF_SYSMENU	   = 2000h
                                                MF_HELP 	   = 4000h
                                                MF_RIGHTJUSTIFY    = 4000h
                                                MF_MOUSESELECT	   = 8000h
                                                MF_END		   = 0080h
                                                MFT_STRING	   = MF_STRING
                                                MFT_BITMAP	   = MF_BITMAP
                                                MFT_MENUBARBREAK   = MF_MENUBARBREAK
                                                MFT_MENUBREAK	   = MF_MENUBREAK
                                                MFT_OWNERDRAW	   = MF_OWNERDRAW
                                                MFT_RADIOCHECK	   = 0200h
                                                MFT_SEPARATOR	   = MF_SEPARATOR
                                                MFT_RIGHTORDER	   = 2000h
                                                MFT_RIGHTJUSTIFY   = MF_RIGHTJUSTIFY
                                                MFS_GRAYED	   = 0003h
                                                MFS_DISABLED	   = MFS_GRAYED
                                                MFS_CHECKED	   = MF_CHECKED
                                                MFS_HILITE	   = MF_HILITE
                                                MFS_ENABLED	   = MF_ENABLED
                                                MFS_UNCHECKED	   = MF_UNCHECKED
                                                MFS_UNHILITE	   = MF_UNHILITE
                                                MFS_DEFAULT	   = MF_DEFAULT
                                                MFR_POPUP	   = 0001h
                                                MFR_END 	   = MF_END
                                                
                                                ; System menu command values
                                                
                                                SC_SIZE 	= 61440
                                                SC_MOVE 	= 61456
                                                SC_MINIMIZE	= 61472
                                                SC_MAXIMIZE	= 61488
                                                SC_NEXTWINDOW	= 61504
                                                SC_PREVWINDOW	= 61520
                                                SC_CLOSE	= 61536
                                                SC_VSCROLL	= 61552
                                                SC_HSCROLL	= 61568
                                                SC_MOUSEMENU	= 61584
                                                SC_KEYMENU	= 61696
                                                SC_ARRANGE	= 61712
                                                SC_RESTORE	= 61728
                                                SC_TASKLIST	= 61744
                                                SC_SCREENSAVE	= 61760
                                                SC_HOTKEY	= 61776
                                                SC_DEFAULT	= 61792
                                                SC_MONITORPOWER = 61808
                                                SC_CONTEXTHELP	= 61824
                                                SC_SEPARATOR	= 61455
                                                
                                                ; Border types
                                                
                                                BDR_RAISEDOUTER = 01h
                                                BDR_SUNKENOUTER = 02h
                                                BDR_RAISEDINNER = 04h
                                                BDR_SUNKENINNER = 08h
                                                BDR_OUTER	= 03h
                                                BDR_INNER	= 0Ch
                                                BDR_RAISED	= 05h
                                                BDR_SUNKEN	= 0Ah
                                                EDGE_RAISED	= BDR_RAISEDOUTER or BDR_RAISEDINNER
                                                EDGE_SUNKEN	= BDR_SUNKENOUTER or BDR_SUNKENINNER
                                                EDGE_ETCHED	= BDR_SUNKENOUTER or BDR_RAISEDINNER
                                                EDGE_BUMP	= BDR_RAISEDOUTER or BDR_SUNKENINNER
                                                
                                                ; Border flags
                                                
                                                BF_LEFT 		   = 0001h
                                                BF_TOP			   = 0002h
                                                BF_RIGHT		   = 0004h
                                                BF_BOTTOM		   = 0008h
                                                BF_TOPLEFT		   = BF_TOP or BF_LEFT
                                                BF_TOPRIGHT		   = BF_TOP or BF_RIGHT
                                                BF_BOTTOMLEFT		   = BF_BOTTOM or BF_LEFT
                                                BF_BOTTOMRIGHT		   = BF_BOTTOM or BF_RIGHT
                                                BF_RECT 		   = BF_LEFT or BF_TOP or BF_RIGHT or BF_BOTTOM
                                                BF_DIAGONAL		   = 0010h
                                                BF_DIAGONAL_ENDTOPRIGHT    = BF_DIAGONAL or BF_TOP or BF_RIGHT
                                                BF_DIAGONAL_ENDTOPLEFT	   = BF_DIAGONAL or BF_TOP or BF_LEFT
                                                BF_DIAGONAL_ENDBOTTOMLEFT  = BF_DIAGONAL or BF_BOTTOM or BF_LEFT
                                                BF_DIAGONAL_ENDBOTTOMRIGHT = BF_DIAGONAL or BF_BOTTOM or BF_RIGHT
                                                BF_MIDDLE		   = 0800h
                                                BF_SOFT 		   = 1000h
                                                BF_ADJUST		   = 2000h
                                                BF_FLAT 		   = 4000h
                                                BF_MONO 		   = 8000h
                                                
                                                ; Frame control types
                                                
                                                DFC_CAPTION   = 1
                                                DFC_MENU      = 2
                                                DFC_SCROLL    = 3
                                                DFC_BUTTON    = 4
                                                DFC_POPUPMENU = 5
                                                
                                                ; Frame control states
                                                
                                                DFCS_CAPTIONCLOSE	 = 0000h
                                                DFCS_CAPTIONMIN 	 = 0001h
                                                DFCS_CAPTIONMAX 	 = 0002h
                                                DFCS_CAPTIONRESTORE	 = 0003h
                                                DFCS_CAPTIONHELP	 = 0004h
                                                DFCS_MENUARROW		 = 0000h
                                                DFCS_MENUCHECK		 = 0001h
                                                DFCS_MENUBULLET 	 = 0002h
                                                DFCS_MENUARROWRIGHT	 = 0004h
                                                DFCS_SCROLLUP		 = 0000h
                                                DFCS_SCROLLDOWN 	 = 0001h
                                                DFCS_SCROLLLEFT 	 = 0002h
                                                DFCS_SCROLLRIGHT	 = 0003h
                                                DFCS_SCROLLCOMBOBOX	 = 0005h
                                                DFCS_SCROLLSIZEGRIP	 = 0008h
                                                DFCS_SCROLLSIZEGRIPRIGHT = 0010h
                                                DFCS_BUTTONCHECK	 = 0000h
                                                DFCS_BUTTONRADIOIMAGE	 = 0001h
                                                DFCS_BUTTONRADIOMASK	 = 0002h
                                                DFCS_BUTTONRADIO	 = 0004h
                                                DFCS_BUTTON3STATE	 = 0008h
                                                DFCS_BUTTONPUSH 	 = 0010h
                                                DFCS_INACTIVE		 = 0100h
                                                DFCS_PUSHED		 = 0200h
                                                DFCS_CHECKED		 = 0400h
                                                DFCS_TRANSPARENT	 = 0800h
                                                DFCS_HOT		 = 1000h
                                                DFCS_ADJUSTRECT 	 = 2000h
                                                DFCS_FLAT		 = 4000h
                                                DFCS_MONO		 = 8000h
                                                
                                                ; DrawCaption flags
                                                
                                                DC_ACTIVE   = 01h
                                                DC_SMALLCAP = 02h
                                                DC_ICON     = 04h
                                                DC_TEXT     = 08h
                                                DC_INBUTTON = 10h
                                                
                                                ; DrawIconEx options
                                                
                                                DI_MASK        = 1
                                                DI_IMAGE       = 2
                                                DI_NORMAL      = 3
                                                DI_COMPAT      = 4
                                                DI_DEFAULTSIZE = 8
                                                
                                                ; DrawText parameters
                                                
                                                DT_TOP		   = 00000h
                                                DT_LEFT 	   = 00000h
                                                DT_CENTER	   = 00001h
                                                DT_RIGHT	   = 00002h
                                                DT_VCENTER	   = 00004h
                                                DT_BOTTOM	   = 00008h
                                                DT_WORDBREAK	   = 00010h
                                                DT_SINGLELINE	   = 00020h
                                                DT_EXPANDTABS	   = 00040h
                                                DT_TABSTOP	   = 00080h
                                                DT_NOCLIP	   = 00100h
                                                DT_EXTERNALLEADING = 00200h
                                                DT_CALCRECT	   = 00400h
                                                DT_NOPREFIX	   = 00800h
                                                DT_INTERNAL	   = 01000h
                                                DT_EDITCONTROL	   = 02000h
                                                DT_PATH_ELLIPSIS   = 04000h
                                                DT_END_ELLIPSIS    = 08000h
                                                DT_MODIFYSTRING    = 10000h
                                                DT_RTLREADING	   = 20000h
                                                DT_WORD_ELLIPSIS   = 40000h
                                                
                                                ; GetDCEx flags
                                                
                                                DCX_WINDOW	     = 000001h
                                                DCX_CACHE	     = 000002h
                                                DCX_NORESETATTRS     = 000004h
                                                DCX_CLIPCHILDREN     = 000008h
                                                DCX_CLIPSIBLINGS     = 000010h
                                                DCX_PARENTCLIP	     = 000020h
                                                DCX_EXCLUDERGN	     = 000040h
                                                DCX_INTERSECTRGN     = 000080h
                                                DCX_EXCLUDEUPDATE    = 000100h
                                                DCX_INTERSECTUPDATE  = 000200h
                                                DCX_LOCKWINDOWUPDATE = 000400h
                                                DCX_VALIDATE	     = 200000h
                                                
                                                ; SetWindowsHook codes
                                                
                                                WH_MSGFILTER	   = -1
                                                WH_JOURNALRECORD   = 0
                                                WH_JOURNALPLAYBACK = 1
                                                WH_KEYBOARD	   = 2
                                                WH_GETMESSAGE	   = 3
                                                WH_CALLWNDPROC	   = 4
                                                WH_CBT		   = 5
                                                WH_SYSMSGFILTER    = 6
                                                WH_MOUSE	   = 7
                                                WH_HARDWARE	   = 8
                                                WH_DEBUG	   = 9
                                                WH_SHELL	   = 10
                                                WH_FOREGROUNDIDLE  = 11
                                                WH_CALLWNDPROCRET  = 12
                                                WH_KEYBOARD_LL	   = 13
                                                WH_MOUSE_LL	   = 14
                                                
                                                ; Hook codes
                                                
                                                HC_ACTION      = 0
                                                HC_GETNEXT     = 1
                                                HC_SKIP        = 2
                                                HC_NOREMOVE    = 3
                                                HC_SYSMODALON  = 4
                                                HC_SYSMODALOFF = 5
                                                
                                                ; CBT hook codes
                                                
                                                HCBT_MOVESIZE	  = 0
                                                HCBT_MINMAX	  = 1
                                                HCBT_QS 	  = 2
                                                HCBT_CREATEWND	  = 3
                                                HCBT_DESTROYWND   = 4
                                                HCBT_ACTIVATE	  = 5
                                                HCBT_CLICKSKIPPED = 6
                                                HCBT_KEYSKIPPED   = 7
                                                HCBT_SYSCOMMAND   = 8
                                                HCBT_SETFOCUS	  = 9
                                                
                                                ; ExitWindowsEx flags
                                                
                                                EWX_LOGOFF   = 0
                                                EWX_SHUTDOWN = 1
                                                EWX_REBOOT   = 2
                                                EWX_FORCE    = 4
                                                EWX_POWEROFF = 8
                                                
                                                ; WinHelp commands
                                                
                                                HELP_CONTEXT	  = 001h
                                                HELP_QUIT	  = 002h
                                                HELP_INDEX	  = 003h
                                                HELP_CONTENTS	  = 003h
                                                HELP_HELPONHELP   = 004h
                                                HELP_SETINDEX	  = 005h
                                                HELP_SETCONTENTS  = 005h
                                                HELP_CONTEXTPOPUP = 008h
                                                HELP_FORCEFILE	  = 009h
                                                HELP_CONTEXTMENU  = 00Ah
                                                HELP_FINDER	  = 00Bh
                                                HELP_WM_HELP	  = 00Ch
                                                HELP_SETPOPUP_POS = 00Dh
                                                HELP_KEY	  = 101h
                                                HELP_COMMAND	  = 102h
                                                HELP_PARTIALKEY   = 105h
                                                HELP_MULTIKEY	  = 201h
                                                HELP_SETWINPOS	  = 203h
                                                
                                                ; keybd_event flags
                                                
                                                KEYEVENTF_EXTENDEDKEY = 1h
                                                KEYEVENTF_KEYUP       = 2h
                                                
                                                ; mouse_event flags
                                                
                                                MOUSEEVENTF_MOVE       = 0001h
                                                MOUSEEVENTF_LEFTDOWN   = 0002h
                                                MOUSEEVENTF_LEFTUP     = 0004h
                                                MOUSEEVENTF_RIGHTDOWN  = 0008h
                                                MOUSEEVENTF_RIGHTUP    = 0010h
                                                MOUSEEVENTF_MIDDLEDOWN = 0020h
                                                MOUSEEVENTF_MIDDLEUP   = 0040h
                                                MOUSEEVENTF_WHEEL      = 0800h
                                                MOUSEEVENTF_ABSOLUTE   = 8000h
                                                
                                                ; TrackPopupMenu flags
                                                
                                                TPM_LEFTBUTTON	    = 0000h
                                                TPM_RIGHTBUTTON     = 0002h
                                                TPM_LEFTALIGN	    = 0000h
                                                TPM_CENTERALIGN     = 0004h
                                                TPM_RIGHTALIGN	    = 0008h
                                                TPM_TOPALIGN	    = 0000h
                                                TPM_VCENTERALIGN    = 0010h
                                                TPM_BOTTOMALIGN     = 0020h
                                                TPM_HORIZONTAL	    = 0000h
                                                TPM_VERTICAL	    = 0040h
                                                TPM_NONOTIFY	    = 0080h
                                                TPM_RETURNCMD	    = 0100h
                                                TPM_RECURSE	    = 0001h
                                                TPM_HORPOSANIMATION = 0400h
                                                TPM_HORNEGANIMATION = 0800h
                                                TPM_VERPOSANIMATION = 1000h
                                                TPM_VERNEGANIMATION = 2000h
                                                TPM_NOANIMATION     = 4000h
                                                TPM_LAYOUTRTL	    = 8000h
                                                
                                                ; Menu item info mask values
                                                
                                                MIIM_STATE	= 001h
                                                MIIM_ID 	= 002h
                                                MIIM_SUBMENU	= 004h
                                                MIIM_CHECKMARKS = 008h
                                                MIIM_TYPE	= 010h
                                                MIIM_DATA	= 020h
                                                MIIM_STRING	= 040h
                                                MIIM_BITMAP	= 080h
                                                MIIM_FTYPE	= 100h
                                                
                                                ; DRAWITEMSTRUCT control types
                                                
                                                ODT_MENU     = 1
                                                ODT_LISTBOX  = 2
                                                ODT_COMBOBOX = 3
                                                ODT_BUTTON   = 4
                                                ODT_STATIC   = 5
                                                
                                                ; DRAWITEMSTRUCT actions
                                                
                                                ODA_DRAWENTIRE = 1
                                                ODA_SELECT     = 2
                                                ODA_FOCUS      = 4
                                                
                                                ; DRAWITEMSTRUCT states
                                                
                                                ODS_SELECTED	 = 0001h
                                                ODS_GRAYED	 = 0002h
                                                ODS_DISABLED	 = 0004h
                                                ODS_CHECKED	 = 0008h
                                                ODS_FOCUS	 = 0010h
                                                ODS_DEFAULT	 = 0020h
                                                ODS_COMBOBOXEDIT = 1000h
                                                ODS_HOTLIGHT	 = 0040h
                                                ODS_INACTIVE	 = 0080h
                                                
                                                ; WINDOWPLACEMENT flags
                                                
                                                WPF_SETMINPOSITION     = 1
                                                WPF_RESTORETOMAXIMIZED = 2
                                                
                                                ; Layered window attributes
                                                
                                                LWA_COLORKEY = 1
                                                LWA_ALPHA    = 2
                                                
                                                ; UpdateLayeredWindow flags
                                                
                                                ULW_COLORKEY = 1
                                                ULW_ALPHA    = 2
                                                ULW_OPAQUE   = 4
                                                
                                                ; SystemParametersInfo parameters
                                                
                                                SPI_GETACCESSTIMEOUT	  = 60
                                                SPI_GETANIMATION	  = 72
                                                SPI_GETBEEP		  = 1
                                                SPI_GETBORDER		  = 5
                                                SPI_GETDEFAULTINPUTLANG   = 89
                                                SPI_GETDRAGFULLWINDOWS	  = 38
                                                SPI_GETFASTTASKSWITCH	  = 35
                                                SPI_GETFILTERKEYS	  = 50
                                                SPI_GETFONTSMOOTHING	  = 74
                                                SPI_GETGRIDGRANULARITY	  = 18
                                                SPI_GETHIGHCONTRAST	  = 66
                                                SPI_GETICONMETRICS	  = 45
                                                SPI_GETICONTITLELOGFONT   = 31
                                                SPI_GETICONTITLEWRAP	  = 25
                                                SPI_GETKEYBOARDDELAY	  = 22
                                                SPI_GETKEYBOARDPREF	  = 68
                                                SPI_GETKEYBOARDSPEED	  = 10
                                                SPI_GETLOWPOWERACTIVE	  = 83
                                                SPI_GETLOWPOWERTIMEOUT	  = 79
                                                SPI_GETMENUDROPALIGNMENT  = 27
                                                SPI_GETMINIMIZEDMETRICS   = 43
                                                SPI_GETMOUSE		  = 3
                                                SPI_GETMOUSEKEYS	  = 54
                                                SPI_GETMOUSETRAILS	  = 94
                                                SPI_GETNONCLIENTMETRICS   = 41
                                                SPI_GETPOWEROFFACTIVE	  = 84
                                                SPI_GETPOWEROFFTIMEOUT	  = 80
                                                SPI_GETSCREENREADER	  = 70
                                                SPI_GETSCREENSAVEACTIVE   = 16
                                                SPI_GETSCREENSAVETIMEOUT  = 14
                                                SPI_GETSERIALKEYS	  = 62
                                                SPI_GETSHOWSOUNDS	  = 56
                                                SPI_GETSOUNDSENTRY	  = 64
                                                SPI_GETSTICKYKEYS	  = 58
                                                SPI_GETTOGGLEKEYS	  = 52
                                                SPI_GETWINDOWSEXTENSION   = 92
                                                SPI_GETWORKAREA 	  = 48
                                                SPI_ICONHORIZONTALSPACING = 13
                                                SPI_ICONVERTICALSPACING   = 24
                                                SPI_LANGDRIVER		  = 12
                                                SPI_SCREENSAVERRUNNING	  = 97
                                                SPI_SETACCESSTIMEOUT	  = 61
                                                SPI_SETANIMATION	  = 73
                                                SPI_SETBEEP		  = 2
                                                SPI_SETBORDER		  = 6
                                                SPI_SETDEFAULTINPUTLANG   = 90
                                                SPI_SETDESKPATTERN	  = 21
                                                SPI_SETDESKWALLPAPER	  = 20
                                                SPI_SETDOUBLECLICKTIME	  = 32
                                                SPI_SETDOUBLECLKHEIGHT	  = 30
                                                SPI_SETDOUBLECLKWIDTH	  = 29
                                                SPI_SETDRAGFULLWINDOWS	  = 37
                                                SPI_SETDRAGHEIGHT	  = 77
                                                SPI_SETDRAGWIDTH	  = 76
                                                SPI_SETFASTTASKSWITCH	  = 36
                                                SPI_SETFILTERKEYS	  = 51
                                                SPI_SETFONTSMOOTHING	  = 75
                                                SPI_SETGRIDGRANULARITY	  = 19
                                                SPI_SETHANDHELD 	  = 78
                                                SPI_SETHIGHCONTRAST	  = 67
                                                SPI_SETICONMETRICS	  = 46
                                                SPI_SETICONTITLELOGFONT   = 34
                                                SPI_SETICONTITLEWRAP	  = 26
                                                SPI_SETKEYBOARDDELAY	  = 23
                                                SPI_SETKEYBOARDPREF	  = 69
                                                SPI_SETKEYBOARDSPEED	  = 11
                                                SPI_SETLANGTOGGLE	  = 91
                                                SPI_SETLOWPOWERACTIVE	  = 85
                                                SPI_SETLOWPOWERTIMEOUT	  = 81
                                                SPI_SETMENUDROPALIGNMENT  = 28
                                                SPI_SETMINIMIZEDMETRICS   = 44
                                                SPI_SETMOUSE		  = 4
                                                SPI_SETMOUSEBUTTONSWAP	  = 33
                                                SPI_SETMOUSEKEYS	  = 55
                                                SPI_SETMOUSETRAILS	  = 93
                                                SPI_SETNONCLIENTMETRICS   = 42
                                                SPI_SETPENWINDOWS	  = 49
                                                SPI_SETPOWEROFFACTIVE	  = 86
                                                SPI_SETPOWEROFFTIMEOUT	  = 82
                                                SPI_SETSCREENREADER	  = 71
                                                SPI_SETSCREENSAVEACTIVE   = 17
                                                SPI_SETSCREENSAVERRUNNING = 97
                                                SPI_SETSCREENSAVETIMEOUT  = 15
                                                SPI_SETSERIALKEYS	  = 63
                                                SPI_SETSHOWSOUNDS	  = 57
                                                SPI_SETSOUNDSENTRY	  = 65
                                                SPI_SETSTICKYKEYS	  = 59
                                                SPI_SETTOGGLEKEYS	  = 53
                                                SPI_SETWORKAREA 	  = 47
                                                
                                                ; SystemParametersInfo flags
                                                
                                                SPIF_UPDATEINIFILE	  = 1
                                                SPIF_SENDWININICHANGE	  = 2
                                                
                                                include 'equates/gdi32.inc'
                                                
                                                ; GDI32.DLL structures and constants
                                                
                                                struct SIZE
                                                  cx dd ?
                                                  cy dd ?
                                                ends
                                                
                                                struct BITMAP
                                                  bmType       dd ?
                                                  bmWidth      dd ?
                                                  bmHeight     dd ?
                                                  bmWidthBytes dd ?
                                                  bmPlanes     dw ?
                                                  bmBitsPixel  dw ?
                                                  bmBits       dd ?
                                                ends
                                                
                                                struct BITMAPCOREHEADER
                                                  bcSize     dd ?
                                                  bcWidth    dw ?
                                                  bcHeight   dw ?
                                                  bcPlanes   dw ?
                                                  bcBitCount dw ?
                                                ends
                                                
                                                struct BITMAPINFOHEADER
                                                  biSize          dd ?
                                                  biWidth         dd ?
                                                  biHeight        dd ?
                                                  biPlanes        dw ?
                                                  biBitCount      dw ?
                                                  biCompression   dd ?
                                                  biSizeImage     dd ?
                                                  biXPelsPerMeter dd ?
                                                  biYPelsPerMeter dd ?
                                                  biClrUsed       dd ?
                                                  biClrImportant  dd ?
                                                ends
                                                
                                                struct BITMAPFILEHEADER
                                                  bfType      dw ?
                                                  bfSize      dd ?
                                                  bfReserved1 dw ?
                                                  bfReserved2 dw ?
                                                  bfOffBits   dd ?
                                                ends
                                                
                                                struct TEXTMETRIC
                                                  tmHeight           dd ?
                                                  tmAscent           dd ?
                                                  tmDescent          dd ?
                                                  tmInternalLeading  dd ?
                                                  tmExternalLeading  dd ?
                                                  tmAveCharWidth     dd ?
                                                  tmMaxCharWidth     dd ?
                                                  tmWeight           dd ?
                                                  tmOverhang         dd ?
                                                  tmDigitizedAspectX dd ?
                                                  tmDigitizedAspectY dd ?
                                                  tmFirstChar        db ?
                                                  tmLastChar         db ?
                                                  tmDefaultChar      db ?
                                                  tmBreakChar        db ?
                                                  tmItalic           db ?
                                                  tmUnderlined       db ?
                                                  tmStruckOut        db ?
                                                  tmPitchAndFamily   db ?
                                                  tmCharSet          db ?
                                                ends
                                                
                                                struct LOGBRUSH
                                                  lbStyle dd ?
                                                  lbColor dd ?
                                                  lbHatch dd ?
                                                ends
                                                
                                                struct LOGPEN
                                                  lopnStyle dd ?
                                                  lopnWidth POINT
                                                  lopnColor dd ?
                                                ends
                                                
                                                struct EXTLOGPEN
                                                  elpPenStyle   dd ?
                                                  elpWidth      dd ?
                                                  elpBrushStyle dd ?
                                                  elpColor      dd ?
                                                  elpHatch      dd ?
                                                  elpNumEntries dd ?
                                                  elpStyleEntry dd ?
                                                ends
                                                
                                                struct LOGFONT
                                                  lfHeight         dd ?
                                                  lfWidth          dd ?
                                                  lfEscapement     dd ?
                                                  lfOrientation    dd ?
                                                  lfWeight         dd ?
                                                  lfItalic         db ?
                                                  lfUnderline      db ?
                                                  lfStrikeOut      db ?
                                                  lfCharSet        db ?
                                                  lfOutPrecision   db ?
                                                  lfClipPrecision  db ?
                                                  lfQuality        db ?
                                                  lfPitchAndFamily db ?
                                                  lfFaceName       db 32 dup (?)
                                                ends
                                                
                                                struct ENUMLOGFONT
                                                  elfLogFont  LOGFONT
                                                  elfFullName db 64 dup (?)
                                                  elfStyle    db 32 dup (?)
                                                ends
                                                
                                                struct ENUMLOGFONTEX
                                                  elfLogFont  LOGFONT
                                                  elfFullName db 64 dup (?)
                                                  elfStyle    db 32 dup (?)
                                                  elfScript   db 32 dup (?)
                                                ends
                                                
                                                struct PIXELFORMATDESCRIPTOR
                                                  nSize           dw ?
                                                  nVersion        dw ?
                                                  dwFlags         dd ?
                                                  iPixelType      db ?
                                                  cColorBits      db ?
                                                  cRedBits        db ?
                                                  cRedShift       db ?
                                                  cGreenBits      db ?
                                                  cGreenShift     db ?
                                                  cBlueBits       db ?
                                                  cBlueShift      db ?
                                                  cAlphaBits      db ?
                                                  cAlphaShift     db ?
                                                  cAccumBits      db ?
                                                  cAccumRedBits   db ?
                                                  cAccumGreenBits db ?
                                                  cAccumBlueBits  db ?
                                                  cAccumAlphaBits db ?
                                                  cDepthBits      db ?
                                                  cStencilBits    db ?
                                                  cAuxBuffers     db ?
                                                  iLayerType      db ?
                                                  bReserved       db ?
                                                  dwLayerMask     dd ?
                                                  dwVisibleMask   dd ?
                                                  dwDamageMask    dd ?
                                                ends
                                                
                                                ; General constants
                                                
                                                GDI_ERROR  = 0FFFFFFFFh
                                                HGDI_ERROR = 0FFFFFFFFh
                                                
                                                ; Binary raster operations
                                                
                                                R2_BLACK       = 1
                                                R2_NOTMERGEPEN = 2
                                                R2_MASKNOTPEN  = 3
                                                R2_NOTCOPYPEN  = 4
                                                R2_MASKPENNOT  = 5
                                                R2_NOT         = 6
                                                R2_XORPEN      = 7
                                                R2_NOTMASKPEN  = 8
                                                R2_MASKPEN     = 9
                                                R2_NOTXORPEN   = 10
                                                R2_NOP         = 11
                                                R2_MERGENOTPEN = 12
                                                R2_COPYPEN     = 13
                                                R2_MERGEPENNOT = 14
                                                R2_MERGEPEN    = 15
                                                R2_WHITE       = 16
                                                
                                                ; Raster operations
                                                
                                                SRCCOPY     = 00CC0020h
                                                SRCPAINT    = 00EE0086h
                                                SRCAND      = 008800C6h
                                                SRCINVERT   = 00660046h
                                                SRCERASE    = 00440328h
                                                NOTSRCCOPY  = 00330008h
                                                NOTSRCERASE = 001100A6h
                                                MERGECOPY   = 00C000CAh
                                                MERGEPAINT  = 00BB0226h
                                                PATCOPY     = 00F00021h
                                                PATPAINT    = 00FB0A09h
                                                PATINVERT   = 005A0049h
                                                DSTINVERT   = 00550009h
                                                BLACKNESS   = 00000042h
                                                WHITENESS   = 00FF0062h
                                                
                                                ; Region flags
                                                
                                                ERROR         = 0
                                                NULLREGION    = 1
                                                SIMPLEREGION  = 2
                                                COMPLEXREGION = 3
                                                
                                                ; CombineRgn styles
                                                
                                                RGN_AND  = 1
                                                RGN_OR   = 2
                                                RGN_XOR  = 3
                                                RGN_DIFF = 4
                                                RGN_COPY = 5
                                                
                                                ; StretchBlt modes
                                                
                                                BLACKONWHITE = 1
                                                WHITEONBLACK = 2
                                                COLORONCOLOR = 3
                                                HALFTONE     = 4
                                                STRETCH_ANDSCANS    = BLACKONWHITE
                                                STRETCH_ORSCANS     = WHITEONBLACK
                                                STRETCH_DELETESCANS = COLORONCOLOR
                                                STRETCH_HALFTONE    = HALFTONE
                                                
                                                ; PolyFill modes
                                                
                                                ALTERNATE = 1
                                                WINDING   = 2
                                                
                                                ; Background modes
                                                
                                                TRANSPARENT = 1
                                                OPAQUE      = 2
                                                
                                                ; Point types
                                                
                                                PT_CLOSEFIGURE = 1
                                                PT_LINETO      = 2
                                                PT_BEZIERTO    = 4
                                                PT_MOVETO      = 6
                                                
                                                ; Mapping modes
                                                
                                                MM_TEXT        = 1
                                                MM_LOMETRIC    = 2
                                                MM_HIMETRIC    = 3
                                                MM_LOENGLISH   = 4
                                                MM_HIENGLISH   = 5
                                                MM_TWIPS       = 6
                                                MM_ISOTROPIC   = 7
                                                MM_ANISOTROPIC = 8
                                                
                                                ; Coordinate modes
                                                
                                                ABSOLUTE = 1
                                                RELATIVE = 2
                                                
                                                ; Stock logical objects
                                                
                                                WHITE_BRUSH         = 0
                                                LTGRAY_BRUSH        = 1
                                                GRAY_BRUSH          = 2
                                                DKGRAY_BRUSH        = 3
                                                BLACK_BRUSH         = 4
                                                NULL_BRUSH          = 5
                                                HOLLOW_BRUSH        = NULL_BRUSH
                                                WHITE_PEN           = 6
                                                BLACK_PEN           = 7
                                                NULL_PEN            = 8
                                                OEM_FIXED_FONT      = 10
                                                ANSI_FIXED_FONT     = 11
                                                ANSI_VAR_FONT       = 12
                                                SYSTEM_FONT         = 13
                                                DEVICE_DEFAULT_FONT = 14
                                                DEFAULT_PALETTE     = 15
                                                SYSTEM_FIXED_FONT   = 16
                                                DEFAULT_GUI_FONT    = 17
                                                
                                                ; Brush styles
                                                
                                                BS_SOLID         = 0
                                                BS_NULL          = 1
                                                BS_HOLLOW        = BS_NULL
                                                BS_HATCHED       = 2
                                                BS_PATTERN       = 3
                                                BS_INDEXED       = 4
                                                BS_DIBPATTERN    = 5
                                                BS_DIBPATTERNPT  = 6
                                                BS_PATTERN8X8    = 7
                                                BS_DIBPATTERN8X8 = 8
                                                BS_MONOPATTERN   = 9
                                                
                                                ; Hatch styles
                                                
                                                HS_HORIZONTAL = 0
                                                HS_VERTICAL   = 1
                                                HS_FDIAGONAL  = 2
                                                HS_BDIAGONAL  = 3
                                                HS_CROSS      = 4
                                                HS_DIAGCROSS  = 5
                                                
                                                ; Pen styles
                                                
                                                PS_SOLID         = 0
                                                PS_DASH          = 1
                                                PS_DOT           = 2
                                                PS_DASHDOT       = 3
                                                PS_DASHDOTDOT    = 4
                                                PS_NULL          = 5
                                                PS_INSIDEFRAME   = 6
                                                PS_USERSTYLE     = 7
                                                PS_ALTERNATE     = 8
                                                PS_ENDCAP_ROUND  = 0
                                                PS_ENDCAP_SQUARE = 100h
                                                PS_ENDCAP_FLAT   = 200h
                                                PS_JOIN_ROUND    = 0
                                                PS_JOIN_BEVEL    = 1000h
                                                PS_JOIN_MITER    = 2000h
                                                PS_COSMETIC      = 0
                                                PS_GEOMETRIC     = 010000h
                                                
                                                ; Arc directions
                                                
                                                AD_COUNTERCLOCKWISE = 1
                                                AD_CLOCKWISE        = 2
                                                
                                                ; Text alignment options
                                                
                                                TA_NOUPDATECP = 0
                                                TA_UPDATECP   = 1
                                                TA_LEFT       = 0
                                                TA_RIGHT      = 2
                                                TA_CENTER     = 6
                                                TA_TOP        = 0
                                                TA_BOTTOM     = 8
                                                TA_BASELINE   = 24
                                                TA_RTLREADING = 100h
                                                VTA_BASELINE  = TA_BASELINE
                                                VTA_LEFT      = TA_BOTTOM
                                                VTA_RIGHT     = TA_TOP
                                                VTA_CENTER    = TA_CENTER
                                                VTA_BOTTOM    = TA_RIGHT
                                                VTA_TOP       = TA_LEFT
                                                
                                                ; ExtTextOut options
                                                
                                                ETO_OPAQUE         = 0002h
                                                ETO_CLIPPED        = 0004h
                                                ETO_GLYPH_INDEX    = 0010h
                                                ETO_RTLREADING     = 0080h
                                                ETO_IGNORELANGUAGE = 1000h
                                                
                                                ; Bitmap compression types
                                                
                                                BI_RGB       = 0
                                                BI_RLE8      = 1
                                                BI_RLE4      = 2
                                                BI_BITFIELDS = 3
                                                
                                                ; tmPitchAndFamily flags
                                                
                                                TMPF_FIXED_PITCH = 1
                                                TMPF_VECTOR      = 2
                                                TMPF_TRUETYPE    = 4
                                                TMPF_DEVICE      = 8
                                                
                                                ; Font output precision values
                                                
                                                OUT_DEFAULT_PRECIS        = 0
                                                OUT_STRING_PRECIS         = 1
                                                OUT_CHARACTER_PRECIS      = 2
                                                OUT_STROKE_PRECIS         = 3
                                                OUT_TT_PRECIS             = 4
                                                OUT_DEVICE_PRECIS         = 5
                                                OUT_RASTER_PRECIS         = 6
                                                OUT_TT_ONLY_PRECIS        = 7
                                                OUT_OUTLINE_PRECIS        = 8
                                                OUT_SCREEN_OUTLINE_PRECIS = 9
                                                
                                                ; Font clipping precision values
                                                
                                                CLIP_DEFAULT_PRECIS   = 0
                                                CLIP_CHARACTER_PRECIS = 1
                                                CLIP_STROKE_PRECIS    = 2
                                                CLIP_LH_ANGLES        = 10h
                                                CLIP_TT_ALWAYS        = 20h
                                                CLIP_EMBEDDED         = 80h
                                                
                                                ; Font output quality values
                                                
                                                DEFAULT_QUALITY        = 0
                                                DRAFT_QUALITY          = 1
                                                PROOF_QUALITY          = 2
                                                NONANTIALIASED_QUALITY = 3
                                                ANTIALIASED_QUALITY    = 4
                                                
                                                ; Font pitch values
                                                
                                                DEFAULT_PITCH  = 0
                                                FIXED_PITCH    = 1
                                                VARIABLE_PITCH = 2
                                                MONO_FONT      = 8
                                                
                                                ; Font families
                                                
                                                FF_DONTCARE   = 00h
                                                FF_ROMAN      = 10h
                                                FF_SWISS      = 20h
                                                FF_MODERN     = 30h
                                                FF_SCRIPT     = 40h
                                                FF_DECORATIVE = 50h
                                                
                                                ; Font weights
                                                
                                                FW_DONTCARE   = 0
                                                FW_THIN       = 100
                                                FW_EXTRALIGHT = 200
                                                FW_LIGHT      = 300
                                                FW_NORMAL     = 400
                                                FW_MEDIUM     = 500
                                                FW_SEMIBOLD   = 600
                                                FW_BOLD       = 700
                                                FW_EXTRABOLD  = 800
                                                FW_HEAVY      = 900
                                                FW_ULTRALIGHT = FW_EXTRALIGHT
                                                FW_REGULAR    = FW_NORMAL
                                                FW_DEMIBOLD   = FW_SEMIBOLD
                                                FW_ULTRABOLD  = FW_EXTRABOLD
                                                FW_BLACK      = FW_HEAVY
                                                
                                                ; Character set values
                                                
                                                ANSI_CHARSET        = 0
                                                DEFAULT_CHARSET     = 1
                                                SYMBOL_CHARSET      = 2
                                                SHIFTJIS_CHARSET    = 128
                                                HANGEUL_CHARSET     = 129
                                                GB2312_CHARSET      = 134
                                                CHINESEBIG5_CHARSET = 136
                                                OEM_CHARSET         = 255
                                                JOHAB_CHARSET       = 130
                                                HEBREW_CHARSET      = 177
                                                ARABIC_CHARSET      = 178
                                                GREEK_CHARSET       = 161
                                                TURKISH_CHARSET     = 162
                                                VIETNAMESE_CHARSET  = 163
                                                THAI_CHARSET        = 222
                                                EASTEUROPE_CHARSET  = 238
                                                RUSSIAN_CHARSET     = 204
                                                MAC_CHARSET         = 77
                                                BALTIC_CHARSET      = 186
                                                
                                                ; Pixel format constants
                                                
                                                PFD_TYPE_RGBA             = 0
                                                PFD_TYPE_COLORINDEX       = 1
                                                PFD_MAIN_PLANE            = 0
                                                PFD_OVERLAY_PLANE         = 1
                                                PFD_UNDERLAY_PLANE        = -1
                                                PFD_DOUBLEBUFFER          = 1
                                                PFD_STEREO                = 2
                                                PFD_DRAW_TO_WINDOW        = 4
                                                PFD_DRAW_TO_BITMAP        = 8
                                                PFD_SUPPORT_GDI           = 10h
                                                PFD_SUPPORT_OPENGL        = 20h
                                                PFD_GENERIC_FORMAT        = 40h
                                                PFD_NEED_PALETTE          = 80h
                                                PFD_NEED_SYSTEM_PALETTE   = 100h
                                                PFD_SWAP_EXCHANGE         = 200h
                                                PFD_SWAP_COPY             = 400h
                                                PFD_SWAP_LAYER_BUFFERS    = 800h
                                                PFD_GENERIC_ACCELERATED   = 1000h
                                                PFD_DEPTH_DONTCARE        = 20000000h
                                                PFD_DOUBLEBUFFER_DONTCARE = 40000000h
                                                PFD_STEREO_DONTCARE       = 80000000h
                                                
                                                include 'equates/comctl32.inc'
                                                
                                                ; COMCTL32.DLL structures and constants
                                                
                                                struct PROPSHEETPAGE
                                                  dwSize      dd ?
                                                  dwFlags     dd ?
                                                  hInstance   dd ?
                                                  pszTemplate dd ?
                                                  pszIcon     dd ?
                                                  pszTitle    dd ?
                                                  pfnDlgProc  dd ?
                                                  lParam      dd ?
                                                  pfnCallback dd ?
                                                  pcRefParent dd ?
                                                ends
                                                
                                                struct PROPSHEETHEADER
                                                  dwSize     dd ?
                                                  dwFlags    dd ?
                                                  hwndParent dd ?
                                                  hInstance  dd ?
                                                  pszIcon    dd ?
                                                  pszCaption dd ?
                                                  nPages     dd ?
                                                  pStartPage dd ?
                                                ends
                                                
                                                struct IMAGEINFO
                                                  hbmImage dd ?
                                                  hbmMask  dd ?
                                                  Unused1  dd ?
                                                  Unused2  dd ?
                                                  rcImage  dd ?
                                                ends
                                                
                                                struct HDITEM
                                                  mask	     dd ?
                                                  cxy	     dd ?
                                                  pszText    dd ?
                                                  hbm	     dd ?
                                                  cchTextMax dd ?
                                                  fmt	     dd ?
                                                  lParam     dd ?
                                                ends
                                                
                                                struct HDLAYOUT
                                                  prc	dd ?
                                                  pwpos dd ?
                                                ends
                                                
                                                struct HDHITTESTINFO
                                                  pt	POINT
                                                  flags dd ?
                                                  iItem dd ?
                                                ends
                                                
                                                struct HDNOTIFY
                                                  hdr	  NMHDR
                                                  iItem   dd ?
                                                  iButton dd ?
                                                  pitem   dd ?
                                                ends
                                                
                                                struct TBBUTTON
                                                  iBitmap   dd ?
                                                  idCommand dd ?
                                                  fsState   db ?
                                                  fsStyle   db ?
                                                	    dw ?
                                                  dwData    dd ?
                                                  iString   dd ?
                                                ends
                                                
                                                struct COLORMAP
                                                  from dd ?
                                                  to   dd ?
                                                ends
                                                
                                                struct TBADDBITMAP
                                                  hInst dd ?
                                                  nID	dd ?
                                                ends
                                                
                                                struct TBSAVEPARAMS
                                                  hkr	       dd ?
                                                  pszSubKey    dd ?
                                                  pszValueName dd ?
                                                ends
                                                
                                                struct TBREPLACEBITMAP
                                                  hInstOld dd ?
                                                  nIDOld   dd ?
                                                  hInstNew dd ?
                                                  nIDNew   dd ?
                                                  nButtons dd ?
                                                ends
                                                
                                                struct NMTOOLBAR
                                                  hdr	   NMHDR
                                                  iItem    dd ?
                                                  tbButton TBBUTTON
                                                  cchText  dd ?
                                                  pszText  dd ?
                                                ends
                                                
                                                struct REBARINFO
                                                  cbSize dd ?
                                                  fMask  dd ?
                                                  himl	 dd ?
                                                ends
                                                
                                                struct REBARBANDINFO
                                                  cbSize      dd ?
                                                  fMask       dd ?
                                                  fStyle      dd ?
                                                  clrFore     dd ?
                                                  clrBack     dd ?
                                                  lpText      dd ?
                                                  cch	      dd ?
                                                  iImage      dd ?
                                                  hwndChild   dd ?
                                                  cxMinChild  dd ?
                                                  cyMinChild  dd ?
                                                  cx	      dd ?
                                                  hbmBack     dd ?
                                                  wID	      dd ?
                                                ends
                                                
                                                struct TOOLINFO
                                                  cbSize   dd ?
                                                  uFlags   dd ?
                                                  hwnd	   dd ?
                                                  uId	   dd ?
                                                  Rect	   RECT
                                                  hInst    dd ?
                                                  lpszText dd ?
                                                ends
                                                
                                                struct TTHITTESTINFO
                                                  hwnd dd ?
                                                  pt   POINT
                                                  ti   TOOLINFO
                                                ends
                                                
                                                struct TOOLTOPTEXT
                                                  hdr	   NMHDR
                                                  lpszText dd ?
                                                  szText   db 80 dup (?)
                                                  hinst    dd ?
                                                  uFlags   dd ?
                                                ends
                                                
                                                struct UDACCEL
                                                  nSec dd ?
                                                  nInc dd ?
                                                ends
                                                
                                                struct NMUPDOWN
                                                  hdr	 NMHDR
                                                  iPos	 dd ?
                                                  iDelta dd ?
                                                ends
                                                
                                                struct LVITEM
                                                  mask	     dd ?
                                                  iItem      dd ?
                                                  iSubItem   dd ?
                                                  state      dd ?
                                                  stateMask  dd ?
                                                  pszText    dd ?
                                                  cchTextMax dd ?
                                                  iImage     dd ?
                                                  lParam     dd ?
                                                  iIndent    dd ?
                                                ends
                                                
                                                struct LVFINDINFO
                                                  flags       dd ?
                                                  psz	      dd ?
                                                  lParam      dd ?
                                                  pt	      POINT
                                                  vkDirection dd ?
                                                ends
                                                
                                                struct LVHITTESTINFO
                                                  pt	POINT
                                                  flags dd ?
                                                  iItem dd ?
                                                ends
                                                
                                                struct LVCOLUMN
                                                  mask	     dd ?
                                                  fmt	     dd ?
                                                  cx	     dd ?
                                                  pszText    dd ?
                                                  cchTextMax dd ?
                                                  iSubItem   dd ?
                                                ends
                                                
                                                struct NMLISTVIEW
                                                  hdr	    NMHDR
                                                  iItem     dd ?
                                                  iSubItem  dd ?
                                                  uNewState dd ?
                                                  uOldState dd ?
                                                  uChanged  dd ?
                                                  ptAction  POINT
                                                  lParam    dd ?
                                                ends
                                                
                                                struct NMCACHEHINT
                                                  hdr	NMHDR
                                                  iFrom dd ?
                                                  iTo	dd ?
                                                ends
                                                
                                                struct NMFINDITEM
                                                  hdr	 NMHDR
                                                  iStart dd ?
                                                  lvfi	 LVFINDINFO
                                                ends
                                                
                                                struct LVDISPINFO
                                                  hdr  NMHDR
                                                  item LVITEM
                                                ends
                                                
                                                struct LVKEYDOWN
                                                  hdr	NMHDR
                                                  wVKey dw ?
                                                  flags dd ?
                                                ends
                                                
                                                struct TVITEM
                                                  mask		 dd ?
                                                  hItem 	 dd ?
                                                  state 	 dd ?
                                                  stateMask	 dd ?
                                                  pszText	 dd ?
                                                  cchTextMax	 dd ?
                                                  iImage	 dd ?
                                                  iSelectedImage dd ?
                                                  cChildren	 dd ?
                                                  lParam	 dd ?
                                                ends
                                                
                                                struct TVINSERTSTRUCT
                                                  hParent      dd ?
                                                  hInsertAfter dd ?
                                                  item	       TVITEM
                                                ends
                                                
                                                struct TVHITTESTINFO
                                                  pt	POINT
                                                  flags dd ?
                                                  hItem dd ?
                                                ends
                                                
                                                struct TVSORTCB
                                                  hParent     dd ?
                                                  lpfnCompare dd ?
                                                  lParam      dd ?
                                                ends
                                                
                                                struct NMTREEVIEW
                                                  hdr	  NMHDR
                                                  action  dd ?
                                                  itemOld TVITEM
                                                  itemNew TVITEM
                                                  ptDrag  POINT
                                                ends
                                                
                                                struct TVDISPINFO
                                                  hdr  NMHDR
                                                  item TVITEM
                                                ends
                                                
                                                struct TVKEYDOWN
                                                  hdr	NMHDR
                                                  wVKey dw ?
                                                  flags dd ?
                                                ends
                                                
                                                struct TCITEMHEADER
                                                  mask	      dd ?
                                                  lpReserved1 dd ?
                                                  lpReserved2 dd ?
                                                  pszText     dd ?
                                                  cchTextMax  dd ?
                                                  iImage      dd ?
                                                ends
                                                
                                                struct TCITEM
                                                  mask	      dd ?
                                                  lpReserved1 dd ?
                                                  lpReserved2 dd ?
                                                  pszText     dd ?
                                                  cchTextMax  dd ?
                                                  iImage      dd ?
                                                  lParam      dd ?
                                                ends
                                                
                                                struct TCHITTESTINFO
                                                  pt	POINT
                                                  flags dd ?
                                                ends
                                                
                                                struct TCKEYDOWN
                                                  hdr	NMHDR
                                                  wVKey dw ?
                                                  flags dd ?
                                                ends
                                                
                                                struct MCHITTESTINFO
                                                  cbSize dd ?
                                                  pt	 POINT
                                                  uHit	 dd ?
                                                  st	 SYSTEMTIME
                                                ends
                                                
                                                struct NMSELCHANGE
                                                  nmhdr      NMHDR
                                                  stSelStart SYSTEMTIME
                                                  stSelEnd   SYSTEMTIME
                                                ends
                                                
                                                struct NMDAYSTATE
                                                  nmhdr       NMHDR
                                                  stStart     SYSTEMTIME
                                                  cDayState   dd ?
                                                  prgDayState dd ?
                                                ends
                                                
                                                struct NMDATETIMECHANGE
                                                  nmhdr   NMHDR
                                                  dwFlags dd ?
                                                  st	  SYSTEMTIME
                                                ends
                                                
                                                struct NMDATETIMESTRING
                                                  nmhdr 	NMHDR
                                                  pszUserString dd ?
                                                  st		SYSTEMTIME
                                                  dwFlags	dd ?
                                                ends
                                                
                                                struct NMDATETIMEWMKEYDOWN
                                                  nmhdr     NMHDR
                                                  nVirtKey  dd ?
                                                  pszFormat dd ?
                                                  st	    SYSTEMTIME
                                                ends
                                                
                                                struct NMDATETIMEFORMAT
                                                  nmhdr      NMHDR
                                                  pszFormat  dd ?
                                                  st	     SYSTEMTIME
                                                  pszDisplay dd ?
                                                  szDisplay  db 64 dup (?)
                                                ends
                                                
                                                struct NMDATETIMEFORMATQUERY
                                                  nmhdr     NMHDR
                                                  pszFormat dd ?
                                                  szMax     SIZE
                                                ends
                                                
                                                struct NMCUSTOMDRAW
                                                  hdr	      NMHDR
                                                  dwDrawStage dd ?
                                                  hdc	      dd ?
                                                  rc	      RECT
                                                  dwItemSpec  dd ?
                                                  uItemState  dd ?
                                                  lItemlParam dd ?
                                                ends
                                                
                                                struct NMLVCUSTOMDRAW
                                                  nmcd	      NMCUSTOMDRAW
                                                  clrText     dd ?
                                                  clrTextBk   dd ?
                                                  iSubItem    dd ?
                                                  dwItemType  dd ?
                                                  clrFace     dd ?
                                                  iIconEffect dd ?
                                                  iIconPhase  dd ?
                                                  iPartId     dd ?
                                                  iStateId    dd ?
                                                  rcText      RECT
                                                  uAlign      dd ?
                                                ends
                                                
                                                struct INITCOMMONCONTROLSEX
                                                  dwSize dd ?
                                                  dwICC  dd ?
                                                ends
                                                
                                                ; Common control window classes
                                                
                                                HOTKEY_CLASS	   equ 'msctls_hotkey32'
                                                PROGRESS_CLASS	   equ 'msctls_progress32'
                                                STATUS_CLASS	   equ 'msctls_statusbar32'
                                                TRACKBAR_CLASS	   equ 'msctls_trackbar32'
                                                UPDOWN_CLASS	   equ 'msctls_updown32'
                                                TOOLTIPS_CLASS	   equ 'tooltips_class32'
                                                ANIMATE_CLASS	   equ 'SysAnimate32'
                                                HEADER_CLASS	   equ 'SysHeader32'
                                                LISTVIEW_CLASS	   equ 'SysListView32'
                                                TREEVIEW_CLASS	   equ 'SysTreeView32'
                                                TABCONTROL_CLASS   equ 'SysTabControl32'
                                                MONTHCAL_CLASS	   equ 'SysMonthCal32'
                                                DATETIMEPICK_CLASS equ 'SysDateTimePick32'
                                                TOOLBAR_CLASS	   equ 'ToolbarWindow32'
                                                REBAR_CLASS	   equ 'ReBarWindow32'
                                                
                                                ; Ranges for control message IDs
                                                
                                                LVM_FIRST = 1000h
                                                TV_FIRST  = 1100h
                                                HDM_FIRST = 1200h
                                                TCM_FIRST = 1300h
                                                MCM_FIRST = 1000h
                                                DTM_FIRST = 1000h
                                                CCM_FIRST = 2000h
                                                
                                                ; Ranges for control notification IDs
                                                
                                                NM_FIRST   = 0
                                                LVN_FIRST  = -100
                                                PSN_FIRST  = -200
                                                HDN_FIRST  = -300
                                                TVN_FIRST  = -400
                                                TTN_FIRST  = -520
                                                TCN_FIRST  = -550
                                                CDN_FIRST  = -601
                                                TBN_FIRST  = -700
                                                UDN_FIRST  = -721
                                                MCN_FIRST  = -750
                                                DTN_FIRST  = -760
                                                CBEN_FIRST = -800
                                                RBN_FIRST  = -831
                                                
                                                ; Generic notifications
                                                
                                                NM_OUTOFMEMORY = NM_FIRST - 1
                                                NM_CLICK       = NM_FIRST - 2
                                                NM_DBLCLK      = NM_FIRST - 3
                                                NM_RETURN      = NM_FIRST - 4
                                                NM_RCLICK      = NM_FIRST - 5
                                                NM_RDBLCLK     = NM_FIRST - 6
                                                NM_SETFOCUS    = NM_FIRST - 7
                                                NM_KILLFOCUS   = NM_FIRST - 8
                                                NM_CUSTOMDRAW  = NM_FIRST - 12
                                                
                                                ; Common control styles
                                                
                                                CCS_TOP 	  = 01h
                                                CCS_NOMOVEY	  = 02h
                                                CCS_BOTTOM	  = 03h
                                                CCS_NORESIZE	  = 04h
                                                CCS_NOPARENTALIGN = 08h
                                                CCS_ADJUSTABLE	  = 20h
                                                CCS_NODIVIDER	  = 40h
                                                CCS_VERT	  = 80h
                                                CCS_LEFT	  = CCS_VERT or CCS_TOP
                                                CCS_RIGHT	  = CCS_VERT or CCS_BOTTOM
                                                CCS_NOMOVEX	  = CCS_VERT or CCS_NOMOVEY
                                                
                                                ; Owner-drawn control types
                                                
                                                ODT_HEADER   = 100
                                                ODT_TAB      = 101
                                                ODT_LISTVIEW = 102
                                                
                                                ; InitCommonControlsEx classes
                                                
                                                ICC_ANIMATE_CLASS      = 0080h
                                                ICC_BAR_CLASSES        = 0004h
                                                ICC_COOL_CLASSES       = 0400h
                                                ICC_DATE_CLASSES       = 0100h
                                                ICC_HOTKEY_CLASS       = 0040h
                                                ICC_INTERNET_CLASSES   = 0800h
                                                ICC_LISTVIEW_CLASSES   = 0001h
                                                ICC_PAGESCROLLER_CLASS = 1000h
                                                ICC_PROGRESS_CLASS     = 0020h
                                                ICC_TAB_CLASSES        = 0008h
                                                ICC_TREEVIEW_CLASSES   = 0002h
                                                ICC_UPDOWN_CLASS       = 0010h
                                                ICC_USEREX_CLASSES     = 0200h
                                                ICC_WIN95_CLASSES      = 00FFh
                                                
                                                ; Shared messages
                                                
                                                CCM_SETCOLORSCHEME   = CCM_FIRST + 2
                                                CCM_GETCOLORSCHEME   = CCM_FIRST + 3
                                                CCM_GETDROPTARGET    = CCM_FIRST + 4
                                                CCM_SETUNICODEFORMAT = CCM_FIRST + 5
                                                CCM_GETUNICODEFORMAT = CCM_FIRST + 6
                                                
                                                ; Property sheet page flags
                                                
                                                PSP_DEFAULT	 = 0000h
                                                PSP_DLGINDIRECT  = 0001h
                                                PSP_USEHICON	 = 0002h
                                                PSP_USEICONID	 = 0004h
                                                PSP_USETITLE	 = 0008h
                                                PSP_HASHELP	 = 0020h
                                                PSP_USEREFPARENT = 0040h
                                                PSP_USECALLBACK  = 0080h
                                                
                                                ; Property sheet page actions
                                                
                                                PSPCB_RELEASE = 1
                                                PSPCB_CREATE  = 2
                                                
                                                ; Property sheet header flags
                                                
                                                PSH_DEFAULT	  = 0000h
                                                PSH_PROPTITLE	  = 0001h
                                                PSH_USEHICON	  = 0002h
                                                PSH_USEICONID	  = 0004h
                                                PSH_PROPSHEETPAGE = 0008h
                                                PSH_MULTILINETABS = 0010h
                                                PSH_WIZARD	  = 0020h
                                                PSH_USEPSTARTPAGE = 0040h
                                                PSH_NOAPPLYNOW	  = 0080h
                                                PSH_USECALLBACK   = 0100h
                                                PSH_HASHELP	  = 0200h
                                                PSH_MODELESS	  = 0400h
                                                
                                                ; Property sheet actions
                                                
                                                PSCB_INITIALIZED  = 1
                                                
                                                ; Property sheet notifications
                                                
                                                PSN_SETACTIVE	= PSN_FIRST - 0
                                                PSN_KILLACTIVE	= PSN_FIRST - 1
                                                PSN_APPLY	= PSN_FIRST - 2
                                                PSN_RESET	= PSN_FIRST - 3
                                                PSN_HELP	= PSN_FIRST - 5
                                                PSN_WIZBACK	= PSN_FIRST - 6
                                                PSN_WIZNEXT	= PSN_FIRST - 7
                                                PSN_WIZFINISH	= PSN_FIRST - 8
                                                PSN_QUERYCANCEL = PSN_FIRST - 9
                                                
                                                ; Property sheet return values
                                                
                                                PSNRET_NOERROR		    = 0
                                                PSNRET_INVALID		    = 1
                                                PSNRET_INVALID_NOCHANGEPAGE = 2
                                                
                                                ; Property sheet messages
                                                
                                                PSM_SETCURSEL	    = WM_USER + 101
                                                PSM_REMOVEPAGE	    = WM_USER + 102
                                                PSM_ADDPAGE	    = WM_USER + 103
                                                PSM_CHANGED	    = WM_USER + 104
                                                PSM_RESTARTWINDOWS  = WM_USER + 105
                                                PSM_REBOOTSYSTEM    = WM_USER + 106
                                                PSM_CANCELTOCLOSE   = WM_USER + 107
                                                PSM_QUERYSIBLINGS   = WM_USER + 108
                                                PSM_UNCHANGED	    = WM_USER + 109
                                                PSM_APPLY	    = WM_USER + 110
                                                PSM_SETTITLE	    = WM_USER + 111
                                                PSM_SETTITLEW	    = WM_USER + 120
                                                PSM_SETWIZBUTTONS   = WM_USER + 112
                                                PSM_PRESSBUTTON     = WM_USER + 113
                                                PSM_SETCURSELID     = WM_USER + 114
                                                PSM_SETFINISHTEXT   = WM_USER + 115
                                                PSM_SETFINISHTEXTW  = WM_USER + 121
                                                PSM_GETTABCONTROL   = WM_USER + 116
                                                PSM_ISDIALOGMESSAGE = WM_USER + 117
                                                
                                                ; Property sheet buttons
                                                
                                                PSBTN_BACK	      = 0
                                                PSBTN_NEXT	      = 1
                                                PSBTN_FINISH	      = 2
                                                PSBTN_OK	      = 3
                                                PSBTN_APPLYNOW	      = 4
                                                PSBTN_CANCEL	      = 5
                                                PSBTN_HELP	      = 6
                                                PSWIZB_BACK	      = 1
                                                PSWIZB_NEXT	      = 2
                                                PSWIZB_FINISH	      = 4
                                                PSWIZB_DISABLEDFINISH = 8
                                                ID_PSRESTARTWINDOWS   = 2
                                                ID_PSREBOOTSYSTEM     = ID_PSRESTARTWINDOWS or 1
                                                
                                                ; Property sheet sizes
                                                
                                                PROP_SM_CXDLG  = 212
                                                PROP_SM_CYDLG  = 188
                                                PROP_MED_CXDLG = 227
                                                PROP_MED_CYDLG = 215
                                                PROP_LG_CXDLG  = 252
                                                PROP_LG_CYDLG  = 218
                                                WIZ_CXDLG      = 276
                                                WIZ_CYDLG      = 140
                                                WIZ_CXBMP      = 80
                                                WIZ_BODYX      = 92
                                                WIZ_BODYCX     = 184
                                                
                                                ; Image list types
                                                
                                                ILC_MASK     = 001h
                                                ILC_COLOR    = 0FEh
                                                ILC_COLORDDB = 0FEh
                                                ILC_COLOR4   = 004h
                                                ILC_COLOR8   = 008h
                                                ILC_COLOR16  = 010h
                                                ILC_COLOR24  = 018h
                                                ILC_COLOR32  = 020h
                                                ILC_PALETTE  = 800h
                                                
                                                ; Image list color values
                                                
                                                CLR_NONE    = 0FFFFFFFFh
                                                CLR_DEFAULT = 0FF000000h
                                                CLR_HILIGHT = CLR_DEFAULT
                                                
                                                ; Image list drawing styles
                                                
                                                ILD_NORMAL	= 0000h
                                                ILD_TRANSPARENT = 0001h
                                                ILD_MASK	= 0010h
                                                ILD_IMAGE	= 0020h
                                                ILD_BLEND25	= 0002h
                                                ILD_BLEND50	= 0004h
                                                ILD_OVERLAYMASK = 0F00h
                                                ILD_SELECTED	= ILD_BLEND50
                                                ILD_FOCUS	= ILD_BLEND25
                                                ILD_BLEND	= ILD_BLEND50
                                                
                                                ; Header control styles
                                                
                                                HDS_HORZ     = 00h
                                                HDS_BUTTONS  = 02h
                                                HDS_HOTTRACK = 04h
                                                HDS_HIDDEN   = 08h
                                                HDS_DRAGDROP = 40h
                                                HDS_FULLDRAG = 80h
                                                
                                                ; Header control structure flags
                                                
                                                HDI_WIDTH  = 01h
                                                HDI_HEIGHT = HDI_WIDTH
                                                HDI_TEXT   = 02h
                                                HDI_FORMAT = 04h
                                                HDI_LPARAM = 08h
                                                HDI_BITMAP = 10h
                                                
                                                ; Header control flags
                                                
                                                HDF_LEFT	= 0000h
                                                HDF_RIGHT	= 0001h
                                                HDF_CENTER	= 0002h
                                                HDF_JUSTIFYMASK = 0003h
                                                HDF_RTLREADING	= 0004h
                                                HDF_BITMAP	= 2000h
                                                HDF_STRING	= 4000h
                                                HDF_OWNERDRAW	= 8000h
                                                
                                                ; Header control messages
                                                
                                                HDM_GETITEMCOUNT = HDM_FIRST + 0
                                                HDM_INSERTITEMA  = HDM_FIRST + 1
                                                HDM_DELETEITEM	 = HDM_FIRST + 2
                                                HDM_GETITEMA	 = HDM_FIRST + 3
                                                HDM_SETITEMA	 = HDM_FIRST + 4
                                                HDM_LAYOUT	 = HDM_FIRST + 5
                                                HDM_HITTEST	 = HDM_FIRST + 6
                                                HDM_INSERTITEMW  = HDM_FIRST + 10
                                                HDM_GETITEMW	 = HDM_FIRST + 11
                                                HDM_SETITEMW	 = HDM_FIRST + 12
                                                HDM_INSERTITEM	 = HDM_INSERTITEMA
                                                HDM_GETITEM	 = HDM_GETITEMA
                                                HDM_SETITEM	 = HDM_SETITEMA
                                                
                                                ; Hit test result flags
                                                
                                                HHT_NOWHERE   = 001h
                                                HHT_ONHEADER  = 002h
                                                HHT_ONDIVIDER = 004h
                                                HHT_ONDIVOPEN = 008h
                                                HHT_ABOVE     = 100h
                                                HHT_BELOW     = 200h
                                                HHT_TORIGHT   = 400h
                                                HHT_TOLEFT    = 800h
                                                
                                                ; Header control notifications
                                                
                                                HDN_ITEMCHANGINGA    = HDN_FIRST - 0
                                                HDN_ITEMCHANGEDA     = HDN_FIRST - 1
                                                HDN_ITEMCLICKA	     = HDN_FIRST - 2
                                                HDN_ITEMDBLCLICKA    = HDN_FIRST - 3
                                                HDN_DIVIDERDBLCLICKA = HDN_FIRST - 5
                                                HDN_BEGINTRACKA      = HDN_FIRST - 6
                                                HDN_ENDTRACKA	     = HDN_FIRST - 7
                                                HDN_TRACKA	     = HDN_FIRST - 8
                                                HDN_ITEMCHANGINGW    = HDN_FIRST - 20
                                                HDN_ITEMCHANGEDW     = HDN_FIRST - 21
                                                HDN_ITEMCLICKW	     = HDN_FIRST - 22
                                                HDN_ITEMDBLCLICKW    = HDN_FIRST - 23
                                                HDN_DIVIDERDBLCLICKW = HDN_FIRST - 25
                                                HDN_BEGINTRACKW      = HDN_FIRST - 26
                                                HDN_ENDTRACKW	     = HDN_FIRST - 27
                                                HDN_TRACKW	     = HDN_FIRST - 28
                                                HDN_ITEMCHANGING     = HDN_ITEMCHANGINGA
                                                HDN_ITEMCHANGED      = HDN_ITEMCHANGEDA
                                                HDN_ITEMCLICK	     = HDN_ITEMCLICKA
                                                HDN_ITEMDBLCLICK     = HDN_ITEMDBLCLICKA
                                                HDN_DIVIDERDBLCLICK  = HDN_DIVIDERDBLCLICKA
                                                HDN_BEGINTRACK	     = HDN_BEGINTRACKA
                                                HDN_ENDTRACK	     = HDN_ENDTRACKA
                                                HDN_TRACK	     = HDN_TRACKA
                                                
                                                ; Toolbar bitmap flags
                                                
                                                CMB_MASKED = 2
                                                
                                                ; Toolbar button states
                                                
                                                TBSTATE_CHECKED       = 01h
                                                TBSTATE_PRESSED       = 02h
                                                TBSTATE_ENABLED       = 04h
                                                TBSTATE_HIDDEN	      = 08h
                                                TBSTATE_INDETERMINATE = 10h
                                                TBSTATE_WRAP	      = 20h
                                                TBSTATE_ELLIPSES      = 40h
                                                
                                                ; Toolbar button styles
                                                
                                                TBSTYLE_BUTTON	    = 0000h
                                                TBSTYLE_SEP	    = 0001h
                                                TBSTYLE_CHECK	    = 0002h
                                                TBSTYLE_GROUP	    = 0004h
                                                TBSTYLE_CHECKGROUP  = TBSTYLE_GROUP or TBSTYLE_CHECK
                                                TBSTYLE_DROPDOWN    = 0008h
                                                TBSTYLE_TOOLTIPS    = 0100h
                                                TBSTYLE_WRAPABLE    = 0200h
                                                TBSTYLE_ALTDRAG     = 0400h
                                                TBSTYLE_FLAT	    = 0800h
                                                TBSTYLE_LIST	    = 1000h
                                                TBSTYLE_CUSTOMERASE = 2000h
                                                TBSTYLE_TRANSPARENT = 8000h
                                                
                                                ; Toolbar button extended styles
                                                
                                                TBSTYLE_EX_DRAWDDARROWS = 0001h
                                                
                                                ; Toolbar messages
                                                
                                                TB_ENABLEBUTTON 	 = WM_USER + 1
                                                TB_CHECKBUTTON		 = WM_USER + 2
                                                TB_PRESSBUTTON		 = WM_USER + 3
                                                TB_HIDEBUTTON		 = WM_USER + 4
                                                TB_INDETERMINATE	 = WM_USER + 5
                                                TB_ISBUTTONENABLED	 = WM_USER + 9
                                                TB_ISBUTTONCHECKED	 = WM_USER + 10
                                                TB_ISBUTTONPRESSED	 = WM_USER + 11
                                                TB_ISBUTTONHIDDEN	 = WM_USER + 12
                                                TB_ISBUTTONINDETERMINATE = WM_USER + 13
                                                TB_SETSTATE		 = WM_USER + 17
                                                TB_GETSTATE		 = WM_USER + 18
                                                TB_ADDBITMAP		 = WM_USER + 19
                                                TB_ADDBUTTONS		 = WM_USER + 20
                                                TB_INSERTBUTTON 	 = WM_USER + 21
                                                TB_DELETEBUTTON 	 = WM_USER + 22
                                                TB_GETBUTTON		 = WM_USER + 23
                                                TB_BUTTONCOUNT		 = WM_USER + 24
                                                TB_COMMANDTOINDEX	 = WM_USER + 25
                                                TB_SAVERESTOREA 	 = WM_USER + 26
                                                TB_ADDSTRINGA		 = WM_USER + 28
                                                TB_CUSTOMIZE		 = WM_USER + 27
                                                TB_GETITEMRECT		 = WM_USER + 29
                                                TB_BUTTONSTRUCTSIZE	 = WM_USER + 30
                                                TB_SETBUTTONSIZE	 = WM_USER + 31
                                                TB_SETBITMAPSIZE	 = WM_USER + 32
                                                TB_AUTOSIZE		 = WM_USER + 33
                                                TB_GETTOOLTIPS		 = WM_USER + 35
                                                TB_SETTOOLTIPS		 = WM_USER + 36
                                                TB_SETPARENT		 = WM_USER + 37
                                                TB_SETROWS		 = WM_USER + 39
                                                TB_GETROWS		 = WM_USER + 40
                                                TB_GETBITMAPFLAGS	 = WM_USER + 41
                                                TB_SETCMDID		 = WM_USER + 42
                                                TB_CHANGEBITMAP 	 = WM_USER + 43
                                                TB_GETBITMAP		 = WM_USER + 44
                                                TB_GETBUTTONTEXTA	 = WM_USER + 45
                                                TB_REPLACEBITMAP	 = WM_USER + 46
                                                TB_SETINDENT		 = WM_USER + 47
                                                TB_SETIMAGELIST 	 = WM_USER + 48
                                                TB_GETIMAGELIST 	 = WM_USER + 49
                                                TB_LOADIMAGES		 = WM_USER + 50
                                                TB_GETRECT		 = WM_USER + 51
                                                TB_SETHOTIMAGELIST	 = WM_USER + 52
                                                TB_GETHOTIMAGELIST	 = WM_USER + 53
                                                TB_SETDISABLEDIMAGELIST  = WM_USER + 54
                                                TB_GETDISABLEDIMAGELIST  = WM_USER + 55
                                                TB_SETSTYLE		 = WM_USER + 56
                                                TB_GETSTYLE		 = WM_USER + 57
                                                TB_GETBUTTONSIZE	 = WM_USER + 58
                                                TB_SETBUTTONWIDTH	 = WM_USER + 59
                                                TB_SETMAXTEXTROWS	 = WM_USER + 60
                                                TB_GETTEXTROWS		 = WM_USER + 61
                                                TB_GETBUTTONTEXTW	 = WM_USER + 75
                                                TB_SAVERESTOREW 	 = WM_USER + 76
                                                TB_ADDSTRINGW		 = WM_USER + 77
                                                TB_SETEXTENDEDSTYLE	 = WM_USER + 84
                                                TB_GETEXTENDEDSTYLE	 = WM_USER + 85
                                                TB_GETBUTTONTEXT	 = TB_GETBUTTONTEXTA
                                                TB_SAVERESTORE		 = TB_SAVERESTOREA
                                                TB_ADDSTRING		 = TB_ADDSTRINGA
                                                
                                                ; System-defined button bitmaps
                                                
                                                HINST_COMMCTRL	     = -1
                                                IDB_STD_SMALL_COLOR  = 0
                                                IDB_STD_LARGE_COLOR  = 1
                                                IDB_VIEW_SMALL_COLOR = 4
                                                IDB_VIEW_LARGE_COLOR = 5
                                                IDB_HIST_SMALL_COLOR = 8
                                                IDB_HIST_LARGE_COLOR = 9
                                                
                                                ; Icon indexes for standard bitmap
                                                
                                                STD_CUT        = 0
                                                STD_COPY       = 1
                                                STD_PASTE      = 2
                                                STD_UNDO       = 3
                                                STD_REDOW      = 4
                                                STD_DELETE     = 5
                                                STD_FILENEW    = 6
                                                STD_FILEOPEN   = 7
                                                STD_FILESAVE   = 8
                                                STD_PRINTPRE   = 9
                                                STD_PROPERTIES = 10
                                                STD_HELP       = 11
                                                STD_FIND       = 12
                                                STD_REPLACE    = 13
                                                STD_PRINT      = 14
                                                
                                                ; Icon indexes for standard view bitmap
                                                
                                                VIEW_LARGEICONS    = 0
                                                VIEW_SMALLICONS    = 1
                                                VIEW_LIST	   = 2
                                                VIEW_DETAILS	   = 3
                                                VIEW_SORTNAME	   = 4
                                                VIEW_SORTSIZE	   = 5
                                                VIEW_SORTDATE	   = 6
                                                VIEW_SORTTYPE	   = 7
                                                VIEW_PARENTFOLDER  = 8
                                                VIEW_NETCONNECT    = 9
                                                VIEW_NETDISCONNECT = 10
                                                VIEW_NEWFOLDER	   = 11
                                                
                                                ; Icon indexes for history bitmap
                                                
                                                HIST_BACK	    = 0
                                                HIST_FORWARD	    = 1
                                                HIST_FAVORITES	    = 2
                                                HIST_ADDTOFAVORITES = 3
                                                HIST_VIEWTREE	    = 4
                                                
                                                ; Toolbar bitmap flags
                                                
                                                TBBF_LARGE = 1
                                                
                                                ; Toolbar notifications
                                                
                                                TBN_GETBUTTONINFOA = TBN_FIRST - 0
                                                TBN_BEGINDRAG	   = TBN_FIRST - 1
                                                TBN_ENDDRAG	   = TBN_FIRST - 2
                                                TBN_BEGINADJUST    = TBN_FIRST - 3
                                                TBN_ENDADJUST	   = TBN_FIRST - 4
                                                TBN_RESET	   = TBN_FIRST - 5
                                                TBN_QUERYINSERT    = TBN_FIRST - 6
                                                TBN_QUERYDELETE    = TBN_FIRST - 7
                                                TBN_TOOLBARCHANGE  = TBN_FIRST - 8
                                                TBN_CUSTHELP	   = TBN_FIRST - 9
                                                TBN_DROPDOWN	   = TBN_FIRST - 10
                                                TBN_CLOSEUP	   = TBN_FIRST - 11
                                                TBN_GETBUTTONINFOW = TBN_FIRST - 20
                                                TBN_GETBUTTONINFO  = TBN_GETBUTTONINFOA
                                                
                                                ; ReBar styles
                                                
                                                RBS_TOOLTIPS	    = 100h
                                                RBS_VARHEIGHT	    = 200h
                                                RBS_BANDBORDERS     = 400h
                                                RBS_FIXEDORDER	    = 800h
                                                RBS_REGISTERDROP    = 1000h
                                                RBS_AUTOSIZE	    = 2000h
                                                RBS_VERTICALGRIPPER = 4000h
                                                RBS_DBLCLKTOGGLE    = 8000h
                                                
                                                ; ReBar band info structure flags
                                                
                                                RBBIM_STYLE	 = 001h
                                                RBBIM_COLORS	 = 002h
                                                RBBIM_TEXT	 = 004h
                                                RBBIM_IMAGE	 = 008h
                                                RBBIM_CHILD	 = 010h
                                                RBBIM_CHILDSIZE  = 020h
                                                RBBIM_SIZE	 = 040h
                                                RBBIM_BACKGROUND = 080h
                                                RBBIM_ID	 = 100h
                                                RBBIM_IDEALSIZE  = 200h
                                                RBBIM_LPARAM	 = 400h
                                                RBBIM_HEADERSIZE = 800h
                                                
                                                ; ReBar band styles
                                                
                                                RBBS_BREAK	    = 001h
                                                RBBS_FIXEDSIZE	    = 002h
                                                RBBS_CHILDEDGE	    = 004h
                                                RBBS_HIDDEN	    = 008h
                                                RBBS_NOVERT	    = 010h
                                                RBBS_FIXEDBMP	    = 020h
                                                RBBS_VARIABLEHEIGHT = 040h
                                                RBBS_GRIPPERALWAYS  = 080h
                                                RBBS_NOGRIPPER	    = 100h
                                                
                                                ; ReBar messages
                                                
                                                RB_INSERTBANDA	    = WM_USER + 1
                                                RB_DELETEBAND	    = WM_USER + 2
                                                RB_GETBARINFO	    = WM_USER + 3
                                                RB_SETBARINFO	    = WM_USER + 4
                                                RB_GETBANDINFO	    = WM_USER + 5
                                                RB_SETBANDINFOA     = WM_USER + 6
                                                RB_SETPARENT	    = WM_USER + 7
                                                RB_INSERTBANDW	    = WM_USER + 10
                                                RB_SETBANDINFOW     = WM_USER + 11
                                                RB_GETBANDCOUNT     = WM_USER + 12
                                                RB_GETROWCOUNT	    = WM_USER + 13
                                                RB_GETROWHEIGHT     = WM_USER + 14
                                                RB_IDTOINDEX	    = WM_USER + 16
                                                RB_GETTOOLTIPS	    = WM_USER + 17
                                                RB_SETTOOLTIPS	    = WM_USER + 18
                                                RB_SETBKCOLOR	    = WM_USER + 19
                                                RB_GETBKCOLOR	    = WM_USER + 20
                                                RB_SETTEXTCOLOR     = WM_USER + 21
                                                RB_GETTEXTCOLOR     = WM_USER + 22
                                                RB_SIZETORECT	    = WM_USER + 23
                                                RB_BEGINDRAG	    = WM_USER + 24
                                                RB_ENDDRAG	    = WM_USER + 25
                                                RB_DRAGMOVE	    = WM_USER + 26
                                                RB_GETBARHEIGHT     = WM_USER + 27
                                                RB_GETBANDINFOW     = WM_USER + 28
                                                RB_GETBANDINFOA     = WM_USER + 29
                                                RB_MINIMIZEBAND     = WM_USER + 30
                                                RB_MAXIMIZEBAND     = WM_USER + 31
                                                RB_GETDROPTARGET    = CCM_GETDROPTARGET
                                                RB_GETBANDBORDERS   = WM_USER + 34
                                                RB_SHOWBAND	    = WM_USER + 35
                                                RB_SETPALETTE	    = WM_USER + 37
                                                RB_GETPALETTE	    = WM_USER + 38
                                                RB_MOVEBAND	    = WM_USER + 39
                                                RB_SETUNICODEFORMAT = CCM_SETUNICODEFORMAT
                                                RB_GETUNICODEFORMAT = CCM_GETUNICODEFORMAT
                                                RB_INSERTBAND	    = RB_INSERTBANDA
                                                RB_SETBANDINFO	    = RB_SETBANDINFOA
                                                
                                                ; ReBar notifications
                                                
                                                RBN_HEIGHTCHANGE  = RBN_FIRST - 0
                                                RBN_GETOBJECT	  = RBN_FIRST - 1
                                                RBN_LAYOUTCHANGED = RBN_FIRST - 2
                                                RBN_AUTOSIZE	  = RBN_FIRST - 3
                                                RBN_BEGINDRAG	  = RBN_FIRST - 4
                                                RBN_ENDDRAG	  = RBN_FIRST - 5
                                                RBN_DELETINGBAND  = RBN_FIRST - 6
                                                RBN_DELETEDBAND   = RBN_FIRST - 7
                                                RBN_CHILDSIZE	  = RBN_FIRST - 8
                                                
                                                ; Tooltip styles
                                                
                                                TTS_ALWAYSTIP = 1
                                                TTS_NOPREFIX  = 2
                                                
                                                ; Tooltip flags
                                                
                                                TTF_IDISHWND   = 01h
                                                TTF_CENTERTIP  = 02h
                                                TTF_RTLREADING = 04h
                                                TTF_SUBCLASS   = 10h
                                                
                                                ; Tooltip durations
                                                
                                                TTDT_AUTOMATIC = 0
                                                TTDT_RESHOW    = 1
                                                TTDT_AUTOPOP   = 2
                                                TTDT_INITIAL   = 3
                                                
                                                ; Tooltip messages
                                                
                                                TTM_ACTIVATE	    = WM_USER + 1
                                                TTM_SETDELAYTIME    = WM_USER + 3
                                                TTM_ADDTOOLA	    = WM_USER + 4
                                                TTM_DELTOOLA	    = WM_USER + 5
                                                TTM_NEWTOOLRECTA    = WM_USER + 6
                                                TTM_RELAYEVENT	    = WM_USER + 7
                                                TTM_GETTOOLINFOA    = WM_USER + 8
                                                TTM_SETTOOLINFOA    = WM_USER + 9
                                                TTM_HITTESTA	    = WM_USER + 10
                                                TTM_GETTEXTA	    = WM_USER + 11
                                                TTM_UPDATETIPTEXTA  = WM_USER + 12
                                                TTM_GETTOOLCOUNT    = WM_USER + 13
                                                TTM_ENUMTOOLSA	    = WM_USER + 14
                                                TTM_GETCURRENTTOOLA = WM_USER + 15
                                                TTM_WINDOWFROMPOINT = WM_USER + 16
                                                TTM_ADDTOOLW	    = WM_USER + 50
                                                TTM_DELTOOLW	    = WM_USER + 51
                                                TTM_NEWTOOLRECTW    = WM_USER + 52
                                                TTM_GETTOOLINFOW    = WM_USER + 53
                                                TTM_SETTOOLINFOW    = WM_USER + 54
                                                TTM_HITTESTW	    = WM_USER + 55
                                                TTM_GETTEXTW	    = WM_USER + 56
                                                TTM_UPDATETIPTEXTW  = WM_USER + 57
                                                TTM_ENUMTOOLSW	    = WM_USER + 58
                                                TTM_GETCURRENTTOOLW = WM_USER + 59
                                                TTM_ADDTOOL	    = TTM_ADDTOOLA
                                                TTM_DELTOOL	    = TTM_DELTOOLA
                                                TTM_NEWTOOLRECT     = TTM_NEWTOOLRECTA
                                                TTM_GETTOOLINFO     = TTM_GETTOOLINFOA
                                                TTM_SETTOOLINFO     = TTM_SETTOOLINFOA
                                                TTM_HITTEST	    = TTM_HITTESTA
                                                TTM_GETTEXT	    = TTM_GETTEXTA
                                                TTM_UPDATETIPTEXT   = TTM_UPDATETIPTEXTA
                                                TTM_ENUMTOOLS	    = TTM_ENUMTOOLSA
                                                TTM_GETCURRENTTOOL  = TTM_GETCURRENTTOOLA
                                                
                                                ; Tooltip notifications
                                                
                                                TTN_NEEDTEXTA = TTN_FIRST - 0
                                                TTN_SHOW      = TTN_FIRST - 1
                                                TTN_POP       = TTN_FIRST - 2
                                                TTN_NEEDTEXTW = TTN_FIRST - 10
                                                TTN_NEEDTEXT  = TTN_NEEDTEXTA
                                                
                                                ; Status bar styles
                                                
                                                SBARS_SIZEGRIP = 100h
                                                
                                                ; Status bar messages
                                                
                                                SB_SETTEXTA	  = WM_USER + 1
                                                SB_GETTEXTA	  = WM_USER + 2
                                                SB_GETTEXTLENGTHA = WM_USER + 3
                                                SB_SETPARTS	  = WM_USER + 4
                                                SB_GETPARTS	  = WM_USER + 6
                                                SB_GETBORDERS	  = WM_USER + 7
                                                SB_SETMINHEIGHT   = WM_USER + 8
                                                SB_SIMPLE	  = WM_USER + 9
                                                SB_GETRECT	  = WM_USER + 10
                                                SB_SETTEXTW	  = WM_USER + 11
                                                SB_GETTEXTW	  = WM_USER + 13
                                                SB_GETTEXTLENGTHW = WM_USER + 12
                                                SB_SETTEXT	  = SB_SETTEXTA
                                                SB_GETTEXT	  = SB_GETTEXTA
                                                SB_GETTEXTLENGTH  = SB_GETTEXTLENGTHA
                                                
                                                ; Status bar drawing types
                                                
                                                SBT_OWNERDRAW  = 1000h
                                                SBT_NOBORDERS  = 0100h
                                                SBT_POPOUT     = 0200h
                                                SBT_RTLREADING = 0400h
                                                
                                                ; Trackbar styles
                                                
                                                TBS_AUTOTICKS	   = 01h
                                                TBS_VERT	   = 02h
                                                TBS_HORZ	   = 00h
                                                TBS_TOP 	   = 04h
                                                TBS_BOTTOM	   = 00h
                                                TBS_LEFT	   = 04h
                                                TBS_RIGHT	   = 00h
                                                TBS_BOTH	   = 08h
                                                TBS_NOTICKS	   = 10h
                                                TBS_ENABLESELRANGE = 20h
                                                TBS_FIXEDLENGTH    = 40h
                                                TBS_NOTHUMB	   = 80h
                                                
                                                ; Trackbar messages
                                                
                                                TBM_GETPOS	   = WM_USER + 0
                                                TBM_GETRANGEMIN    = WM_USER + 1
                                                TBM_GETRANGEMAX    = WM_USER + 2
                                                TBM_GETTIC	   = WM_USER + 3
                                                TBM_SETTIC	   = WM_USER + 4
                                                TBM_SETPOS	   = WM_USER + 5
                                                TBM_SETRANGE	   = WM_USER + 6
                                                TBM_SETRANGEMIN    = WM_USER + 7
                                                TBM_SETRANGEMAX    = WM_USER + 8
                                                TBM_CLEARTICS	   = WM_USER + 9
                                                TBM_SETSEL	   = WM_USER + 10
                                                TBM_SETSELSTART    = WM_USER + 11
                                                TBM_SETSELEND	   = WM_USER + 12
                                                TBM_GETPTICS	   = WM_USER + 14
                                                TBM_GETTICPOS	   = WM_USER + 15
                                                TBM_GETNUMTICS	   = WM_USER + 16
                                                TBM_GETSELSTART    = WM_USER + 17
                                                TBM_GETSELEND	   = WM_USER + 18
                                                TBM_CLEARSEL	   = WM_USER + 19
                                                TBM_SETTICFREQ	   = WM_USER + 20
                                                TBM_SETPAGESIZE    = WM_USER + 21
                                                TBM_GETPAGESIZE    = WM_USER + 22
                                                TBM_SETLINESIZE    = WM_USER + 23
                                                TBM_GETLINESIZE    = WM_USER + 24
                                                TBM_GETTHUMBRECT   = WM_USER + 25
                                                TBM_GETCHANNELRECT = WM_USER + 26
                                                TBM_SETTHUMBLENGTH = WM_USER + 27
                                                TBM_GETTHUMBLENGTH = WM_USER + 28
                                                
                                                ; Trackbar notifications
                                                
                                                TB_LINEUP	 = 0
                                                TB_LINEDOWN	 = 1
                                                TB_PAGEUP	 = 2
                                                TB_PAGEDOWN	 = 3
                                                TB_THUMBPOSITION = 4
                                                TB_THUMBTRACK	 = 5
                                                TB_TOP		 = 6
                                                TB_BOTTOM	 = 7
                                                TB_ENDTRACK	 = 8
                                                
                                                ; Up-down control styles
                                                
                                                UDS_WRAP	= 01h
                                                UDS_SETBUDDYINT = 02h
                                                UDS_ALIGNRIGHT	= 04h
                                                UDS_ALIGNLEFT	= 08h
                                                UDS_AUTOBUDDY	= 10h
                                                UDS_ARROWKEYS	= 20h
                                                UDS_HORZ	= 40h
                                                UDS_NOTHOUSANDS = 80h
                                                
                                                ; Up-down control messages
                                                
                                                UDM_SETRANGE = WM_USER + 101
                                                UDM_GETRANGE = WM_USER + 102
                                                UDM_SETPOS   = WM_USER + 103
                                                UDM_GETPOS   = WM_USER + 104
                                                UDM_SETBUDDY = WM_USER + 105
                                                UDM_GETBUDDY = WM_USER + 106
                                                UDM_SETACCEL = WM_USER + 107
                                                UDM_GETACCEL = WM_USER + 108
                                                UDM_SETBASE  = WM_USER + 109
                                                UDM_GETBASE  = WM_USER + 110
                                                
                                                ; Up-down control notifications
                                                
                                                UDN_DELTAPOS = UDN_FIRST - 1
                                                
                                                ; Progress bar messages
                                                
                                                PBM_SETRANGE   = WM_USER + 1
                                                PBM_SETPOS     = WM_USER + 2
                                                PBM_DELTAPOS   = WM_USER + 3
                                                PBM_SETSTEP    = WM_USER + 4
                                                PBM_STEPIT     = WM_USER + 5
                                                PBM_SETRANGE32 = WM_USER + 6
                                                PBM_GETRANGE   = WM_USER + 7
                                                PBM_GETPOS     = WM_USER + 8
                                                
                                                ; Hot-key control messages
                                                
                                                HKM_SETHOTKEY = WM_USER + 1
                                                HKM_GETHOTKEY = WM_USER + 2
                                                HKM_SETRULES  = WM_USER + 3
                                                
                                                ; Hot key flags
                                                
                                                HOTKEYF_SHIFT	= 1
                                                HOTKEYF_CONTROL = 2
                                                HOTKEYF_ALT	= 4
                                                HOTKEYF_EXT	= 8
                                                
                                                ; Key combination flags
                                                
                                                HKCOMB_NONE = 01h
                                                HKCOMB_S    = 02h
                                                HKCOMB_C    = 04h
                                                HKCOMB_A    = 08h
                                                HKCOMB_SC   = 10h
                                                HKCOMB_SA   = 20h
                                                HKCOMB_CA   = 40h
                                                HKCOMB_SCA  = 80h
                                                
                                                ; List view styles
                                                
                                                LVS_ICON	    = 0000h
                                                LVS_REPORT	    = 0001h
                                                LVS_SMALLICON	    = 0002h
                                                LVS_LIST	    = 0003h
                                                LVS_TYPEMASK	    = 0003h
                                                LVS_SINGLESEL	    = 0004h
                                                LVS_SHOWSELALWAYS   = 0008h
                                                LVS_SORTASCENDING   = 0010h
                                                LVS_SORTDESCENDING  = 0020h
                                                LVS_SHAREIMAGELISTS = 0040h
                                                LVS_NOLABELWRAP     = 0080h
                                                LVS_AUTOARRANGE     = 0100h
                                                LVS_EDITLABELS	    = 0200h
                                                LVS_OWNERDATA	    = 1000h
                                                LVS_NOSCROLL	    = 2000h
                                                LVS_ALIGNTOP	    = 0000h
                                                LVS_ALIGNLEFT	    = 0800h
                                                LVS_OWNERDRAWFIXED  = 0400h
                                                LVS_NOCOLUMNHEADER  = 4000h
                                                LVS_NOSORTHEADER    = 8000h
                                                
                                                ; List view extended styles
                                                
                                                LVS_EX_GRIDLINES	= 0001h
                                                LVS_EX_SUBITEMIMAGES	= 0002h
                                                LVS_EX_CHECKBOXES	= 0004h
                                                LVS_EX_TRACKSELECT	= 0008h
                                                LVS_EX_HEADERDRAGDROP	= 0010h
                                                LVS_EX_FULLROWSELECT	= 0020h
                                                LVS_EX_ONECLICKACTIVATE = 0040h
                                                LVS_EX_TWOCLICKACTIVATE = 0080h
                                                LVS_EX_FLATSB		= 0100h
                                                LVS_EX_REGIONAL 	= 0200h
                                                LVS_EX_INFOTIP		= 0400h
                                                LVS_EX_UNDERLINEHOT	= 0800h
                                                LVS_EX_UNDERLINECOLD	= 1000h
                                                LVS_EX_MULTIWORKAREAS	= 2000h
                                                LVS_EX_LABELTIP 	= 4000h
                                                
                                                ; List view messages
                                                
                                                LVM_GETBKCOLOR		     = LVM_FIRST + 0
                                                LVM_SETBKCOLOR		     = LVM_FIRST + 1
                                                LVM_GETIMAGELIST	     = LVM_FIRST + 2
                                                LVM_SETIMAGELIST	     = LVM_FIRST + 3
                                                LVM_GETITEMCOUNT	     = LVM_FIRST + 4
                                                LVM_GETITEMA		     = LVM_FIRST + 5
                                                LVM_SETITEMA		     = LVM_FIRST + 6
                                                LVM_INSERTITEMA 	     = LVM_FIRST + 7
                                                LVM_DELETEITEM		     = LVM_FIRST + 8
                                                LVM_DELETEALLITEMS	     = LVM_FIRST + 9
                                                LVM_GETCALLBACKMASK	     = LVM_FIRST + 10
                                                LVM_SETCALLBACKMASK	     = LVM_FIRST + 11
                                                LVM_GETNEXTITEM 	     = LVM_FIRST + 12
                                                LVM_FINDITEMA		     = LVM_FIRST + 13
                                                LVM_GETITEMRECT 	     = LVM_FIRST + 14
                                                LVM_SETITEMPOSITION	     = LVM_FIRST + 15
                                                LVM_GETITEMPOSITION	     = LVM_FIRST + 16
                                                LVM_GETSTRINGWIDTHA	     = LVM_FIRST + 17
                                                LVM_HITTEST		     = LVM_FIRST + 18
                                                LVM_ENSUREVISIBLE	     = LVM_FIRST + 19
                                                LVM_SCROLL		     = LVM_FIRST + 20
                                                LVM_REDRAWITEMS 	     = LVM_FIRST + 21
                                                LVM_ARRANGE		     = LVM_FIRST + 22
                                                LVM_EDITLABELA		     = LVM_FIRST + 23
                                                LVM_GETEDITCONTROL	     = LVM_FIRST + 24
                                                LVM_GETCOLUMNA		     = LVM_FIRST + 25
                                                LVM_SETCOLUMNA		     = LVM_FIRST + 26
                                                LVM_INSERTCOLUMNA	     = LVM_FIRST + 27
                                                LVM_DELETECOLUMN	     = LVM_FIRST + 28
                                                LVM_GETCOLUMNWIDTH	     = LVM_FIRST + 29
                                                LVM_SETCOLUMNWIDTH	     = LVM_FIRST + 30
                                                LVM_CREATEDRAGIMAGE	     = LVM_FIRST + 33
                                                LVM_GETVIEWRECT 	     = LVM_FIRST + 34
                                                LVM_GETTEXTCOLOR	     = LVM_FIRST + 35
                                                LVM_SETTEXTCOLOR	     = LVM_FIRST + 36
                                                LVM_GETTEXTBKCOLOR	     = LVM_FIRST + 37
                                                LVM_SETTEXTBKCOLOR	     = LVM_FIRST + 38
                                                LVM_GETTOPINDEX 	     = LVM_FIRST + 39
                                                LVM_GETCOUNTPERPAGE	     = LVM_FIRST + 40
                                                LVM_GETORIGIN		     = LVM_FIRST + 41
                                                LVM_UPDATE		     = LVM_FIRST + 42
                                                LVM_SETITEMSTATE	     = LVM_FIRST + 43
                                                LVM_GETITEMSTATE	     = LVM_FIRST + 44
                                                LVM_GETITEMTEXTA	     = LVM_FIRST + 45
                                                LVM_SETITEMTEXTA	     = LVM_FIRST + 46
                                                LVM_SETITEMCOUNT	     = LVM_FIRST + 47
                                                LVM_SORTITEMS		     = LVM_FIRST + 48
                                                LVM_SETITEMPOSITION32	     = LVM_FIRST + 49
                                                LVM_GETSELECTEDCOUNT	     = LVM_FIRST + 50
                                                LVM_GETITEMSPACING	     = LVM_FIRST + 51
                                                LVM_GETISEARCHSTRINGA	     = LVM_FIRST + 52
                                                LVM_SETICONSPACING	     = LVM_FIRST + 53
                                                LVM_SETEXTENDEDLISTVIEWSTYLE = LVM_FIRST + 54
                                                LVM_GETEXTENDEDLISTVIEWSTYLE = LVM_FIRST + 55
                                                LVM_GETSUBITEMRECT	     = LVM_FIRST + 56
                                                LVM_SUBITEMHITTEST	     = LVM_FIRST + 57
                                                LVM_SETCOLUMNORDERARRAY      = LVM_FIRST + 58
                                                LVM_GETCOLUMNORDERARRAY      = LVM_FIRST + 59
                                                LVM_SETHOTITEM		     = LVM_FIRST + 60
                                                LVM_GETHOTITEM		     = LVM_FIRST + 61
                                                LVM_SETHOTCURSOR	     = LVM_FIRST + 62
                                                LVM_GETHOTCURSOR	     = LVM_FIRST + 63
                                                LVM_APPROXIMATEVIEWRECT      = LVM_FIRST + 64
                                                LVM_SETWORKAREA 	     = LVM_FIRST + 65
                                                LVM_GETITEMW		     = LVM_FIRST + 75
                                                LVM_SETITEMW		     = LVM_FIRST + 76
                                                LVM_INSERTITEMW 	     = LVM_FIRST + 77
                                                LVM_FINDITEMW		     = LVM_FIRST + 83
                                                LVM_GETSTRINGWIDTHW	     = LVM_FIRST + 87
                                                LVM_GETCOLUMNW		     = LVM_FIRST + 95
                                                LVM_SETCOLUMNW		     = LVM_FIRST + 96
                                                LVM_INSERTCOLUMNW	     = LVM_FIRST + 97
                                                LVM_GETITEMTEXTW	     = LVM_FIRST + 115
                                                LVM_SETITEMTEXTW	     = LVM_FIRST + 116
                                                LVM_GETISEARCHSTRINGW	     = LVM_FIRST + 117
                                                LVM_EDITLABELW		     = LVM_FIRST + 118
                                                LVM_GETITEM		     = LVM_GETITEMA
                                                LVM_SETITEM		     = LVM_SETITEMA
                                                LVM_INSERTITEM		     = LVM_INSERTITEMA
                                                LVM_FINDITEM		     = LVM_FINDITEMA
                                                LVM_GETSTRINGWIDTH	     = LVM_GETSTRINGWIDTHA
                                                LVM_GETCOLUMN		     = LVM_GETCOLUMNA
                                                LVM_SETCOLUMN		     = LVM_SETCOLUMNA
                                                LVM_INSERTCOLUMN	     = LVM_INSERTCOLUMNA
                                                LVM_GETITEMTEXT 	     = LVM_GETITEMTEXTA
                                                LVM_SETITEMTEXT 	     = LVM_SETITEMTEXTA
                                                LVM_GETISEARCHSTRING	     = LVM_GETISEARCHSTRINGA
                                                LVM_EDITLABEL		     = LVM_EDITLABELA
                                                
                                                ; List view image list types
                                                
                                                LVSIL_NORMAL = 0
                                                LVSIL_SMALL  = 1
                                                LVSIL_STATE  = 2
                                                
                                                ; LVM_SETITEMCOUNT flags
                                                
                                                LVSICF_NOINVALIDATEALL = 1
                                                LVSICF_NOSCROLL        = 2
                                                
                                                ; List view item structure flags
                                                
                                                LVIF_TEXT	 = 0001h
                                                LVIF_IMAGE	 = 0002h
                                                LVIF_PARAM	 = 0004h
                                                LVIF_STATE	 = 0008h
                                                LVIF_INDENT	 = 0010h
                                                LVIF_NORECOMPUTE = 0800h
                                                LVIF_DI_SETITEM  = 1000h
                                                
                                                ; List view item states
                                                
                                                LVIS_FOCUSED	    = 00001h
                                                LVIS_SELECTED	    = 00002h
                                                LVIS_CUT	    = 00004h
                                                LVIS_DROPHILITED    = 00008h
                                                LVIS_ACTIVATING  = 0020h
                                                LVIS_OVERLAYMASK    = 00F00h
                                                LVIS_STATEIMAGEMASK = 0F000h
                                                
                                                ; List view callback item values
                                                
                                                LPSTR_TEXTCALLBACK = -1
                                                I_IMAGECALLBACK    = -1
                                                I_CHILDRENCALLBACK = -1
                                                
                                                ; List view next item relations
                                                
                                                LVNI_ALL	 = 000h
                                                LVNI_FOCUSED	 = 001h
                                                LVNI_SELECTED	 = 002h
                                                LVNI_CUT	 = 004h
                                                LVNI_DROPHILITED = 008h
                                                LVNI_ABOVE	 = 100h
                                                LVNI_BELOW	 = 200h
                                                LVNI_TOLEFT	 = 400h
                                                LVNI_TORIGHT	 = 800h
                                                
                                                ; List view search types
                                                
                                                LVFI_PARAM     = 01h
                                                LVFI_STRING    = 02h
                                                LVFI_PARTIAL   = 08h
                                                LVFI_WRAP      = 20h
                                                LVFI_NEARESTXY = 40h
                                                
                                                ; List view item rectangle types
                                                
                                                LVIR_BOUNDS	  = 0
                                                LVIR_ICON	  = 1
                                                LVIR_LABEL	  = 2
                                                LVIR_SELECTBOUNDS = 3
                                                
                                                ; List view hit test flags
                                                
                                                LVHT_NOWHERE	    = 01h
                                                LVHT_ONITEMICON     = 02h
                                                LVHT_ONITEMLABEL    = 04h
                                                LVHT_ONITEMSTATEICON= 08h
                                                LVHT_ONITEM	    = LVHT_ONITEMICON or LVHT_ONITEMLABEL or LVHT_ONITEMSTATEICON
                                                LVHT_ABOVE	    = 08h
                                                LVHT_BELOW	    = 10h
                                                LVHT_TORIGHT	    = 20h
                                                LVHT_TOLEFT	    = 40h
                                                
                                                ; List view alignment values
                                                
                                                LVA_DEFAULT	   = 000h
                                                LVA_ALIGNLEFT	   = 001h
                                                LVA_ALIGNTOP	   = 002h
                                                LVA_ALIGNRIGHT	   = 003h
                                                LVA_ALIGNBOTTOM    = 004h
                                                LVA_SNAPTOGRID	   = 005h
                                                LVA_SORTASCENDING  = 100h
                                                LVA_SORTDESCENDING = 200h
                                                
                                                ; List view column structure flags
                                                
                                                LVCF_FMT     = 1
                                                LVCF_WIDTH   = 2
                                                LVCF_TEXT    = 4
                                                LVCF_SUBITEM = 8
                                                
                                                ; List view column alignment values
                                                
                                                LVCFMT_LEFT	   = 0
                                                LVCFMT_RIGHT	   = 1
                                                LVCFMT_CENTER	   = 2
                                                LVCFMT_JUSTIFYMASK = 3
                                                
                                                ; List view column width values
                                                
                                                LVSCW_AUTOSIZE		 = -1
                                                LVSCW_AUTOSIZE_USEHEADER = -2
                                                
                                                ; List view notifications
                                                
                                                LVN_ITEMCHANGING    = LVN_FIRST - 0
                                                LVN_ITEMCHANGED     = LVN_FIRST - 1
                                                LVN_INSERTITEM	    = LVN_FIRST - 2
                                                LVN_DELETEITEM	    = LVN_FIRST - 3
                                                LVN_DELETEALLITEMS  = LVN_FIRST - 4
                                                LVN_BEGINLABELEDITA = LVN_FIRST - 5
                                                LVN_ENDLABELEDITA   = LVN_FIRST - 6
                                                LVN_COLUMNCLICK     = LVN_FIRST - 8
                                                LVN_BEGINDRAG	    = LVN_FIRST - 9
                                                LVN_BEGINRDRAG	    = LVN_FIRST - 11
                                                LVN_ODCACHEHINT     = LVN_FIRST - 13
                                                LVN_GETDISPINFOA    = LVN_FIRST - 50
                                                LVN_SETDISPINFOA    = LVN_FIRST - 51
                                                LVN_ODFINDITEMA     = LVN_FIRST - 52
                                                LVN_KEYDOWN	    = LVN_FIRST - 55
                                                LVN_BEGINLABELEDITW = LVN_FIRST - 75
                                                LVN_ENDLABELEDITW   = LVN_FIRST - 76
                                                LVN_GETDISPINFOW    = LVN_FIRST - 77
                                                LVN_SETDISPINFOW    = LVN_FIRST - 78
                                                LVN_ODFINDITEMW     = LVN_FIRST - 79
                                                LVN_BEGINLABELEDIT  = LVN_BEGINLABELEDITA
                                                LVN_ENDLABELEDIT    = LVN_ENDLABELEDITA
                                                LVN_GETDISPINFO     = LVN_GETDISPINFOA
                                                LVN_SETDISPINFO     = LVN_SETDISPINFOA
                                                LVN_ODFINDITEM	    = LVN_ODFINDITEMA
                                                
                                                ; Tree view styles
                                                
                                                TVS_HASBUTTONS	    = 0001h
                                                TVS_HASLINES	    = 0002h
                                                TVS_LINESATROOT     = 0004h
                                                TVS_EDITLABELS	    = 0008h
                                                TVS_DISABLEDRAGDROP = 0010h
                                                TVS_SHOWSELALWAYS   = 0020h
                                                TVS_RTLREADING	    = 0040h
                                                TVS_NOTOOLTIPS	    = 0080h
                                                TVS_CHECKBOXES	    = 0100h
                                                TVS_TRACKSELECT     = 0200h
                                                TVS_SINGLEEXPAND    = 0400h
                                                TVS_INFOTIP	    = 0800h
                                                TVS_FULLROWSELECT   = 1000h
                                                TVS_NOSCROLL	    = 2000h
                                                TVS_NONEVENHEIGHT   = 4000h
                                                
                                                ; Tree view item structure flags
                                                
                                                TVIF_TEXT	   = 0001h
                                                TVIF_IMAGE	   = 0002h
                                                TVIF_PARAM	   = 0004h
                                                TVIF_STATE	   = 0008h
                                                TVIF_HANDLE	   = 0010h
                                                TVIF_SELECTEDIMAGE = 0020h
                                                TVIF_CHILDREN	   = 0040h
                                                TVIF_DI_SETITEM    = 1000h
                                                
                                                ; Tree view item states
                                                
                                                TVIS_FOCUSED	    = 00001h
                                                TVIS_SELECTED	    = 00002h
                                                TVIS_CUT	    = 00004h
                                                TVIS_DROPHILITED    = 00008h
                                                TVIS_BOLD	    = 00010h
                                                TVIS_EXPANDED	    = 00020h
                                                TVIS_EXPANDEDONCE   = 00040h
                                                TVIS_EXPANDPARTIAL  = 00080h
                                                TVIS_OVERLAYMASK    = 00F00h
                                                TVIS_STATEIMAGEMASK = 0F000h
                                                TVIS_USERMASK	    = 0F000h
                                                
                                                ; Tree view predefined item values
                                                
                                                TVI_ROOT  = 0FFFF0000h
                                                TVI_FIRST = 0FFFF0001h
                                                TVI_LAST  = 0FFFF0002h
                                                TVI_SORT  = 0FFFF0003h
                                                
                                                ; Tree view messages
                                                
                                                TVM_INSERTITEMA       = TV_FIRST + 0
                                                TVM_DELETEITEM	      = TV_FIRST + 1
                                                TVM_EXPAND	      = TV_FIRST + 2
                                                TVM_GETITEMRECT       = TV_FIRST + 4
                                                TVM_GETCOUNT	      = TV_FIRST + 5
                                                TVM_GETINDENT	      = TV_FIRST + 6
                                                TVM_SETINDENT	      = TV_FIRST + 7
                                                TVM_GETIMAGELIST      = TV_FIRST + 8
                                                TVM_SETIMAGELIST      = TV_FIRST + 9
                                                TVM_GETNEXTITEM       = TV_FIRST + 10
                                                TVM_SELECTITEM	      = TV_FIRST + 11
                                                TVM_GETITEMA	      = TV_FIRST + 12
                                                TVM_SETITEMA	      = TV_FIRST + 13
                                                TVM_EDITLABELA	      = TV_FIRST + 14
                                                TVM_GETEDITCONTROL    = TV_FIRST + 15
                                                TVM_GETVISIBLECOUNT   = TV_FIRST + 16
                                                TVM_HITTEST	      = TV_FIRST + 17
                                                TVM_CREATEDRAGIMAGE   = TV_FIRST + 18
                                                TVM_SORTCHILDREN      = TV_FIRST + 19
                                                TVM_ENSUREVISIBLE     = TV_FIRST + 20
                                                TVM_SORTCHILDRENCB    = TV_FIRST + 21
                                                TVM_ENDEDITLABELNOW   = TV_FIRST + 22
                                                TVM_GETISEARCHSTRINGA = TV_FIRST + 23
                                                TVM_INSERTITEMW       = TV_FIRST + 50
                                                TVM_GETITEMW	      = TV_FIRST + 62
                                                TVM_SETITEMW	      = TV_FIRST + 63
                                                TVM_GETISEARCHSTRINGW = TV_FIRST + 64
                                                TVM_EDITLABELW	      = TV_FIRST + 65
                                                TVM_INSERTITEM	      = TVM_INSERTITEMA
                                                TVM_GETITEM	      = TVM_GETITEMA
                                                TVM_SETITEM	      = TVM_SETITEMA
                                                TVM_GETISEARCHSTRING  = TVM_GETISEARCHSTRINGA
                                                TVM_EDITLABEL	      = TVM_EDITLABELA
                                                
                                                ; Tree view action flags
                                                
                                                TVE_COLLAPSE	  = 0001h
                                                TVE_EXPAND	  = 0002h
                                                TVE_TOGGLE	  = 0003h
                                                TVE_EXPANDPARTIAL = 4000h
                                                TVE_COLLAPSERESET = 8000h
                                                
                                                ; Tree view image list types
                                                
                                                TVSIL_NORMAL = 0
                                                TVSIL_STATE  = 2
                                                
                                                ; Tree view next item types
                                                
                                                TVGN_ROOT	     = 0
                                                TVGN_NEXT	     = 1
                                                TVGN_PREVIOUS	     = 2
                                                TVGN_PARENT	     = 3
                                                TVGN_CHILD	     = 4
                                                TVGN_FIRSTVISIBLE    = 5
                                                TVGN_NEXTVISIBLE     = 6
                                                TVGN_PREVIOUSVISIBLE = 7
                                                TVGN_DROPHILITE      = 8
                                                TVGN_CARET	     = 9
                                                
                                                ; Tree view hit test flags
                                                
                                                TVHT_NOWHERE	     = 001h
                                                TVHT_ONITEMICON      = 002h
                                                TVHT_ONITEMLABEL     = 004h
                                                TVHT_ONITEMINDENT    = 008h
                                                TVHT_ONITEMBUTTON    = 010h
                                                TVHT_ONITEMRIGHT     = 020h
                                                TVHT_ONITEMSTATEICON = 040h
                                                TVHT_ONITEM	     = TVHT_ONITEMICON or TVHT_ONITEMLABEL or TVHT_ONITEMSTATEICON
                                                TVHT_ABOVE	     = 100h
                                                TVHT_BELOW	     = 200h
                                                TVHT_TORIGHT	     = 400h
                                                TVHT_TOLEFT	     = 800h
                                                
                                                ; Tree view notifications
                                                
                                                TVN_SELCHANGINGA    = TVN_FIRST - 1
                                                TVN_SELCHANGEDA     = TVN_FIRST - 2
                                                TVN_GETDISPINFOA    = TVN_FIRST - 3
                                                TVN_SETDISPINFOA    = TVN_FIRST - 4
                                                TVN_ITEMEXPANDINGA  = TVN_FIRST - 5
                                                TVN_ITEMEXPANDEDA   = TVN_FIRST - 6
                                                TVN_BEGINDRAGA	    = TVN_FIRST - 7
                                                TVN_BEGINRDRAGA     = TVN_FIRST - 8
                                                TVN_DELETEITEMA     = TVN_FIRST - 9
                                                TVN_BEGINLABELEDITA = TVN_FIRST - 10
                                                TVN_ENDLABELEDITA   = TVN_FIRST - 11
                                                TVN_KEYDOWN	    = TVN_FIRST - 12
                                                TVN_SELCHANGINGW    = TVN_FIRST - 50
                                                TVN_SELCHANGEDW     = TVN_FIRST - 51
                                                TVN_GETDISPINFOW    = TVN_FIRST - 52
                                                TVN_SETDISPINFOW    = TVN_FIRST - 53
                                                TVN_ITEMEXPANDINGW  = TVN_FIRST - 54
                                                TVN_ITEMEXPANDEDW   = TVN_FIRST - 55
                                                TVN_BEGINDRAGW	    = TVN_FIRST - 56
                                                TVN_BEGINRDRAGW     = TVN_FIRST - 57
                                                TVN_DELETEITEMW     = TVN_FIRST - 58
                                                TVN_BEGINLABELEDITW = TVN_FIRST - 59
                                                TVN_ENDLABELEDITW   = TVN_FIRST - 60
                                                TVN_SELCHANGING     = TVN_SELCHANGINGA
                                                TVN_SELCHANGED	    = TVN_SELCHANGEDA
                                                TVN_GETDISPINFO     = TVN_GETDISPINFOA
                                                TVN_SETDISPINFO     = TVN_SETDISPINFOA
                                                TVN_ITEMEXPANDING   = TVN_ITEMEXPANDINGA
                                                TVN_ITEMEXPANDED    = TVN_ITEMEXPANDEDA
                                                TVN_BEGINDRAG	    = TVN_BEGINDRAGA
                                                TVN_BEGINRDRAG	    = TVN_BEGINRDRAGA
                                                TVN_DELETEITEM	    = TVN_DELETEITEMA
                                                TVN_BEGINLABELEDIT  = TVN_BEGINLABELEDITA
                                                TVN_ENDLABELEDIT    = TVN_ENDLABELEDITA
                                                
                                                ; Tree view action flags
                                                
                                                TVC_UNKNOWN    = 0
                                                TVC_BYMOUSE    = 1
                                                TVC_BYKEYBOARD = 2
                                                
                                                ; Tab control styles
                                                
                                                TCS_SCROLLOPPOSITE    = 0001h
                                                TCS_BOTTOM	      = 0002h
                                                TCS_RIGHT	      = 0002h
                                                TCS_FORCEICONLEFT     = 0010h
                                                TCS_FORCELABELLEFT    = 0020h
                                                TCS_HOTTRACK	      = 0040h
                                                TCS_VERTICAL	      = 0080h
                                                TCS_TABS	      = 0000h
                                                TCS_BUTTONS	      = 0100h
                                                TCS_SINGLELINE	      = 0000h
                                                TCS_MULTILINE	      = 0200h
                                                TCS_RIGHTJUSTIFY      = 0000h
                                                TCS_FIXEDWIDTH	      = 0400h
                                                TCS_RAGGEDRIGHT       = 0800h
                                                TCS_FOCUSONBUTTONDOWN = 1000h
                                                TCS_OWNERDRAWFIXED    = 2000h
                                                TCS_TOOLTIPS	      = 4000h
                                                TCS_FOCUSNEVER	      = 8000h
                                                
                                                ; Tab control messages
                                                
                                                TCM_GETIMAGELIST   = TCM_FIRST + 2
                                                TCM_SETIMAGELIST   = TCM_FIRST + 3
                                                TCM_GETITEMCOUNT   = TCM_FIRST + 4
                                                TCM_GETITEMA	   = TCM_FIRST + 5
                                                TCM_SETITEMA	   = TCM_FIRST + 6
                                                TCM_INSERTITEMA    = TCM_FIRST + 7
                                                TCM_DELETEITEM	   = TCM_FIRST + 8
                                                TCM_DELETEALLITEMS = TCM_FIRST + 9
                                                TCM_GETITEMRECT    = TCM_FIRST + 10
                                                TCM_GETCURSEL	   = TCM_FIRST + 11
                                                TCM_SETCURSEL	   = TCM_FIRST + 12
                                                TCM_HITTEST	   = TCM_FIRST + 13
                                                TCM_SETITEMEXTRA   = TCM_FIRST + 14
                                                TCM_ADJUSTRECT	   = TCM_FIRST + 40
                                                TCM_SETITEMSIZE    = TCM_FIRST + 41
                                                TCM_REMOVEIMAGE    = TCM_FIRST + 42
                                                TCM_SETPADDING	   = TCM_FIRST + 43
                                                TCM_GETROWCOUNT    = TCM_FIRST + 44
                                                TCM_GETTOOLTIPS    = TCM_FIRST + 45
                                                TCM_SETTOOLTIPS    = TCM_FIRST + 46
                                                TCM_GETCURFOCUS    = TCM_FIRST + 47
                                                TCM_SETCURFOCUS    = TCM_FIRST + 48
                                                TCM_GETITEMW	   = TCM_FIRST + 60
                                                TCM_SETITEMW	   = TCM_FIRST + 61
                                                TCM_INSERTITEMW    = TCM_FIRST + 62
                                                TCM_GETITEM	   = TCM_GETITEMA
                                                TCM_SETITEM	   = TCM_SETITEMA
                                                TCM_INSERTITEM	   = TCM_INSERTITEMA
                                                
                                                ; Tab control item structure flags
                                                
                                                TCIF_TEXT	= 1
                                                TCIF_IMAGE	= 2
                                                TCIF_RTLREADING = 4
                                                TCIF_PARAM	= 8
                                                
                                                ; Tab control hit test flags
                                                
                                                TCHT_NOWHERE	 = 1
                                                TCHT_ONITEMICON  = 2
                                                TCHT_ONITEMLABEL = 4
                                                TCHT_ONITEM	 = TCHT_ONITEMICON or TCHT_ONITEMLABEL
                                                
                                                ; Tab control notifications
                                                
                                                TCN_KEYDOWN	= TCN_FIRST - 0
                                                TCN_SELCHANGE	= TCN_FIRST - 1
                                                TCN_SELCHANGING = TCN_FIRST - 2
                                                
                                                ; Animation control styles
                                                
                                                ACS_CENTER	= 1
                                                ACS_TRANSPARENT = 2
                                                ACS_AUTOPLAY	= 4
                                                ACS_TIMER	= 8
                                                
                                                ; Animation control messages
                                                
                                                ACM_OPENA = WM_USER + 100
                                                ACM_PLAY  = WM_USER + 101
                                                ACM_STOP  = WM_USER + 102
                                                ACM_OPENW = WM_USER + 103
                                                ACM_OPEN  = ACM_OPENA
                                                
                                                ; Animation control notifications
                                                
                                                ACN_START = 1
                                                ACN_STOP  = 2
                                                
                                                ; Month calendar styles
                                                
                                                MCS_DAYSTATE	= 1
                                                MCS_MULTISELECT = 2
                                                MCS_WEEKNUMBERS = 4
                                                MCS_NOTODAY	= 8
                                                
                                                ; Month calendar messages
                                                
                                                MCM_GETCURSEL	      = MCM_FIRST + 1
                                                MCM_SETCURSEL	      = MCM_FIRST + 2
                                                MCM_GETMAXSELCOUNT    = MCM_FIRST + 3
                                                MCM_SETMAXSELCOUNT    = MCM_FIRST + 4
                                                MCM_GETSELRANGE       = MCM_FIRST + 5
                                                MCM_SETSELRANGE       = MCM_FIRST + 6
                                                MCM_GETMONTHRANGE     = MCM_FIRST + 7
                                                MCM_SETDAYSTATE       = MCM_FIRST + 8
                                                MCM_GETMINREQRECT     = MCM_FIRST + 9
                                                MCM_SETCOLOR	      = MCM_FIRST + 10
                                                MCM_GETCOLOR	      = MCM_FIRST + 11
                                                MCM_SETTODAY	      = MCM_FIRST + 12
                                                MCM_GETTODAY	      = MCM_FIRST + 13
                                                MCM_HITTEST	      = MCM_FIRST + 14
                                                MCM_SETFIRSTDAYOFWEEK = MCM_FIRST + 15
                                                MCM_GETFIRSTDAYOFWEEK = MCM_FIRST + 16
                                                MCM_GETRANGE	      = MCM_FIRST + 17
                                                MCM_SETRANGE	      = MCM_FIRST + 18
                                                MCM_GETMONTHDELTA     = MCM_FIRST + 19
                                                MCM_SETMONTHDELTA     = MCM_FIRST + 20
                                                
                                                ; Month calendar hit test flags
                                                
                                                MCHT_TITLE	      = 0010000h
                                                MCHT_CALENDAR	      = 0020000h
                                                MCHT_TODAYLINK	      = 0030000h
                                                MCHT_NEXT	      = 1000000h
                                                MCHT_PREV	      = 2000000h
                                                MCHT_NOWHERE	      = 0000000h
                                                MCHT_TITLEBK	      = MCHT_TITLE
                                                MCHT_TITLEMONTH       = MCHT_TITLE or 1
                                                MCHT_TITLEYEAR	      = MCHT_TITLE or 2
                                                MCHT_TITLEBTNNEXT     = MCHT_TITLE or MCHT_NEXT or 3
                                                MCHT_TITLEBTNPREV     = MCHT_TITLE or MCHT_PREV or 3
                                                MCHT_CALENDARBK       = MCHT_CALENDAR
                                                MCHT_CALENDARDATE     = MCHT_CALENDAR or 1
                                                MCHT_CALENDARDATENEXT = MCHT_CALENDARDATE or MCHT_NEXT
                                                MCHT_CALENDARDATEPREV = MCHT_CALENDARDATE or MCHT_PREV
                                                MCHT_CALENDARDAY      = MCHT_CALENDAR or 2
                                                MCHT_CALENDARWEEKNUM  = MCHT_CALENDAR or 3
                                                
                                                ; Month calendar color codes
                                                
                                                MCSC_BACKGROUND   = 0
                                                MCSC_TEXT	  = 1
                                                MCSC_TITLEBK	  = 2
                                                MCSC_TITLETEXT	  = 3
                                                MCSC_MONTHBK	  = 4
                                                MCSC_TRAILINGTEXT = 5
                                                
                                                ; Month calendar notifications
                                                
                                                MCN_SELCHANGE	= MCN_FIRST + 1
                                                MCN_GETDAYSTATE = MCN_FIRST + 3
                                                MCN_SELECT	= MCN_FIRST + 4
                                                
                                                ; Date-time pick control messages
                                                
                                                DTM_GETSYSTEMTIME = DTM_FIRST + 1
                                                DTM_SETSYSTEMTIME = DTM_FIRST + 2
                                                DTM_GETRANGE	  = DTM_FIRST + 3
                                                DTM_SETRANGE	  = DTM_FIRST + 4
                                                DTM_SETFORMATA	  = DTM_FIRST + 5
                                                DTM_SETMCCOLOR	  = DTM_FIRST + 6
                                                DTM_GETMCCOLOR	  = DTM_FIRST + 7
                                                DTM_GETMONTHCAL   = DTM_FIRST + 8
                                                DTM_SETMCFONT	  = DTM_FIRST + 9
                                                DTM_GETMCFONT	  = DTM_FIRST + 10
                                                DTM_SETFORMATW	  = DTM_FIRST + 50
                                                DTM_SETFORMAT	  = DTM_SETFORMATA
                                                
                                                ; Date-time pick control styles
                                                
                                                DTS_UPDOWN	    = 01h
                                                DTS_SHOWNONE	    = 02h
                                                DTS_SHORTDATEFORMAT = 00h
                                                DTS_LONGDATEFORMAT  = 04h
                                                DTS_TIMEFORMAT	    = 09h
                                                DTS_APPCANPARSE     = 10h
                                                DTS_RIGHTALIGN	    = 20h
                                                
                                                ; Date-time pick control notifications
                                                
                                                DTN_DATETIMECHANGE = DTN_FIRST + 1
                                                DTN_USERSTRINGA    = DTN_FIRST + 2
                                                DTN_WMKEYDOWNA	   = DTN_FIRST + 3
                                                DTN_FORMATA	   = DTN_FIRST + 4
                                                DTN_FORMATQUERYA   = DTN_FIRST + 5
                                                DTN_DROPDOWN	   = DTN_FIRST + 6
                                                DTN_CLOSEUP	   = DTN_FIRST + 7
                                                DTN_USERSTRINGW    = DTN_FIRST + 15
                                                DTN_WMKEYDOWNW	   = DTN_FIRST + 16
                                                DTN_FORMATW	   = DTN_FIRST + 17
                                                DTN_FORMATQUERYW   = DTN_FIRST + 18
                                                DTN_USERSTRING	   = DTN_USERSTRINGA
                                                DTN_WMKEYDOWN	   = DTN_WMKEYDOWNA
                                                DTN_FORMAT	   = DTN_FORMATA
                                                DTN_FORMATQUERY    = DTN_FORMATQUERYA
                                                
                                                ; ImageList_LoadImage types
                                                
                                                IMAGE_BITMAP	  = 0
                                                IMAGE_ICON	  = 1
                                                IMAGE_CURSOR	  = 2
                                                IMAGE_ENHMETAFILE = 3
                                                
                                                ; ImageList_LoadImage flags
                                                
                                                LR_DEFAULTCOLOR     = 0000h
                                                LR_MONOCHROME	    = 0001h
                                                LR_COLOR	    = 0002h
                                                LR_COPYRETURNORG    = 0004h
                                                LR_COPYDELETEORG    = 0008h
                                                LR_LOADFROMFILE     = 0010h
                                                LR_LOADTRANSPARENT  = 0020h
                                                LR_DEFAULTSIZE	    = 0040h
                                                LR_VGACOLOR	    = 0080h
                                                LR_LOADMAP3DCOLORS  = 1000h
                                                LR_CREATEDIBSECTION = 2000h
                                                LR_COPYFROMRESOURCE = 4000h
                                                LR_SHARED	    = 8000h
                                                
                                                ; IP control messages
                                                
                                                IPM_CLEARADDRESS = WM_USER + 100
                                                IPM_SETADDRESS	 = WM_USER + 101
                                                IPM_GETADDRESS	 = WM_USER + 102
                                                IPM_SETRANGE	 = WM_USER + 103
                                                IPM_SETFOCUS	 = WM_USER + 104
                                                IPM_ISBLANK	 = WM_USER + 105
                                                
                                                ; Custom Draw flags
                                                
                                                CDRF_DODEFAULT	       = 0
                                                CDRF_NEWFONT	       = 2
                                                CDRF_SKIPDEFAULT       = 4
                                                CDRF_NOTIFYPOSTPAINT   = 10h
                                                CDRF_NOTIFYITEMDRAW    = 20h
                                                CDRF_NOTIFYSUBITEMDRAW = 20h
                                                CDRF_NOTIFYPOSTERASE   = 40h
                                                CDDS_PREPAINT	       = 1
                                                CDDS_POSTPAINT	       = 2
                                                CDDS_PREERASE	       = 3
                                                CDDS_POSTERASE	       = 4
                                                CDDS_ITEM	       = 10000h
                                                CDDS_ITEMPREPAINT      = CDDS_ITEM or CDDS_PREPAINT
                                                CDDS_ITEMPOSTPAINT     = CDDS_ITEM or CDDS_POSTPAINT
                                                CDDS_ITEMPREERASE      = CDDS_ITEM or CDDS_PREERASE
                                                CDDS_ITEMPOSTERASE     = CDDS_ITEM or CDDS_POSTERASE
                                                CDDS_SUBITEM	       = 20000h
                                                CDIS_SELECTED	       = 1
                                                CDIS_GRAYED	       = 2
                                                CDIS_DISABLED	       = 4
                                                CDIS_CHECKED	       = 8
                                                CDIS_FOCUS	       = 10h
                                                CDIS_DEFAULT	       = 20h
                                                CDIS_HOT	       = 40h
                                                CDIS_MARKED	       = 80h
                                                CDIS_INDETERMINATE     = 100h
                                                
                                                include 'equates/comdlg32.inc'
                                                
                                                ; COMDLG32.DLL structures and constants
                                                
                                                struct OPENFILENAME
                                                  lStructSize       dd ?
                                                  hwndOwner         dd ?
                                                  hInstance         dd ?
                                                  lpstrFilter       dd ?
                                                  lpstrCustomFilter dd ?
                                                  nMaxCustFilter    dd ?
                                                  nFilterIndex      dd ?
                                                  lpstrFile         dd ?
                                                  nMaxFile          dd ?
                                                  lpstrFileTitle    dd ?
                                                  nMaxFileTitle     dd ?
                                                  lpstrInitialDir   dd ?
                                                  lpstrTitle        dd ?
                                                  Flags             dd ?
                                                  nFileOffset       dw ?
                                                  nFileExtension    dw ?
                                                  lpstrDefExt       dd ?
                                                  lCustData         dd ?
                                                  lpfnHook          dd ?
                                                  lpTemplateName    dd ?
                                                ends
                                                
                                                struct CHOOSECOLOR
                                                  lStructSize    dd ?
                                                  hwndOwner      dd ?
                                                  hInstance      dd ?
                                                  rgbResult      dd ?
                                                  lpCustColors   dd ?
                                                  Flags          dd ?
                                                  lCustData      dd ?
                                                  lpfnHook       dd ?
                                                  lpTemplateName dd ?
                                                ends
                                                
                                                struct FINDREPLACE
                                                  lStructSize      dd ?
                                                  hwndOwner        dd ?
                                                  hInstance        dd ?
                                                  Flags            dd ?
                                                  lpstrFindWhat    dd ?
                                                  lpstrReplaceWith dd ?
                                                  wFindWhatLen     dw ?
                                                  wReplaceWithLen  dw ?
                                                  lCustData        dd ?
                                                  lpfnHook         dd ?
                                                  lpTemplateName   dd ?
                                                ends
                                                
                                                struct CHOOSEFONT
                                                  lStructSize    dd ?
                                                  hwndOwner      dd ?
                                                  hDC            dd ?
                                                  lpLogFont      dd ?
                                                  iPointSize     dd ?
                                                  Flags          dd ?
                                                  rgbColors      dd ?
                                                  lCustData      dd ?
                                                  lpfnHook       dd ?
                                                  lpTemplateName dd ?
                                                  hInstance      dd ?
                                                  lpszStyle      dd ?
                                                  nFontType      dw ?
                                                  wReserved      dw ?
                                                  nSizeMin       dd ?
                                                  nSizeMax       dd ?
                                                ends
                                                
                                                struct PRINTDLG
                                                  lStructSize         dd ?
                                                  hwndOwner           dd ?
                                                  hDevMode            dd ?
                                                  hDevNames           dd ?
                                                  hDC                 dd ?
                                                  Flags               dd ?
                                                  nFromPage           dw ?
                                                  nToPage             dw ?
                                                  nMinPage            dw ?
                                                  nMaxPage            dw ?
                                                  nCopies             dw ?
                                                  hInstance           dd ?
                                                  lCustData           dd ?
                                                  lpfnPrintHook       dd ?
                                                  lpfnSetupHook       dd ?
                                                  lpPrintTemplateName dd ?
                                                  lpSetupTemplateName dd ?
                                                  hPrintTemplate      dd ?
                                                  hSetupTemplate      dd ?
                                                ends
                                                
                                                struct DEVNAMES
                                                  wDriverOffset dw ?
                                                  wDeviceOffset dw ?
                                                  wOutputOffset dw ?
                                                  wDefault      dw ?
                                                ends
                                                
                                                struct PAGESETUPDLG
                                                  lStructSize             dd ?
                                                  hwndOwner               dd ?
                                                  hDevMode                dd ?
                                                  hDevNames               dd ?
                                                  Flags                   dd ?
                                                  ptPaperSize             POINT
                                                  rtMinMargin             RECT
                                                  rtMargin                RECT
                                                  hInstance               dd ?
                                                  lCustData               dd ?
                                                  lpfnPageSetupHook       dd ?
                                                  lpfnPagePaintHook       dd ?
                                                  lpPageSetupTemplateName dd ?
                                                  hPageSetupTemplate      dd ?
                                                ends
                                                
                                                ; OPENFILENAME flags
                                                
                                                OFN_READONLY             = 000001h
                                                OFN_OVERWRITEPROMPT      = 000002h
                                                OFN_HIDEREADONLY         = 000004h
                                                OFN_NOCHANGEDIR          = 000008h
                                                OFN_SHOWHELP             = 000010h
                                                OFN_ENABLEHOOK           = 000020h
                                                OFN_ENABLETEMPLATE       = 000040h
                                                OFN_ENABLETEMPLATEHANDLE = 000080h
                                                OFN_NOVALIDATE           = 000100h
                                                OFN_ALLOWMULTISELECT     = 000200h
                                                OFN_EXTENSIONDIFFERENT   = 000400h
                                                OFN_PATHMUSTEXIST        = 000800h
                                                OFN_FILEMUSTEXIST        = 001000h
                                                OFN_CREATEPROMPT         = 002000h
                                                OFN_SHAREAWARE           = 004000h
                                                OFN_NOREADONLYRETURN     = 008000h
                                                OFN_NOTESTFILECREATE     = 010000h
                                                OFN_NONETWORKBUTTON      = 020000h
                                                OFN_NOLONGNAMES          = 040000h
                                                OFN_EXPLORER             = 080000h
                                                OFN_NODEREFERENCELINKS   = 100000h
                                                OFN_LONGNAMES            = 200000h
                                                
                                                ; Common dialog notifications
                                                
                                                CDN_FIRST          = -601
                                                CDN_LAST           = -699
                                                CDN_INITDONE       = CDN_FIRST - 0
                                                CDN_SELCHANGE      = CDN_FIRST - 1
                                                CDN_FOLDERCHANGE   = CDN_FIRST - 2
                                                CDN_SHAREVIOLATION = CDN_FIRST - 3
                                                CDN_HELP           = CDN_FIRST - 4
                                                CDN_FILEOK         = CDN_FIRST - 5
                                                CDN_TYPECHANGE     = CDN_FIRST - 6
                                                
                                                ; Common dialog messages
                                                
                                                CDM_FIRST           = WM_USER + 100
                                                CDM_LAST            = WM_USER + 200
                                                CDM_GETSPEC         = CDM_FIRST + 0
                                                CDM_GETFILEPATH     = CDM_FIRST + 1
                                                CDM_GETFOLDERPATH   = CDM_FIRST + 2
                                                CDM_GETFOLDERIDLIST = CDM_FIRST + 3
                                                CDM_SETCONTROLTEXT  = CDM_FIRST + 4
                                                CDM_HIDECONTROL     = CDM_FIRST + 5
                                                CDM_SETDEFEXT       = CDM_FIRST + 6
                                                
                                                ; CHOOSECOLOR flags
                                                
                                                CC_RGBINIT              = 001h
                                                CC_FULLOPEN             = 002h
                                                CC_PREVENTFULLOPEN      = 004h
                                                CC_SHOWHELP             = 008h
                                                CC_ENABLEHOOK           = 010h
                                                CC_ENABLETEMPLATE       = 020h
                                                CC_ENABLETEMPLATEHANDLE = 040h
                                                CC_SOLIDCOLOR           = 080h
                                                CC_ANYCOLOR             = 100h
                                                
                                                ; FINDREPLACE flags
                                                
                                                FR_DOWN                 = 00001h
                                                FR_WHOLEWORD            = 00002h
                                                FR_MATCHCASE            = 00004h
                                                FR_FINDNEXT             = 00008h
                                                FR_REPLACE              = 00010h
                                                FR_REPLACEALL           = 00020h
                                                FR_DIALOGTERM           = 00040h
                                                FR_SHOWHELP             = 00080h
                                                FR_ENABLEHOOK           = 00100h
                                                FR_ENABLETEMPLATE       = 00200h
                                                FR_NOUPDOWN             = 00400h
                                                FR_NOMATCHCASE          = 00800h
                                                FR_NOWHOLEWORD          = 01000h
                                                FR_ENABLETEMPLATEHANDLE = 02000h
                                                FR_HIDEUPDOWN           = 04000h
                                                FR_HIDEMATCHCASE        = 08000h
                                                FR_HIDEWHOLEWORD        = 10000h
                                                
                                                ; CHOOSEFONT flags
                                                
                                                CF_SCREENFONTS          = 0000001h
                                                CF_PRINTERFONTS         = 0000002h
                                                CF_BOTH                 = CF_SCREENFONTS or CF_PRINTERFONTS
                                                CF_SHOWHELP             = 0000004h
                                                CF_ENABLEHOOK           = 0000008h
                                                CF_ENABLETEMPLATE       = 0000010h
                                                CF_ENABLETEMPLATEHANDLE = 0000020h
                                                CF_INITTOLOGFONTSTRUCT  = 0000040h
                                                CF_USESTYLE             = 0000080h
                                                CF_EFFECTS              = 0000100h
                                                CF_APPLY                = 0000200h
                                                CF_ANSIONLY             = 0000400h
                                                CF_SCRIPTSONLY          = CF_ANSIONLY
                                                CF_NOVECTORFONTS        = 0000800h
                                                CF_NOOEMFONTS           = CF_NOVECTORFONTS
                                                CF_NOSIMULATIONS        = 0001000h
                                                CF_LIMITSIZE            = 0002000h
                                                CF_FIXEDPITCHONLY       = 0004000h
                                                CF_WYSIWYG              = 0008000h
                                                CF_FORCEFONTEXIST       = 0010000h
                                                CF_SCALABLEONLY         = 0020000h
                                                CF_TTONLY               = 0040000h
                                                CF_NOFACESEL            = 0080000h
                                                CF_NOSTYLESEL           = 0100000h
                                                CF_NOSIZESEL            = 0200000h
                                                CF_SELECTSCRIPT         = 0400000h
                                                CF_NOSCRIPTSEL          = 0800000h
                                                CF_NOVERTFONTS          = 1000000h
                                                
                                                ; ChooseFont messages
                                                
                                                WM_CHOOSEFONT_GETLOGFONT = WM_USER + 1
                                                WM_CHOOSEFONT_SETLOGFONT = WM_USER + 101
                                                WM_CHOOSEFONT_SETFLAGS   = WM_USER + 102
                                                
                                                ; PRINTDLG flags
                                                
                                                PD_ALLPAGES                   = 000000h
                                                PD_SELECTION                  = 000001h
                                                PD_PAGENUMS                   = 000002h
                                                PD_NOSELECTION                = 000004h
                                                PD_NOPAGENUMS                 = 000008h
                                                PD_COLLATE                    = 000010h
                                                PD_PRINTTOFILE                = 000020h
                                                PD_PRINTSETUP                 = 000040h
                                                PD_NOWARNING                  = 000080h
                                                PD_RETURNDC                   = 000100h
                                                PD_RETURNIC                   = 000200h
                                                PD_RETURNDEFAULT              = 000400h
                                                PD_SHOWHELP                   = 000800h
                                                PD_ENABLEPRINTHOOK            = 001000h
                                                PD_ENABLESETUPHOOK            = 002000h
                                                PD_ENABLEPRINTTEMPLATE        = 004000h
                                                PD_ENABLESETUPTEMPLATE        = 008000h
                                                PD_ENABLEPRINTTEMPLATEHANDLE  = 010000h
                                                PD_ENABLESETUPTEMPLATEHANDLE  = 020000h
                                                PD_USEDEVMODECOPIES           = 040000h
                                                PD_USEDEVMODECOPIESANDCOLLATE = 040000h
                                                PD_DISABLEPRINTTOFILE         = 080000h
                                                PD_HIDEPRINTTOFILE            = 100000h
                                                PD_NONETWORKBUTTON            = 200000h
                                                
                                                ; PAGESETUPDLG flags
                                                
                                                PSD_DEFAULTMINMARGINS             = 000000h
                                                PSD_INWININIINTLMEASURE           = 000000h
                                                PSD_MINMARGINS                    = 000001h
                                                PSD_MARGINS                       = 000002h
                                                PSD_INTHOUSANDTHSOFINCHES         = 000004h
                                                PSD_INHUNDREDTHSOFMILLIMETERS     = 000008h
                                                PSD_DISABLEMARGINS                = 000010h
                                                PSD_DISABLEPRINTER                = 000020h
                                                PSD_NOWARNING                     = 000080h
                                                PSD_DISABLEORIENTATION            = 000100h
                                                PSD_RETURNDEFAULT                 = 000400h
                                                PSD_DISABLEPAPER                  = 000200h
                                                PSD_SHOWHELP                      = 000800h
                                                PSD_ENABLEPAGESETUPHOOK           = 002000h
                                                PSD_ENABLEPAGESETUPTEMPLATE       = 008000h
                                                PSD_ENABLEPAGESETUPTEMPLATEHANDLE = 020000h
                                                PSD_ENABLEPAGEPAINTHOOK           = 040000h
                                                PSD_DISABLEPAGEPAINTING           = 080000h
                                                PSD_NONETWORKBUTTON               = 200000h
                                                
                                                ; PageSetupDlg messages
                                                
                                                WM_PSD_PAGESETUPDLG   = WM_USER
                                                WM_PSD_FULLPAGERECT   = WM_USER + 1
                                                WM_PSD_MINMARGINRECT  = WM_USER + 2
                                                WM_PSD_MARGINRECT     = WM_USER + 3
                                                WM_PSD_GREEKTEXTRECT  = WM_USER + 4
                                                WM_PSD_ENVSTAMPRECT   = WM_USER + 5
                                                WM_PSD_YAFULLPAGERECT = WM_USER + 6
                                                
                                                ; Common dialog error codes
                                                
                                                CDERR_DIALOGFAILURE    = 0FFFFh
                                                CDERR_GENERALCODES     = 00000h
                                                CDERR_STRUCTSIZE       = 00001h
                                                CDERR_INITIALIZATION   = 00002h
                                                CDERR_NOTEMPLATE       = 00003h
                                                CDERR_NOHINSTANCE      = 00004h
                                                CDERR_LOADSTRFAILURE   = 00005h
                                                CDERR_FINDRESFAILURE   = 00006h
                                                CDERR_LOADRESFAILURE   = 00007h
                                                CDERR_LOCKRESFAILURE   = 00008h
                                                CDERR_MEMALLOCFAILURE  = 00009h
                                                CDERR_MEMLOCKFAILURE   = 0000Ah
                                                CDERR_NOHOOK           = 0000Bh
                                                CDERR_REGISTERMSGFAIL  = 0000Ch
                                                PDERR_PRINTERCODES     = 01000h
                                                PDERR_SETUPFAILURE     = 01001h
                                                PDERR_PARSEFAILURE     = 01002h
                                                PDERR_RETDEFFAILURE    = 01003h
                                                PDERR_LOADDRVFAILURE   = 01004h
                                                PDERR_GETDEVMODEFAIL   = 01005h
                                                PDERR_INITFAILURE      = 01006h
                                                PDERR_NODEVICES        = 01007h
                                                PDERR_NODEFAULTPRN     = 01008h
                                                PDERR_DNDMMISMATCH     = 01009h
                                                PDERR_CREATEICFAILURE  = 0100Ah
                                                PDERR_PRINTERNOTFOUND  = 0100Bh
                                                PDERR_DEFAULTDIFFERENT = 0100Ch
                                                CFERR_CHOOSEFONTCODES  = 02000h
                                                CFERR_NOFONTS          = 02001h
                                                CFERR_MAXLESSTHANMIN   = 02002h
                                                FNERR_FILENAMECODES    = 03000h
                                                FNERR_SUBCLASSFAILURE  = 03001h
                                                FNERR_INVALIDFILENAME  = 03002h
                                                FNERR_BUFFERTOOSMALL   = 03003h
                                                FRERR_FINDREPLACECODES = 04000h
                                                FRERR_BUFFERLENGTHZERO = 04001h
                                                CCERR_CHOOSECOLORCODES = 05000h
                                                
                                                include 'equates/shell32.inc'
                                                
                                                ; SHELL32.DLL structures and constants
                                                
                                                struct NOTIFYICONDATA
                                                  cbSize           dd ?
                                                  hWnd             dd ?
                                                  uID              dd ?
                                                  uFlags           dd ?
                                                  uCallbackMessage dd ?
                                                  hIcon            dd ?
                                                  szTip            CHAR 64 dup (?)
                                                ends
                                                
                                                ; Taskbar icon messages
                                                
                                                NIM_ADD        = 0
                                                NIM_MODIFY     = 1
                                                NIM_DELETE     = 2
                                                NIM_SETFOCUS   = 3
                                                NIM_SETVERSION = 4
                                                
                                                ; Taskbar icon flags
                                                
                                                NIF_MESSAGE    = 01h
                                                NIF_ICON       = 02h
                                                NIF_TIP        = 04h
                                                NIF_STATE      = 08h
                                                NIF_INFO       = 10h
                                                NIF_GUID       = 20h
                                                
                                                include 'equates/wsock32.inc'
                                                
                                                ; WSOCK32.DLL structures and constants
                                                
                                                struct WSADATA
                                                  wVersion       dw ?
                                                  wHighVersion   dw ?
                                                  szDescription  db 256+1 dup (?)
                                                  szSystemStatus db 128+1 dup (?)
                                                  iMaxSockets    dw ?
                                                  iMaxUdpDg      dw ?
                                                  lpVendorInfo   dd ?
                                                ends
                                                
                                                struct hostent
                                                  h_name      dd ?
                                                  h_aliases   dd ?
                                                  h_addrtype  dw ?
                                                  h_length    dw ?
                                                  h_addr_list dd ?
                                                ends
                                                
                                                struct sockaddr_in
                                                  sin_family dw ?
                                                  sin_port   dw ?
                                                  sin_addr   dd ?
                                                  sin_zero   db 8 dup (?)
                                                ends
                                                
                                                struct sockaddr
                                                  sa_family dw ?
                                                  sa_data   db 14 dup (?)
                                                ends
                                                
                                                ; Socket types
                                                
                                                SOCK_STREAM    = 1
                                                SOCK_DGRAM     = 2
                                                SOCK_RAW       = 3
                                                SOCK_RDM       = 4
                                                SOCK_SEQPACKET = 5
                                                
                                                ; Address formats
                                                
                                                AF_UNSPEC    = 0
                                                AF_UNIX      = 1
                                                AF_INET      = 2
                                                AF_IMPLINK   = 3
                                                AF_PUP       = 4
                                                AF_CHAOS     = 5
                                                AF_NS        = 6
                                                AF_IPX       = 6
                                                AF_ISO       = 7
                                                AF_OSI       = AF_ISO
                                                AF_ECMA      = 8
                                                AF_DATAKIT   = 9
                                                AF_CCITT     = 10
                                                AF_SNA       = 11
                                                AF_DECnet    = 12
                                                AF_DLI       = 13
                                                AF_LAT       = 14
                                                AF_HYLINK    = 15
                                                AF_APPLETALK = 16
                                                AF_NETBIOS   = 17
                                                
                                                ; Protocol formats
                                                
                                                PF_UNSPEC    = 0
                                                PF_UNIX      = 1
                                                PF_INET      = 2
                                                PF_IMPLINK   = 3
                                                PF_PUP       = 4
                                                PF_CHAOS     = 5
                                                PF_NS        = 6
                                                PF_IPX       = 6
                                                PF_ISO       = 7
                                                PF_OSI       = PF_ISO
                                                PF_ECMA      = 8
                                                PF_DATAKIT   = 9
                                                PF_CCITT     = 10
                                                PF_SNA       = 11
                                                PF_DECnet    = 12
                                                PF_DLI       = 13
                                                PF_LAT       = 14
                                                PF_HYLINK    = 15
                                                PF_APPLETALK = 16
                                                PF_NETBIOS   = 17
                                                
                                                ; IP Ports
                                                
                                                IPPORT_ECHO        = 7
                                                IPPORT_DISCARD     = 9
                                                IPPORT_SYSTAT      = 11
                                                IPPORT_DAYTIME     = 13
                                                IPPORT_NETSTAT     = 15
                                                IPPORT_FTP         = 21
                                                IPPORT_TELNET      = 23
                                                IPPORT_SMTP        = 25
                                                IPPORT_TIMESERVER  = 37
                                                IPPORT_NAMESERVER  = 42
                                                IPPORT_WHOIS       = 43
                                                IPPORT_MTP         = 57
                                                IPPORT_TFTP        = 69
                                                IPPORT_RJE         = 77
                                                IPPORT_FINGER      = 79
                                                IPPORT_TTYLINK     = 87
                                                IPPORT_SUPDUP      = 95
                                                IPPORT_EXECSERVER  = 512
                                                IPPORT_LOGINSERVER = 513
                                                IPPORT_CMDSERVER   = 514
                                                IPPORT_EFSSERVER   = 520
                                                IPPORT_BIFFUDP     = 512
                                                IPPORT_WHOSERVER   = 513
                                                IPPORT_ROUTESERVER = 520
                                                IPPORT_RESERVED    = 1024
                                                
                                                ; Notifications
                                                
                                                FD_READ    = 01h
                                                FD_WRITE   = 02h
                                                FD_OOB     = 04h
                                                FD_ACCEPT  = 08h
                                                FD_CONNECT = 10h
                                                FD_CLOSE   = 20h
                                                
                                                
                                                
                                                
                                                ; CRASHES VB ; section '.code' code readable executable   
                                                section '.code' code writeable executable
                                                
                                                
                                                ; to keep FPU state
00000400: 20 20 20 20 20 20 20 20 20 20 20 20   ORIG_87_STATE_94bytes  db 94 dup(' ')
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20         
0000045E: 20 20 20 20 20 20 20 20 20 20 20 20   db "            emu8086               microprocessor emulator    "   ; jic buffer :)
          65 6D 75 38 30 38 36 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 6D 69   
          63 72 6F 70 72 6F 63 65 73 73 6F 72   
          20 65 6D 75 6C 61 74 6F 72 20 20 20   
          20                                    
0000049B: 20 20 20 20 20 20 20 20 20 20 20 20   db "                                         "
          20 20 20 20 20 20 20 20 20 20 20 20     
          20 20 20 20 20 20 20 20 20 20 20 20     
          20 20 20 20 20                        
                                                
                                                
000004C4: 55 89 E5                              proc DllEntryPoint hinstDLL,fdwReason,lpvReserved
000004C7: B8 01 00 00 00                        	mov	eax,TRUE
000004CC: C9 C2 0C 00                           	ret
                                                endp
                                                
                                                
                                                ; it appears that we get "dll not found" message in VB if this sub does not exist:
                                                ; so we'll keep it, maybe it'll be useful one day too :)
000004D0: 55 89 E5 83 EC 04                     proc ShowErrorMessage hWnd,dwError
                                                  local lpBuffer:DWORD
000004D6: 8D 45 FC                              	lea	eax,[lpBuffer]
000004D9: 6A 00 6A 00 50 6A 00 FF 75 0C 6A 00   	invoke	FormatMessage,FORMAT_MESSAGE_ALLOCATE_BUFFER+FORMAT_MESSAGE_FROM_SYSTEM,0,[dwError],LANG_NEUTRAL,eax,0,0
          68 00 11 00 00 FF 15 68 30 40 00      
000004F0: 6A 10 6A 00 FF 75 FC FF 75 08 FF 15   	invoke	MessageBox,[hWnd],[lpBuffer],NULL,MB_ICONERROR+MB_OK
          A8 30 40 00                           
00000500: FF 75 FC FF 15 6C 30 40 00            	invoke	LocalFree,[lpBuffer]
00000509: C9 C2 08 00                           	ret
                                                endp
                                                
                                                
                                                ; VOID ShowLastError(HWND hWnd);
                                                
0000050D: 55 89 E5                              proc ShowLastError hWnd
00000510: FF 15 64 30 40 00                     	invoke	GetLastError
00000516: 50 FF 75 08 E8 B1 FF FF FF            	stdcall ShowErrorMessage,[hWnd],eax
0000051F: C9 C2 04 00                           	ret
                                                endp
                                                
                                                
                                                ; just a test function and copyright message :)
00000523: 55 89 E5                              proc Copyright_emu8086 par1
00000526: B8 FF FF FF FF                        	mov eax, 0FFFFFFFFh
0000052B: 31 45 08                              	xor [par1], eax
0000052E: C9 C2 04 00                           	ret                          
00000532: 20 20 20 20 20 20 20 20 20 20 20 20   	db "                                                             "
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20                                    
0000056F: 20 20 20 20 20 20 20 20 20 20 20 20   	db "             Copyright emu8086.com        All rights reserved       "
          20 43 6F 70 79 72 69 67 68 74 20 65   
          6D 75 38 30 38 36 2E 63 6F 6D 20 20   
          20 20 20 20 20 20 41 6C 6C 20 72 69   
          67 68 74 73 20 72 65 73 65 72 76 65   
          64 20 20 20 20 20 20 20               
000005B3: 20 20 20 20 20 20 20 20 20 20 20 20   	db "                                                             "
          20 20 20 20 20 20 20 20 20 20 20 20   endp
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20 20 20 20 20 20 20 20 20 20 20 20   
          20                                    
                                                
                                                ; 32 bits (Long/DWORD) max value: 4,294,967,295 = ~ 4 GB of adressable memory....
                                                ; just a test fucntion
000005F0: 55 89 E5                              proc MicroAsm_T par1,par2              ; does PUSH BP   // MOV BP, SP  ->>  55 89 E5   (probably it's EBP).	 	
                                                    ;local tEDX:DWORD,   tEBX:DWORD
000005F3: 89 15 23 12 40 00                     	mov [tEDX], edx   ; jic...
000005F9: 89 1D 27 12 40 00                     	mov [tEBX], ebx
                                                     
                                                
                                                ; I love VB :)
                                                ;XOR ECX,ECX             ;set ecx to zero
                                                ;DIV ECX                 ;divide by zero, causing exception	
                                                	
                                                     
                                                     
000005FF: 31 C0                                     xor	eax, eax
                                                	
00000601: 8B 5D 08                              	mov ebx, [par1]      ; pointer to pointer... seems like [EBP + 8]
00000604: 8B 03                                 	mov eax, [ebx]
                                                	
00000606: 8B 5D 0C                              	mov	ebx, [par2]  ; [EBP + 12]
00000609: 8B 13                                 	mov	edx, [ebx]
                                                	
0000060B: 01 D0                                 	add	eax, edx    ; return is in EAX  (Long)
                                                	
0000060D: C7 03 FF 00 00 00                     	mov dword [ebx], 0FFh  ; modifying ByRef paremeter...
                                                	
00000613: 8B 15 23 12 40 00                     	mov edx, [tEDX]
00000619: 8B 1D 27 12 40 00                     	mov ebx, [tEBX]	  
                                                	
                                                	
                                                     	
0000061F: C9 C2 08 00                           	ret 
00000623: 00 00 00 00                           	tEDX dd 0
00000627: 00 00 00 00                           	tEBX dd 0
                                                endp
                                                          
                                                  
                                                  
                                                
                                                ;  
                                                ;  
                                                ;; NOT USED!
                                                ;; DD /6     FSAVE mem94     mem94 := 87 state
                                                ;proc MicroAsm_GETSTATE_94 param 
                                                ;	push ebx  ; jic
                                                ;	mov ebx, [param]   ; pointer to pointer
                                                ;    FSAVE [ebx]                      
                                                ;    pop ebx
                                                ;    xor eax, eax   ; return 
                                                ;	ret	
                                                ;endp
                                                ;
                                                ;
                                                ;; NOT USED!
                                                ;; DD /4     FRSTOR mem94    87 state := mem94
                                                ;proc MicroAsm_SETSTATE_94 param
                                                ;	push ebx  ; jic
                                                ;	mov ebx, [param]   ; pointer to pointer
                                                ;    FRSTOR [ebx]                      
                                                ;    pop ebx                    
                                                ;    xor eax, eax   ; return 
                                                ;	ret	
                                                ;endp
                                                ;  
                                                ;   
                                                ;   
                                                   
                                                
                                                
                                                
                                                
                                                ; DB E3     FINIT           initialize 87  
0000062B: 55 89 E5 83 EC 04                     proc MicroAsm_FINIT virtual87state_94bytes   
                                                    local tEBX:DWORD
00000631: 9C                                    	pushf
                                                	; cli      
                                                    
00000632: 89 5D FC                              	mov [tEBX], ebx ; jic
                                                	
                                                
00000635: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
0000063A: 9B DD 33                              	FSAVE [ebx] 
0000063D: 9B                                        fwait
                                                    
                                                
                                                ; I love VB :)
                                                ;XOR ECX,ECX             ;set ecx to zero
                                                ;DIV ECX                 ;divide by zero, causing exception	
                                                ; however this will cause a permament damage:
                                                ;  cli	
                                                    
                                                
                                                ; See also Chapter 5, Interrupt and Exception Handling, in the IA-32
                                                ; Intel Architecture Software Developer's Manual, Volume 3, 
                                                     
                                                    
                                                    ;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
                                                    
0000063E: 9B DB E3                                  FINIT  ; jic...
                                                    
                                                    ; don't know why it crashed around here a few times
                                                    ; (vb handling did not help), but now it works... 
                                                    ; probably it was because we declared Global/Public/Form variables instead of locals.
                                                    ; ' global declaration -> CRASH
                                                    ; ''''' Dim FPU_STATE_94bytes As fpu87_STATE
                                                                    
                                                                
                                                              	      
                                                	;mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00000641: DD 23                                 	FRSTOR [ebx]
00000643: 9B                                    	fwait
                                                	         
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                	      
00000644: 9B DB E3                              	FINIT            ; initialise virutual FPU
00000647: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;;;;;;;;;
                                                	 
                                                    ; get newly initialisied FPU state
00000648: 8B 5D 08                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
0000064B: 9B DD 33                              	FSAVE [ebx]  
0000064E: 9B                                    	fwait
                                                	
                                                	
0000064F: 9B DB E2                              	FCLEX
                                                	  
                                                          
                                                    ; restore....      
00000652: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00000657: DD 23                                 	FRSTOR [ebx] 
00000659: 9B                                        fwait      
                                                    
                                                    
0000065A: 8B 5D FC                              	mov ebx, [tEBX]    
                                                        
                                                    
0000065D: B8 07 00 00 00                            mov eax, 7  
                                                    
00000662: 9D                                        popf
                                                    
00000663: C9 C2 04 00                           	ret  
                                                endp
                                                	
                                                
                                                
                                                
                                                	    
                                                	
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                         
00000667: 55 89 E5 83 EC 08                     proc MicroAsm_D8_TAB lEA_TAB, mem4r, virtual87state_94bytes
                                                    local tEBX:DWORD, tESI:DWORD
0000066D: 9C                                    	pushf
                                                	;cli 
                                                	    
                                                    
0000066E: 89 5D F8                              	mov [tEBX], ebx ; jic 
00000671: 89 75 FC                              	mov [tESI], esi ; jic
                                                	   
                                                	
00000674: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00000679: 9B DD 33                              	FSAVE [ebx] 
0000067C: 9B                                        fwait
                                                           	      
0000067D: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00000680: DD 23                                 	FRSTOR [ebx]
00000682: 9B                                    	fwait
                                                	
00000683: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
00000686: 8B 75 0C                              	mov esi, [mem4r]        ; pointer to pointer   
                                                    
                                                      
00000689: 8B 03                                 	mov eax, [ebx] 	
0000068B: 83 F8 00                                  cmp eax, 0
0000068E: 74 25                                     je  D8_0  
00000690: 83 F8 01                                  cmp eax, 1
00000693: 74 27                                     je  D8_1
00000695: 83 F8 02                                  cmp eax, 2
00000698: 74 29                                     je  D8_2
0000069A: 83 F8 03                                  cmp eax, 3
0000069D: 74 2B                                     je  D8_3
0000069F: 83 F8 04                                  cmp eax, 4
000006A2: 74 2D                                     je  D8_4
000006A4: 83 F8 05                                  cmp eax, 5
000006A7: 74 2F                                     je  D8_5
000006A9: 83 F8 06                                  cmp eax, 6
000006AC: 74 31                                     je  D8_6  
000006AE: 83 F8 07                                  cmp eax, 7
000006B1: 74 33                                     je  D8_7     
000006B3: EB 38                                     jmp special_processing_D8
                                                D8_0:   
                                                ;	    D8 /0     FADD mem4r      0 := 0 + mem4r
000006B5: D8 06                                      FADD dword [esi]
000006B7: E9 8F 03 00 00                        jmp end_D8_TAB         
                                                D8_1:        
                                                ;	    D8 /1     FMUL mem4r      0 := 0 * mem4r
000006BC: D8 0E                                      FMUL dword [esi]
000006BE: E9 88 03 00 00                        jmp end_D8_TAB 
                                                D8_2:  
                                                ;	    D8 /2     FCOM mem4r      compare 0 - mem4r
000006C3: D8 16                                      FCOM dword [esi]
000006C5: E9 81 03 00 00                        jmp end_D8_TAB 
                                                D8_3:   
                                                ;	    D8 /3     FCOMP mem4r     compare 0 - mem4r, pop
000006CA: D8 1E                                      FCOMP dword [esi]
000006CC: E9 7A 03 00 00                        jmp end_D8_TAB 
                                                D8_4:    
                                                ;	    D8 /4     FSUB mem4r      0 := 0 - mem4r
000006D1: D8 26                                      FSUB dword [esi]
000006D3: E9 73 03 00 00                        jmp end_D8_TAB 
                                                D8_5:   
                                                ;	    D8 /5     FSUBR mem4r     0 := mem4r - 0
000006D8: D8 2E                                      FSUBR dword [esi] 
000006DA: E9 6C 03 00 00                        jmp end_D8_TAB 
                                                D8_6:  
                                                ;	    D8 /6     FDIV mem4r      0 := 0 / mem4r
000006DF: D8 36                                      FDIV dword [esi] 
000006E1: E9 65 03 00 00                        jmp end_D8_TAB 
                                                D8_7: 
                                                ;	    D8 /7     FDIVR mem4r     0 := mem4r / 0 
000006E6: D8 3E                                      FDIVR dword [esi]  
000006E8: E9 5E 03 00 00                        jmp end_D8_TAB 
                                                 
                                                 
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_D8:        
000006ED: 3D C8 00 00 00                            cmp eax, 0C8h
000006F2: 72 47                                     jb  D8_C0_i  
000006F4: 3D D0 00 00 00                            cmp eax, 0D0h
000006F9: 0F 82 A5 00 00 00                         jb  D8_C8_i  
000006FF: 3D D8 00 00 00                            cmp eax, 0D8h
00000704: 0F 82 03 01 00 00                         jb  D8_D0_i  
0000070A: 3D E0 00 00 00                            cmp eax, 0E0h
0000070F: 0F 82 61 01 00 00                         jb  D8_D8_i  
00000715: 3D E8 00 00 00                            cmp eax, 0E8h
0000071A: 0F 82 BF 01 00 00                         jb  D8_E0_i  
00000720: 3D F0 00 00 00                            cmp eax, 0F0h
00000725: 0F 82 1D 02 00 00                         jb  D8_E8_i  
0000072B: 3D F8 00 00 00                            cmp eax, 0F8h
00000730: 0F 82 7B 02 00 00                         jb  D8_F0_i 
00000736: E9 C4 02 00 00                            jmp D8_F8_i     ; >= F8 
                                                                
                                                        
                                                D8_C0_i:
                                                ;	    D8 C0+i   FADD 0,i        0 := i + 0  
0000073B: 2D C0 00 00 00                                SUB eax, 0C0h   ; get index
00000740: 74 2A                                         jZ  FADD_0_0
00000742: 83 F8 01                                      cmp eax, 1
00000745: 74 2C                                         je  FADD_0_1
00000747: 83 F8 02                                      cmp eax, 2
0000074A: 74 2E                                         je  FADD_0_2
0000074C: 83 F8 03                                      cmp eax, 3
0000074F: 74 30                                         je  FADD_0_3
00000751: 83 F8 04                                      cmp eax, 4
00000754: 74 32                                         je  FADD_0_4
00000756: 83 F8 05                                      cmp eax, 5
00000759: 74 34                                         je  FADD_0_5
0000075B: 83 F8 06                                      cmp eax, 6
0000075E: 74 36                                         je  FADD_0_6
00000760: 83 F8 07                                      cmp eax, 7
00000763: 74 38                                         je  FADD_0_7        
00000765: D9 D0                                         fnop            ; wrong index
00000767: E9 DF 02 00 00                                jmp end_D8_SP  
                                                FADD_0_0:          
0000076C: D8 C0                                         FADD st0, st0 
0000076E: E9 D8 02 00 00                                jmp end_D8_SP
                                                FADD_0_1:                     
00000773: D8 C1                                         FADD st0, st1
00000775: E9 D1 02 00 00                                jmp end_D8_SP
                                                FADD_0_2:          
0000077A: D8 C2                                         FADD st0, st2  
0000077C: E9 CA 02 00 00                                jmp end_D8_SP
                                                FADD_0_3:        
00000781: D8 C3                                         FADD st0, st3                  
00000783: E9 C3 02 00 00                                jmp end_D8_SP
                                                FADD_0_4:        
00000788: D8 C4                                         FADD st0, st4
0000078A: E9 BC 02 00 00                                jmp end_D8_SP
                                                FADD_0_5:        
0000078F: D8 C5                                         FADD st0, st5
00000791: E9 B5 02 00 00                                jmp end_D8_SP
                                                FADD_0_6:        
00000796: D8 C6                                         FADD st0, st6
00000798: E9 AE 02 00 00                                jmp end_D8_SP
                                                FADD_0_7:        
0000079D: D8 C7                                         FADD st0, st7
0000079F: E9 A7 02 00 00                                jmp end_D8_SP 
                                                        
                                                        
                                                D8_C8_i:
                                                ;	    D8 C8+i   FMUL 0,i        0 := 0 * i
000007A4: 2D C8 00 00 00                                SUB eax, 0C8h   ; get index
000007A9: 74 2A                                         jZ  FMUL_0_0
000007AB: 83 F8 01                                      cmp eax, 1
000007AE: 74 2C                                         je  FMUL_0_1
000007B0: 83 F8 02                                      cmp eax, 2
000007B3: 74 2E                                         je  FMUL_0_2
000007B5: 83 F8 03                                      cmp eax, 3
000007B8: 74 30                                         je  FMUL_0_3
000007BA: 83 F8 04                                      cmp eax, 4
000007BD: 74 32                                         je  FMUL_0_4
000007BF: 83 F8 05                                      cmp eax, 5
000007C2: 74 34                                         je  FMUL_0_5
000007C4: 83 F8 06                                      cmp eax, 6
000007C7: 74 36                                         je  FMUL_0_6
000007C9: 83 F8 07                                      cmp eax, 7
000007CC: 74 38                                         je  FMUL_0_7        
000007CE: D9 D0                                         fnop            ; wrong index
000007D0: E9 76 02 00 00                                jmp end_D8_SP  
                                                FMUL_0_0:          
000007D5: D8 C8                                         FMUL st0, st0 
000007D7: E9 6F 02 00 00                                jmp end_D8_SP
                                                FMUL_0_1:                     
000007DC: D8 C9                                         FMUL st0, st1
000007DE: E9 68 02 00 00                                jmp end_D8_SP
                                                FMUL_0_2:          
000007E3: D8 CA                                         FMUL st0, st2  
000007E5: E9 61 02 00 00                                jmp end_D8_SP
                                                FMUL_0_3:        
000007EA: D8 CB                                         FMUL st0, st3                  
000007EC: E9 5A 02 00 00                                jmp end_D8_SP
                                                FMUL_0_4:        
000007F1: D8 CC                                         FMUL st0, st4
000007F3: E9 53 02 00 00                                jmp end_D8_SP
                                                FMUL_0_5:        
000007F8: D8 CD                                         FMUL st0, st5
000007FA: E9 4C 02 00 00                                jmp end_D8_SP
                                                FMUL_0_6:        
000007FF: D8 CE                                         FMUL st0, st6
00000801: E9 45 02 00 00                                jmp end_D8_SP
                                                FMUL_0_7:        
00000806: D8 CF                                         FMUL st0, st7
00000808: E9 3E 02 00 00                                jmp end_D8_SP 
                                                
                                                
                                                               
                                                D8_D0_i:               
                                                ;	    D8 D0+i   FCOM 0,i        compare 0 - i 
0000080D: 2D D0 00 00 00                                SUB eax, 0D0h   ; get index
00000812: 74 2A                                         jZ  FCOM_0_0
00000814: 83 F8 01                                      cmp eax, 1
00000817: 74 2C                                         je  FCOM_0_1
00000819: 83 F8 02                                      cmp eax, 2
0000081C: 74 2E                                         je  FCOM_0_2
0000081E: 83 F8 03                                      cmp eax, 3
00000821: 74 30                                         je  FCOM_0_3
00000823: 83 F8 04                                      cmp eax, 4
00000826: 74 32                                         je  FCOM_0_4
00000828: 83 F8 05                                      cmp eax, 5
0000082B: 74 34                                         je  FCOM_0_5
0000082D: 83 F8 06                                      cmp eax, 6
00000830: 74 36                                         je  FCOM_0_6
00000832: 83 F8 07                                      cmp eax, 7
00000835: 74 38                                         je  FCOM_0_7        
00000837: D9 D0                                         fnop            ; wrong index
00000839: E9 0D 02 00 00                                jmp end_D8_SP  
                                                FCOM_0_0:          
0000083E: D8 D0                                         FCOM st0 
00000840: E9 06 02 00 00                                jmp end_D8_SP
                                                FCOM_0_1:                     
00000845: D8 D1                                         FCOM st1
00000847: E9 FF 01 00 00                                jmp end_D8_SP
                                                FCOM_0_2:          
0000084C: D8 D2                                         FCOM st2  
0000084E: E9 F8 01 00 00                                jmp end_D8_SP
                                                FCOM_0_3:        
00000853: D8 D3                                         FCOM st3                  
00000855: E9 F1 01 00 00                                jmp end_D8_SP
                                                FCOM_0_4:        
0000085A: D8 D4                                         FCOM st4
0000085C: E9 EA 01 00 00                                jmp end_D8_SP
                                                FCOM_0_5:        
00000861: D8 D5                                         FCOM st5
00000863: E9 E3 01 00 00                                jmp end_D8_SP
                                                FCOM_0_6:        
00000868: D8 D6                                         FCOM st6
0000086A: E9 DC 01 00 00                                jmp end_D8_SP
                                                FCOM_0_7:        
0000086F: D8 D7                                         FCOM st7
00000871: E9 D5 01 00 00                                jmp end_D8_SP
                                                
                                                
                                                        
                                                D8_D8_i:        
                                                ;	    D8 D8+i   FCOMP 0,i       compare 0 - i, pop
00000876: 2D D8 00 00 00                                SUB eax, 0D8h   ; get index
0000087B: 74 2A                                         jZ  FCOMP_0_0
0000087D: 83 F8 01                                      cmp eax, 1
00000880: 74 2C                                         je  FCOMP_0_1
00000882: 83 F8 02                                      cmp eax, 2
00000885: 74 2E                                         je  FCOMP_0_2
00000887: 83 F8 03                                      cmp eax, 3
0000088A: 74 30                                         je  FCOMP_0_3
0000088C: 83 F8 04                                      cmp eax, 4
0000088F: 74 32                                         je  FCOMP_0_4
00000891: 83 F8 05                                      cmp eax, 5
00000894: 74 34                                         je  FCOMP_0_5
00000896: 83 F8 06                                      cmp eax, 6
00000899: 74 36                                         je  FCOMP_0_6
0000089B: 83 F8 07                                      cmp eax, 7
0000089E: 74 38                                         je  FCOMP_0_7        
000008A0: D9 D0                                         fnop            ; wrong index
000008A2: E9 A4 01 00 00                                jmp end_D8_SP  
                                                FCOMP_0_0:          
000008A7: D8 D8                                         FCOMP st0 
000008A9: E9 9D 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_1:                     
000008AE: D8 D9                                         FCOMP st1
000008B0: E9 96 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_2:          
000008B5: D8 DA                                         FCOMP st2  
000008B7: E9 8F 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_3:        
000008BC: D8 DB                                         FCOMP st3                  
000008BE: E9 88 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_4:        
000008C3: D8 DC                                         FCOMP st4
000008C5: E9 81 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_5:        
000008CA: D8 DD                                         FCOMP st5
000008CC: E9 7A 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_6:        
000008D1: D8 DE                                         FCOMP st6
000008D3: E9 73 01 00 00                                jmp end_D8_SP
                                                FCOMP_0_7:        
000008D8: D8 DF                                         FCOMP st7
000008DA: E9 6C 01 00 00                                jmp end_D8_SP
                                                
                                                
                                                
                                                D8_E0_i:
                                                ;	    D8 E0+i   FSUB 0,i        0 := 0 - i 
000008DF: 2D E0 00 00 00                                SUB eax, 0E0h   ; get index
000008E4: 74 2A                                         jZ  FSUB_0_0
000008E6: 83 F8 01                                      cmp eax, 1
000008E9: 74 2C                                         je  FSUB_0_1
000008EB: 83 F8 02                                      cmp eax, 2
000008EE: 74 2E                                         je  FSUB_0_2
000008F0: 83 F8 03                                      cmp eax, 3
000008F3: 74 30                                         je  FSUB_0_3
000008F5: 83 F8 04                                      cmp eax, 4
000008F8: 74 32                                         je  FSUB_0_4
000008FA: 83 F8 05                                      cmp eax, 5
000008FD: 74 34                                         je  FSUB_0_5
000008FF: 83 F8 06                                      cmp eax, 6
00000902: 74 36                                         je  FSUB_0_6
00000904: 83 F8 07                                      cmp eax, 7
00000907: 74 38                                         je  FSUB_0_7        
00000909: D9 D0                                         fnop            ; wrong index
0000090B: E9 3B 01 00 00                                jmp end_D8_SP  
                                                FSUB_0_0:          
00000910: D8 E0                                         FSUB st0, st0 
00000912: E9 34 01 00 00                                jmp end_D8_SP
                                                FSUB_0_1:                     
00000917: D8 E1                                         FSUB st0, st1
00000919: E9 2D 01 00 00                                jmp end_D8_SP
                                                FSUB_0_2:          
0000091E: D8 E2                                         FSUB st0, st2  
00000920: E9 26 01 00 00                                jmp end_D8_SP
                                                FSUB_0_3:        
00000925: D8 E3                                         FSUB st0, st3                  
00000927: E9 1F 01 00 00                                jmp end_D8_SP
                                                FSUB_0_4:        
0000092C: D8 E4                                         FSUB st0, st4
0000092E: E9 18 01 00 00                                jmp end_D8_SP
                                                FSUB_0_5:        
00000933: D8 E5                                         FSUB st0, st5
00000935: E9 11 01 00 00                                jmp end_D8_SP
                                                FSUB_0_6:        
0000093A: D8 E6                                         FSUB st0, st6
0000093C: E9 0A 01 00 00                                jmp end_D8_SP
                                                FSUB_0_7:        
00000941: D8 E7                                         FSUB st0, st7
00000943: E9 03 01 00 00                                jmp end_D8_SP
                                                        
                                                        
                                                        
                                                D8_E8_i:
                                                ;	    D8 E8+i   FSUBR 0,i       0 := i - 0 
00000948: 2D E8 00 00 00                                SUB eax, 0E8h   ; get index
0000094D: 74 2A                                         jZ  FSUBR_0_0
0000094F: 83 F8 01                                      cmp eax, 1
00000952: 74 2C                                         je  FSUBR_0_1
00000954: 83 F8 02                                      cmp eax, 2
00000957: 74 2E                                         je  FSUBR_0_2
00000959: 83 F8 03                                      cmp eax, 3
0000095C: 74 30                                         je  FSUBR_0_3
0000095E: 83 F8 04                                      cmp eax, 4
00000961: 74 32                                         je  FSUBR_0_4
00000963: 83 F8 05                                      cmp eax, 5
00000966: 74 34                                         je  FSUBR_0_5
00000968: 83 F8 06                                      cmp eax, 6
0000096B: 74 36                                         je  FSUBR_0_6
0000096D: 83 F8 07                                      cmp eax, 7
00000970: 74 38                                         je  FSUBR_0_7        
00000972: D9 D0                                         fnop            ; wrong index
00000974: E9 D2 00 00 00                                jmp end_D8_SP  
                                                FSUBR_0_0:          
00000979: D8 E8                                         FSUBR st0, st0 
0000097B: E9 CB 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_1:                     
00000980: D8 E9                                         FSUBR st0, st1
00000982: E9 C4 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_2:          
00000987: D8 EA                                         FSUBR st0, st2  
00000989: E9 BD 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_3:        
0000098E: D8 EB                                         FSUBR st0, st3                  
00000990: E9 B6 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_4:        
00000995: D8 EC                                         FSUBR st0, st4
00000997: E9 AF 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_5:        
0000099C: D8 ED                                         FSUBR st0, st5
0000099E: E9 A8 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_6:        
000009A3: D8 EE                                         FSUBR st0, st6
000009A5: E9 A1 00 00 00                                jmp end_D8_SP
                                                FSUBR_0_7:        
000009AA: D8 EF                                         FSUBR st0, st7
000009AC: E9 9A 00 00 00                                jmp end_D8_SP
                                                        
                                                D8_F0_i:
                                                ;	    D8 F0+i   FDIV 0,i        0 := 0 / i
000009B1: 2D F0 00 00 00                                SUB eax, 0F0h   ; get index
000009B6: 74 27                                         jZ  FDIV_0_0
000009B8: 83 F8 01                                      cmp eax, 1
000009BB: 74 26                                         je  FDIV_0_1
000009BD: 83 F8 02                                      cmp eax, 2
000009C0: 74 25                                         je  FDIV_0_2
000009C2: 83 F8 03                                      cmp eax, 3
000009C5: 74 24                                         je  FDIV_0_3
000009C7: 83 F8 04                                      cmp eax, 4
000009CA: 74 23                                         je  FDIV_0_4
000009CC: 83 F8 05                                      cmp eax, 5
000009CF: 74 22                                         je  FDIV_0_5
000009D1: 83 F8 06                                      cmp eax, 6
000009D4: 74 21                                         je  FDIV_0_6
000009D6: 83 F8 07                                      cmp eax, 7
000009D9: 74 20                                         je  FDIV_0_7        
000009DB: D9 D0                                         fnop            ; wrong index
000009DD: EB 6C                                         jmp end_D8_SP  
                                                FDIV_0_0:          
000009DF: D8 F0                                         FDIV st0, st0 
000009E1: EB 68                                         jmp end_D8_SP
                                                FDIV_0_1:                     
000009E3: D8 F1                                         FDIV st0, st1
000009E5: EB 64                                         jmp end_D8_SP
                                                FDIV_0_2:          
000009E7: D8 F2                                         FDIV st0, st2  
000009E9: EB 60                                         jmp end_D8_SP
                                                FDIV_0_3:        
000009EB: D8 F3                                         FDIV st0, st3                  
000009ED: EB 5C                                         jmp end_D8_SP
                                                FDIV_0_4:        
000009EF: D8 F4                                         FDIV st0, st4
000009F1: EB 58                                         jmp end_D8_SP
                                                FDIV_0_5:        
000009F3: D8 F5                                         FDIV st0, st5
000009F5: EB 54                                         jmp end_D8_SP
                                                FDIV_0_6:        
000009F7: D8 F6                                         FDIV st0, st6
000009F9: EB 50                                         jmp end_D8_SP
                                                FDIV_0_7:        
000009FB: D8 F7                                         FDIV st0, st7
000009FD: EB 4C                                         jmp end_D8_SP  
                                                        
                                                        
                                                D8_F8_i:
                                                ;	    D8 F8+i   FDIVR 0,i       0 := i / 0
000009FF: 2D F8 00 00 00                                SUB eax, 0F8h   ; get index
00000A04: 74 27                                         jZ  FDIVR_0_0
00000A06: 83 F8 01                                      cmp eax, 1
00000A09: 74 26                                         je  FDIVR_0_1
00000A0B: 83 F8 02                                      cmp eax, 2
00000A0E: 74 25                                         je  FDIVR_0_2
00000A10: 83 F8 03                                      cmp eax, 3
00000A13: 74 24                                         je  FDIVR_0_3
00000A15: 83 F8 04                                      cmp eax, 4
00000A18: 74 23                                         je  FDIVR_0_4
00000A1A: 83 F8 05                                      cmp eax, 5
00000A1D: 74 22                                         je  FDIVR_0_5
00000A1F: 83 F8 06                                      cmp eax, 6
00000A22: 74 21                                         je  FDIVR_0_6
00000A24: 83 F8 07                                      cmp eax, 7
00000A27: 74 20                                         je  FDIVR_0_7        
00000A29: D9 D0                                         fnop            ; wrong index
00000A2B: EB 1E                                         jmp end_D8_SP  
                                                FDIVR_0_0:          
00000A2D: D8 F8                                         FDIVR st0, st0 
00000A2F: EB 1A                                         jmp end_D8_SP
                                                FDIVR_0_1:                     
00000A31: D8 F9                                         FDIVR st0, st1
00000A33: EB 16                                         jmp end_D8_SP
                                                FDIVR_0_2:          
00000A35: D8 FA                                         FDIVR st0, st2  
00000A37: EB 12                                         jmp end_D8_SP
                                                FDIVR_0_3:        
00000A39: D8 FB                                         FDIVR st0, st3                  
00000A3B: EB 0E                                         jmp end_D8_SP
                                                FDIVR_0_4:        
00000A3D: D8 FC                                         FDIVR st0, st4
00000A3F: EB 0A                                         jmp end_D8_SP
                                                FDIVR_0_5:        
00000A41: D8 FD                                         FDIVR st0, st5
00000A43: EB 06                                         jmp end_D8_SP
                                                FDIVR_0_6:        
00000A45: D8 FE                                         FDIVR st0, st6
00000A47: EB 02                                         jmp end_D8_SP
                                                FDIVR_0_7:        
00000A49: D8 FF                                         FDIVR st0, st7
                                                        ; NR ; jmp end_D8_SP
                                                
                                                
                                                    
                                                end_D8_SP:     
                                                end_D8_TAB:	 
00000A4B: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
00000A4E: 9B DD 33                              	FSAVE [ebx]    
00000A51: 9B                                        fwait
                                                    
                                                    
00000A52: 9B DB E2                                  FCLEX 
                                                    
                                                          
                                                    ; restore....      
00000A55: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00000A5A: DD 23                                 	FRSTOR [ebx] 
00000A5C: 9B                                        fwait  
                                                     
00000A5D: 8B 5D F8                                  mov ebx, [tEBX]
00000A60: 8B 75 FC                              	mov esi, [tESI]
                                                	
00000A63: 9D                                    	popf
                                                	
                                                	; return lEA_TAB (as it was passed to the function)
                                                	;xor eax, eax     ; return
00000A64: C9 C2 0C 00                           	ret  
                                                endp
                                                
                                                          
                                                
                                                
                                                
                                                
                                                
00000A68: 55 89 E5 83 EC 10                     proc MicroAsm_D9_TAB lEA_TAB, mem4r, mem14, mem2i, virtual87state_94bytes
                                                    local tEBX:DWORD,  tESI:DWORD,   tEDX:DWORD,  tECX:DWORD 
00000A6E: 9C                                    	pushf
                                                	;cli 
                                                	    
                                                    
                                                    ; store                                                                  
00000A6F: 89 5D F0                                  mov [tEBX], ebx
00000A72: 89 75 F4                                  mov [tESI], esi
00000A75: 89 55 F8                                  mov [tEDX], edx
00000A78: 89 4D FC                                  mov [tECX], ecx
                                                	
                                                	; FPU ->
00000A7B: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00000A80: 9B DD 33                              	FSAVE [ebx] 
00000A83: 9B                                        fwait
                                                     
                                                    ; FPU <-       	      
00000A84: 8B 5D 18                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00000A87: DD 23                                 	FRSTOR [ebx]
00000A89: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;; 
                                                	 
00000A8A: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
00000A8D: 8B 75 0C                              	mov esi, [mem4r]        ; pointer to pointer   
00000A90: 8B 55 10                              	mov edx, [mem14]        ; pointer to pointer
00000A93: 8B 4D 14                              	mov ecx, [mem2i]        ; pointer to pointer
                                                      
00000A96: 8B 03                                 	mov eax, [ebx] 	
00000A98: 83 F8 00                                  cmp eax, 0
00000A9B: 74 25                                     je  D9_0  
00000A9D: 83 F8 01                                  cmp eax, 1
00000AA0: 74 27                                     je  D9_1
00000AA2: 83 F8 02                                  cmp eax, 2
00000AA5: 74 29                                     je  D9_2
00000AA7: 83 F8 03                                  cmp eax, 3
00000AAA: 74 2B                                     je  D9_3
00000AAC: 83 F8 04                                  cmp eax, 4
00000AAF: 74 2D                                     je  D9_4
00000AB1: 83 F8 05                                  cmp eax, 5
00000AB4: 74 2F                                     je  D9_5
00000AB6: 83 F8 06                                  cmp eax, 6
00000AB9: 74 31                                     je  D9_6  
00000ABB: 83 F8 07                                  cmp eax, 7
00000ABE: 74 34                                     je  D9_7     
00000AC0: EB 3A                                     jmp special_processing_D9
                                                D9_0:   
                                                ;	    D9 /0     FLD mem4r       push, 0 := mem4r
00000AC2: D9 06                                      FLD dword [esi]
00000AC4: E9 03 04 00 00                        jmp end_D9_TAB         
                                                D9_1:
                                                ;       RESERVED  
00000AC9: D9 D0                                      FNOP
00000ACB: E9 FC 03 00 00                        jmp end_D9_TAB 
                                                D9_2:     
                                                ;	    D9 /2     FST mem4r       mem4r := 0
00000AD0: D9 16                                      FST dword [esi]
00000AD2: E9 F5 03 00 00                        jmp end_D9_TAB 
                                                D9_3:       
                                                ;	    D9 /3     FSTP mem4r      mem4r := 0, pop
00000AD7: D9 1E                                      FSTP dword [esi]
00000AD9: E9 EE 03 00 00                        jmp end_D9_TAB 
                                                D9_4:   
                                                ;	    D9 /4     FLDENV mem14    environment := mem14
00000ADE: D9 22                                      FLDENV [edx]   ; 14 bit pointer
00000AE0: E9 E7 03 00 00                        jmp end_D9_TAB 
                                                D9_5:     
                                                ;	    D9 /5     FLDCW mem2i     control word := mem2i
00000AE5: D9 29                                      FLDCW word [ecx] 
00000AE7: E9 E0 03 00 00                        jmp end_D9_TAB 
                                                D9_6:         
                                                ;	    D9 /6     FSTENV mem14    mem14 := environment
00000AEC: 9B D9 32                                   FSTENV [edx]   ; 14 bit pointer
00000AEF: E9 D8 03 00 00                        jmp end_D9_TAB 
                                                D9_7:  
                                                ;	    D9 /7     FSTCW mem2i     mem2i := control word
00000AF4: 9B D9 39                                   FSTCW word [ecx]  
00000AF7: E9 D0 03 00 00                        jmp end_D9_TAB
                                                
                                                    ;;;;;;;;;;;;;;;;;;;; special processing ;;;;;;;;;;;;;;
                                                    
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_D9:        
00000AFC: 3D C8 00 00 00                            cmp eax, 0C8h
00000B01: 0F 82 0A 02 00 00                         jb  D9_C0_i  
00000B07: 3D D0 00 00 00                            cmp eax, 0D0h
00000B0C: 0F 82 68 02 00 00                         jb  D9_C8_i 
                                                     
00000B12: 3D D0 00 00 00                            cmp eax, 0D0h
00000B17: 0F 84 C6 02 00 00                         je  D9_D0 
00000B1D: 3D D1 00 00 00                            cmp eax, 0D1h
00000B22: 0F 84 C2 02 00 00                         je  D9_D1 
00000B28: 3D D2 00 00 00                            cmp eax, 0D2h
00000B2D: 0F 84 BC 02 00 00                         je  D9_D2 
00000B33: 3D D3 00 00 00                            cmp eax, 0D3h
00000B38: 0F 84 B8 02 00 00                         je  D9_D3 
00000B3E: 3D D4 00 00 00                            cmp eax, 0D4h
00000B43: 0F 84 B4 02 00 00                         je  D9_D4 
00000B49: 3D D5 00 00 00                            cmp eax, 0D5h
00000B4E: 0F 84 B0 02 00 00                         je  D9_D5 
00000B54: 3D D6 00 00 00                            cmp eax, 0D6h
00000B59: 0F 84 AC 02 00 00                         je  D9_D6 
00000B5F: 3D D7 00 00 00                            cmp eax, 0D7h
00000B64: 0F 84 A8 02 00 00                         je  D9_D7 
00000B6A: 3D D8 00 00 00                            cmp eax, 0D8h
00000B6F: 0F 84 A4 02 00 00                         je  D9_D8 
00000B75: 3D D9 00 00 00                            cmp eax, 0D9h
00000B7A: 0F 84 A0 02 00 00                         je  D9_D9 
00000B80: 3D DA 00 00 00                            cmp eax, 0DAh
00000B85: 0F 84 9C 02 00 00                         je  D9_DA 
00000B8B: 3D DB 00 00 00                            cmp eax, 0DBh
00000B90: 0F 84 98 02 00 00                         je  D9_DB 
00000B96: 3D DC 00 00 00                            cmp eax, 0DCh
00000B9B: 0F 84 94 02 00 00                         je  D9_DC 
00000BA1: 3D DD 00 00 00                            cmp eax, 0DDh
00000BA6: 0F 84 90 02 00 00                         je  D9_DD 
00000BAC: 3D DE 00 00 00                            cmp eax, 0DEh
00000BB1: 0F 84 8C 02 00 00                         je  D9_DE 
00000BB7: 3D DF 00 00 00                            cmp eax, 0DFh
00000BBC: 0F 84 88 02 00 00                         je  D9_DF 
00000BC2: 3D E0 00 00 00                            cmp eax, 0E0h
00000BC7: 0F 84 81 02 00 00                         je  D9_E0 
00000BCD: 3D E1 00 00 00                            cmp eax, 0E1h
00000BD2: 0F 84 7A 02 00 00                         je  D9_E1 
00000BD8: 3D E2 00 00 00                            cmp eax, 0E2h
00000BDD: 0F 84 73 02 00 00                         je  D9_E2 
00000BE3: 3D E3 00 00 00                            cmp eax, 0E3h
00000BE8: 0F 84 6C 02 00 00                         je  D9_E3 
00000BEE: 3D E4 00 00 00                            cmp eax, 0E4h
00000BF3: 0F 84 65 02 00 00                         je  D9_E4 
00000BF9: 3D E5 00 00 00                            cmp eax, 0E5h
00000BFE: 0F 84 5E 02 00 00                         je  D9_E5 
00000C04: 3D E6 00 00 00                            cmp eax, 0E6h
00000C09: 0F 84 57 02 00 00                         je  D9_E6 
00000C0F: 3D E7 00 00 00                            cmp eax, 0E7h
00000C14: 0F 84 50 02 00 00                         je  D9_E7 
00000C1A: 3D E8 00 00 00                            cmp eax, 0E8h
00000C1F: 0F 84 49 02 00 00                         je  D9_E8 
00000C25: 3D E9 00 00 00                            cmp eax, 0E9h
00000C2A: 0F 84 42 02 00 00                         je  D9_E9 
00000C30: 3D EA 00 00 00                            cmp eax, 0EAh
00000C35: 0F 84 3B 02 00 00                         je  D9_EA 
00000C3B: 3D EB 00 00 00                            cmp eax, 0EBh
00000C40: 0F 84 34 02 00 00                         je  D9_EB 
00000C46: 3D EC 00 00 00                            cmp eax, 0ECh
00000C4B: 0F 84 2D 02 00 00                         je  D9_EC 
00000C51: 3D ED 00 00 00                            cmp eax, 0EDh
00000C56: 0F 84 26 02 00 00                         je  D9_ED 
00000C5C: 3D EE 00 00 00                            cmp eax, 0EEh
00000C61: 0F 84 1F 02 00 00                         je  D9_EE 
00000C67: 3D F0 00 00 00                            cmp eax, 0F0h
00000C6C: 0F 84 1C 02 00 00                         je  D9_F0 
00000C72: 3D F1 00 00 00                            cmp eax, 0F1h
00000C77: 0F 84 15 02 00 00                         je  D9_F1 
00000C7D: 3D F2 00 00 00                            cmp eax, 0F2h
00000C82: 0F 84 0E 02 00 00                         je  D9_F2 
00000C88: 3D F3 00 00 00                            cmp eax, 0F3h
00000C8D: 0F 84 07 02 00 00                         je  D9_F3 
00000C93: 3D F4 00 00 00                            cmp eax, 0F4h
00000C98: 0F 84 00 02 00 00                         je  D9_F4 
00000C9E: 3D F5 00 00 00                            cmp eax, 0F5h
00000CA3: 0F 84 F9 01 00 00                         je  D9_F5 
00000CA9: 3D F6 00 00 00                            cmp eax, 0F6h
00000CAE: 0F 84 F2 01 00 00                         je  D9_F6 
00000CB4: 3D F7 00 00 00                            cmp eax, 0F7h
00000CB9: 0F 84 EB 01 00 00                         je  D9_F7 
00000CBF: 3D F8 00 00 00                            cmp eax, 0F8h
00000CC4: 0F 84 E4 01 00 00                         je  D9_F8 
00000CCA: 3D F9 00 00 00                            cmp eax, 0F9h
00000CCF: 0F 84 DD 01 00 00                         je  D9_F9 
00000CD5: 3D FA 00 00 00                            cmp eax, 0FAh
00000CDA: 0F 84 D6 01 00 00                         je  D9_FA 
00000CE0: 3D FB 00 00 00                            cmp eax, 0FBh
00000CE5: 0F 84 CF 01 00 00                         je  D9_FB 
00000CEB: 3D FC 00 00 00                            cmp eax, 0FCh
00000CF0: 0F 84 C8 01 00 00                         je  D9_FC 
00000CF6: 3D FD 00 00 00                            cmp eax, 0FDh
00000CFB: 0F 84 C1 01 00 00                         je  D9_FD 
00000D01: 3D FE 00 00 00                            cmp eax, 0FEh
00000D06: 0F 84 BA 01 00 00                         je  D9_FE      
00000D0C: E9 B9 01 00 00                            jmp D9_FF     ; == FF
                                                                
                                                        
                                                D9_C0_i:
                                                ;	    D9 C0+i   FLD i           push, 0 := old i 
00000D11: 2D C0 00 00 00                                SUB eax, 0C0h   ; get index
00000D16: 74 2A                                         jZ  FLD_0
00000D18: 83 F8 01                                      cmp eax, 1
00000D1B: 74 2C                                         je  FLD_1
00000D1D: 83 F8 02                                      cmp eax, 2
00000D20: 74 2E                                         je  FLD_2
00000D22: 83 F8 03                                      cmp eax, 3
00000D25: 74 30                                         je  FLD_3
00000D27: 83 F8 04                                      cmp eax, 4
00000D2A: 74 32                                         je  FLD_4
00000D2C: 83 F8 05                                      cmp eax, 5
00000D2F: 74 34                                         je  FLD_5
00000D31: 83 F8 06                                      cmp eax, 6
00000D34: 74 36                                         je  FLD_6
00000D36: 83 F8 07                                      cmp eax, 7
00000D39: 74 38                                         je  FLD_7        
00000D3B: D9 D0                                         fnop            ; wrong index
00000D3D: E9 8A 01 00 00                                jmp end_D9_SP  
                                                FLD_0:          
00000D42: D9 C0                                         FLD st0 
00000D44: E9 83 01 00 00                                jmp end_D9_SP
                                                FLD_1:                     
00000D49: D9 C1                                         FLD st1
00000D4B: E9 7C 01 00 00                                jmp end_D9_SP
                                                FLD_2:          
00000D50: D9 C2                                         FLD st2  
00000D52: E9 75 01 00 00                                jmp end_D9_SP
                                                FLD_3:        
00000D57: D9 C3                                         FLD st3                  
00000D59: E9 6E 01 00 00                                jmp end_D9_SP
                                                FLD_4:        
00000D5E: D9 C4                                         FLD st4
00000D60: E9 67 01 00 00                                jmp end_D9_SP
                                                FLD_5:        
00000D65: D9 C5                                         FLD st5
00000D67: E9 60 01 00 00                                jmp end_D9_SP
                                                FLD_6:        
00000D6C: D9 C6                                         FLD st6
00000D6E: E9 59 01 00 00                                jmp end_D9_SP
                                                FLD_7:        
00000D73: D9 C7                                         FLD st7
00000D75: E9 52 01 00 00                                jmp end_D9_SP 
                                                        
                                                        
                                                D9_C8_i:
                                                ;	    D9 C8+i   FXCH 0,i        exchange 0 and i
00000D7A: 2D C8 00 00 00                                SUB eax, 0C8h   ; get index
00000D7F: 74 2A                                         jZ  FXCH_0_0
00000D81: 83 F8 01                                      cmp eax, 1
00000D84: 74 2C                                         je  FXCH_0_1
00000D86: 83 F8 02                                      cmp eax, 2
00000D89: 74 2E                                         je  FXCH_0_2
00000D8B: 83 F8 03                                      cmp eax, 3
00000D8E: 74 30                                         je  FXCH_0_3
00000D90: 83 F8 04                                      cmp eax, 4
00000D93: 74 32                                         je  FXCH_0_4
00000D95: 83 F8 05                                      cmp eax, 5
00000D98: 74 34                                         je  FXCH_0_5
00000D9A: 83 F8 06                                      cmp eax, 6
00000D9D: 74 36                                         je  FXCH_0_6
00000D9F: 83 F8 07                                      cmp eax, 7
00000DA2: 74 38                                         je  FXCH_0_7        
00000DA4: D9 D0                                         fnop            ; wrong index
00000DA6: E9 21 01 00 00                                jmp end_D9_SP  
                                                FXCH_0_0:          
00000DAB: D9 C8                                         FXCH st0 
00000DAD: E9 1A 01 00 00                                jmp end_D9_SP
                                                FXCH_0_1:                     
00000DB2: D9 C9                                         FXCH st1
00000DB4: E9 13 01 00 00                                jmp end_D9_SP
                                                FXCH_0_2:          
00000DB9: D9 CA                                         FXCH st2  
00000DBB: E9 0C 01 00 00                                jmp end_D9_SP
                                                FXCH_0_3:        
00000DC0: D9 CB                                         FXCH st3                  
00000DC2: E9 05 01 00 00                                jmp end_D9_SP
                                                FXCH_0_4:        
00000DC7: D9 CC                                         FXCH st4
00000DC9: E9 FE 00 00 00                                jmp end_D9_SP
                                                FXCH_0_5:        
00000DCE: D9 CD                                         FXCH st5
00000DD0: E9 F7 00 00 00                                jmp end_D9_SP
                                                FXCH_0_6:        
00000DD5: D9 CE                                         FXCH st6
00000DD7: E9 F0 00 00 00                                jmp end_D9_SP
                                                FXCH_0_7:        
00000DDC: D9 CF                                         FXCH st7
00000DDE: E9 E9 00 00 00                                jmp end_D9_SP 
                                                
                                                
                                                               
                                                D9_D0:               
                                                ;	    D9 D0     FNOP            no operation 
00000DE3: D9 D0                                         FNOP
00000DE5: E9 E2 00 00 00                                jmp end_D9_SP  
                                                D9_D1:          
                                                        ; there are no known 8087 instructions from D1 to DF
                                                        ; probably Pentium has something.....
                                                
00000DEA: E9 DD 00 00 00                                jmp end_D9_SP
                                                D9_D2:          
00000DEF: D9 D0                                          FNOP
00000DF1: E9 D6 00 00 00                                jmp end_D9_SP
                                                D9_D3:          
00000DF6: D9 D0                                          FNOP
00000DF8: E9 CF 00 00 00                                jmp end_D9_SP
                                                D9_D4:          
00000DFD: D9 D0                                          FNOP
00000DFF: E9 C8 00 00 00                                jmp end_D9_SP
                                                D9_D5:          
00000E04: D9 D0                                          FNOP
00000E06: E9 C1 00 00 00                                jmp end_D9_SP
                                                D9_D6:          
00000E0B: D9 D0                                          FNOP
00000E0D: E9 BA 00 00 00                                jmp end_D9_SP
                                                D9_D7:          
                                                
00000E12: D9 D0                                          FNOP
00000E14: E9 B3 00 00 00                                jmp end_D9_SP
                                                D9_D8:          
                                                
00000E19: D9 D0                                          FNOP
00000E1B: E9 AC 00 00 00                                jmp end_D9_SP
                                                D9_D9:          
00000E20: D9 D0                                          FNOP  
00000E22: E9 A5 00 00 00                                jmp end_D9_SP
                                                D9_DA:          
                                                
00000E27: D9 D0                                          FNOP
00000E29: E9 9E 00 00 00                                jmp end_D9_SP
                                                D9_DB:          
                                                
00000E2E: D9 D0                                          FNOP
00000E30: E9 97 00 00 00                                jmp end_D9_SP
                                                D9_DC:          
                                                
00000E35: D9 D0                                          FNOP
00000E37: E9 90 00 00 00                                jmp end_D9_SP
                                                D9_DD:          
                                                
00000E3C: D9 D0                                          FNOP
00000E3E: E9 89 00 00 00                                jmp end_D9_SP
                                                D9_DE:          
                                                
00000E43: D9 D0                                          FNOP
00000E45: E9 82 00 00 00                                jmp end_D9_SP
                                                D9_DF:          
                                                
00000E4A: D9 D0                                          FNOP
00000E4C: EB 7E                                         jmp end_D9_SP
                                                D9_E0:          
                                                ;       D9 E0     FCHS            0 := -0
00000E4E: D9 E0                                         FCHS
00000E50: EB 7A                                         jmp end_D9_SP
                                                D9_E1:          
                                                ;	    D9 E1     FABS            0 := |0|
00000E52: D9 E1                                         FABS
00000E54: EB 76                                         jmp end_D9_SP
                                                D9_E2:          
                                                ;       NO OP
00000E56: D9 D0                                         FNOP
00000E58: EB 72                                         jmp end_D9_SP
                                                D9_E3:          
                                                ;       NO OP
00000E5A: D9 D0                                         FNOP
00000E5C: EB 6E                                         jmp end_D9_SP
                                                D9_E4:          
                                                ;       D9 E4     FTST            compare 0 - 0.0
00000E5E: D9 E4                                         FTST
00000E60: EB 6A                                         jmp end_D9_SP
                                                D9_E5:          
                                                ;       D9 E5     FXAM            C3 -- C0 := type of 0
00000E62: D9 E5                                         FXAM
00000E64: EB 66                                         jmp end_D9_SP
                                                D9_E6:          
                                                ;       NO OP
00000E66: D9 D0                                         FNOP 
00000E68: EB 62                                         jmp end_D9_SP
                                                D9_E7:          
                                                ;       NO OP
00000E6A: D9 D0                                         FNOP
00000E6C: EB 5E                                         jmp end_D9_SP
                                                D9_E8:          
                                                ;	    D9 E8     FLD1            push, 0 := 1.0
00000E6E: D9 E8                                         FLD1
00000E70: EB 5A                                         jmp end_D9_SP
                                                D9_E9:          
                                                ;	    D9 E9     FLDL2T          push, 0 := log base 2.0 of 10.0
00000E72: D9 E9                                         FLDL2T
00000E74: EB 56                                         jmp end_D9_SP
                                                D9_EA:          
                                                ;	    D9 EA     FLDL2E          push, 0 := log base 2.0 of e
00000E76: D9 EA                                         FLDL2E
00000E78: EB 52                                         jmp end_D9_SP
                                                D9_EB:          
                                                ;	    D9 EB     FLDPI           push, 0 := Pi
00000E7A: D9 EB                                         FLDPI
00000E7C: EB 4E                                         jmp end_D9_SP
                                                D9_EC:          
                                                ;	    D9 EC     FLDLG2          push, 0 := log base 10.0 of 2.0
00000E7E: D9 EC                                         FLDLG2
00000E80: EB 4A                                         jmp end_D9_SP
                                                D9_ED:          
                                                ;	    D9 ED     FLDLN2          push, 0 := log base e of 2.0
00000E82: D9 ED                                         FLDLN2
00000E84: EB 46                                         jmp end_D9_SP
                                                D9_EE:          
                                                ;	    D9 EE     FLDZ            push, 0 := +0.0
00000E86: D9 EE                                         FLDZ
00000E88: EB 42                                         jmp end_D9_SP
                                                D9_EF:          
00000E8A: D9 D0                                         FNOP      ; NO SUCH OP
                                                 
00000E8C: EB 3E                                         jmp end_D9_SP
                                                D9_F0:          
                                                ;	    D9 F0     F2XM1           0 := (2.0 ** 0) - 1.0
00000E8E: D9 F0                                         F2XM1
00000E90: EB 3A                                         jmp end_D9_SP
                                                D9_F1:          
                                                ;	    D9 F1     FYL2X           0 := 1 * log base 2.0 of 0, pop
00000E92: D9 F1                                         FYL2X
00000E94: EB 36                                         jmp end_D9_SP
                                                D9_F2:          
                                                ;	    D9 F2     FPTAN           push, 1/0 := tan(old 0)
00000E96: D9 F2                                         FPTAN
00000E98: EB 32                                         jmp end_D9_SP
                                                D9_F3:          
                                                ;	    D9 F3     FPATAN          0 := arctan(1/0), pop
00000E9A: D9 F3                                         FPATAN
00000E9C: EB 2E                                         jmp end_D9_SP
                                                D9_F4:          
                                                ;	    D9 F4     FXTRACT         push, 1 := expo, 0 := sig
00000E9E: D9 F4                                         FXTRACT
00000EA0: EB 2A                                         jmp end_D9_SP
                                                D9_F5:          
                                                ;	    D9 F5     FPREM1          387 only: 0 := REPEAT(0 - 1) IEEE compat.
00000EA2: D9 F5                                         FPREM1
00000EA4: EB 26                                         jmp end_D9_SP
                                                D9_F6:          
                                                ;	    D9 F6     FDECSTP         decrement stack pointer
00000EA6: D9 F6                                         FDECSTP
00000EA8: EB 22                                         jmp end_D9_SP
                                                D9_F7:          
                                                ;	    D9 F7     FINCSTP         increment stack pointer
00000EAA: D9 F7                                         FINCSTP
00000EAC: EB 1E                                         jmp end_D9_SP
                                                D9_F8:          
                                                ;	    D9 F8     FPREM           0 := REPEAT(0 - 1)
00000EAE: D9 F8                                         FPREM
00000EB0: EB 1A                                         jmp end_D9_SP
                                                D9_F9:          
                                                ;	    D9 F9     FYL2XP1         0 := 1 * log base 2.0 of (0+1.0), pop
00000EB2: D9 F9                                         FYL2XP1
00000EB4: EB 16                                         jmp end_D9_SP
                                                D9_FA:          
                                                ;	    D9 FA     FSQRT           0 := square root of 0
00000EB6: D9 FA                                         FSQRT
00000EB8: EB 12                                         jmp end_D9_SP
                                                D9_FB:          
                                                ;	    D9 FB     FSINCOS         387 only: push, 1 := sine, 0 := cos(old 0)
00000EBA: D9 FB                                         FSINCOS
00000EBC: EB 0E                                         jmp end_D9_SP
                                                D9_FC:          
                                                ;	    D9 FC     FRNDINT         0 := round(0)
00000EBE: D9 FC                                         FRNDINT
00000EC0: EB 0A                                         jmp end_D9_SP
                                                D9_FD:          
                                                ;	    D9 FD     FSCALE          0 := 0 * 2.0 ** 1
00000EC2: D9 FD                                         FSCALE
00000EC4: EB 06                                         jmp end_D9_SP
                                                D9_FE:          
                                                ;	    D9 FE     FSIN            387 only: 0 := sine(0)
00000EC6: D9 FE                                         FSIN
00000EC8: EB 02                                         jmp end_D9_SP
                                                D9_FF:          
                                                ;	    D9 FF     FCOS            387 only: 0 := cosine(0)
00000ECA: D9 FF                                         FCOS
                                                        ; NR ; jmp end_D9_SP
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                     
                                                end_D9_SP:
                                                end_D9_TAB:     
00000ECC: 8B 5D 18                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
00000ECF: 9B DD 33                              	FSAVE [ebx]    
00000ED2: 9B                                        fwait 
                                                    
00000ED3: 9B DB E2                                  FCLEX
                                                    
                                                    ; restore....      
00000ED6: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00000EDB: DD 23                                 	FRSTOR [ebx] 
00000EDD: 9B                                        fwait
                                                    
                                                    ; restore
00000EDE: 8B 5D F0                                  mov ebx, [tEBX]
00000EE1: 8B 75 F4                                  mov esi, [tESI]
00000EE4: 8B 55 F8                                  mov edx, [tEDX]
00000EE7: 8B 4D FC                                  mov ecx, [tECX]
                                                 
00000EEA: 9D                                        popf
                                                    
                                                	;eax=WHAT EVER
00000EEB: C9 C2 14 00                           	ret  
                                                endp
                                                
                                                
                                                
                                                
                                                       
                                                       
                                                       
                                                       
                                                       
                                                       
                                                
                                                         
00000EEF: 55 89 E5 83 EC 08                     proc MicroAsm_DA_TAB lEA_TAB, mem4i, virtual87state_94bytes
                                                    local tEBX:DWORD, tESI:DWORD
00000EF5: 9C                                    	pushf
                                                	;cli 
                                                
00000EF6: 89 5D F8                              	mov [tEBX], ebx ; jic 
00000EF9: 89 75 FC                              	mov [tESI], esi ; jic
                                                	   
                                                	
00000EFC: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00000F01: 9B DD 33                              	FSAVE [ebx] 
00000F04: 9B                                        fwait
                                                           	      
00000F05: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00000F08: DD 23                                 	FRSTOR [ebx]
00000F0A: 9B                                    	fwait
                                                	
00000F0B: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
00000F0E: 8B 75 0C                              	mov esi, [mem4i]        ; pointer to pointer   
                                                    
                                                      
00000F11: 8B 03                                 	mov eax, [ebx] 	
00000F13: 83 F8 00                                  cmp eax, 0
00000F16: 74 25                                     je  DA_0  
00000F18: 83 F8 01                                  cmp eax, 1
00000F1B: 74 24                                     je  DA_1
00000F1D: 83 F8 02                                  cmp eax, 2
00000F20: 74 23                                     je  DA_2
00000F22: 83 F8 03                                  cmp eax, 3
00000F25: 74 22                                     je  DA_3
00000F27: 83 F8 04                                  cmp eax, 4
00000F2A: 74 21                                     je  DA_4
00000F2C: 83 F8 05                                  cmp eax, 5
00000F2F: 74 20                                     je  DA_5
00000F31: 83 F8 06                                  cmp eax, 6
00000F34: 74 1F                                     je  DA_6  
00000F36: 83 F8 07                                  cmp eax, 7
00000F39: 74 1E                                     je  DA_7     
00000F3B: EB 20                                     jmp special_processing_DA
                                                DA_0:   
                                                ;	    DA /0     FIADD mem4i     0 := 0 + mem2i
00000F3D: DA 06                                      FIADD dword [esi]
00000F3F: EB 27                                 jmp end_DA_TAB         
                                                DA_1:        
                                                ;       DA /1     FIMUL mem4i     0 := 0 * mem4i
00000F41: DA 0E                                      FIMUL dword [esi]
00000F43: EB 23                                 jmp end_DA_TAB 
                                                DA_2:  
                                                ;       DA /2     FICOM mem4i     compare 0 - mem4i
00000F45: DA 16                                      FICOM dword [esi]
00000F47: EB 1F                                 jmp end_DA_TAB 
                                                DA_3:   
                                                ;       DA /3     FICOMP mem4i    compare 0 - mem4i, pop
00000F49: DA 1E                                      FICOMP dword [esi]
00000F4B: EB 1B                                 jmp end_DA_TAB 
                                                DA_4:    
                                                ;       DA /4     FISUB mem4i     0 := 0 - mem4i
00000F4D: DA 26                                      FISUB dword [esi]
00000F4F: EB 17                                 jmp end_DA_TAB 
                                                DA_5:   
                                                ;       DA /5     FISUBR mem4i    0 := mem4i - 0
00000F51: DA 2E                                      FISUBR dword [esi] 
00000F53: EB 13                                 jmp end_DA_TAB 
                                                DA_6:  
                                                ;       DA /6     FIDIV mem4i     0 := 0 / mem4i
00000F55: DA 36                                      FIDIV dword [esi] 
00000F57: EB 0F                                 jmp end_DA_TAB 
                                                DA_7: 
                                                ;       DA /7     FIDIVR mem4i    0 := mem4i / 0
00000F59: DA 3E                                      FIDIVR dword [esi]  
00000F5B: EB 0B                                 jmp end_DA_TAB 
                                                 
                                                 
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_DA:        
00000F5D: 3D E9 00 00 00                            cmp eax, 0E9h
00000F62: 74 02                                     je  DA_E9  
                                                    ; no other instructions...
00000F64: EB 02                                     jmp end_DA_SP     
                                                                
                                                        
                                                DA_E9:
                                                ;    DA E9     FUCOMPP         387 only: unordered compare 0 - 1, pop both
00000F66: DA E9                                     FUCOMPP
                                                    ; NP ; jmp end_DA_SP
                                                    
                                                end_DA_SP:     
                                                end_DA_TAB:	 
00000F68: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
00000F6B: 9B DD 33                              	FSAVE [ebx]    
00000F6E: 9B                                        fwait
                                                    
                                                    
00000F6F: 9B DB E2                                  FCLEX 
                                                    
                                                          
                                                    ; restore....      
00000F72: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00000F77: DD 23                                 	FRSTOR [ebx] 
00000F79: 9B                                        fwait  
                                                     
00000F7A: 8B 5D F8                                  mov ebx, [tEBX]
00000F7D: 8B 75 FC                              	mov esi, [tESI]
                                                	
00000F80: 9D                                    	popf
                                                	
                                                	; return lEA_TAB (as it was passed to the function)
                                                	;xor eax, eax     ; return
00000F81: C9 C2 0C 00                           	ret  
                                                endp
                                                ; MicroAsm_DA_TAB
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
00000F85: 55 89 E5 83 EC 10                     proc MicroAsm_DB_TAB lEA_TAB, mem4i, mem10r, virtual87state_94bytes
                                                    local tEBX:DWORD,  tESI:DWORD,   tEDX:DWORD,  tECX:DWORD 
00000F8B: 9C                                    	pushf
                                                	    
                                                    
                                                    ; store                                                                  
00000F8C: 89 5D F0                                  mov [tEBX], ebx
00000F8F: 89 75 F4                                  mov [tESI], esi
00000F92: 89 55 F8                                  mov [tEDX], edx
00000F95: 89 4D FC                                  mov [tECX], ecx
                                                	
                                                	; FPU ->
00000F98: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00000F9D: 9B DD 33                              	FSAVE [ebx] 
00000FA0: 9B                                        fwait
                                                     
                                                    ; FPU <-       	      
00000FA1: 8B 5D 14                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00000FA4: DD 23                                 	FRSTOR [ebx]
00000FA6: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;; 
                                                	 
00000FA7: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
00000FAA: 8B 75 0C                              	mov esi, [mem4i]        ; pointer to pointer   
00000FAD: 8B 55 10                              	mov edx, [mem10r]       ; pointer to pointer
                                                
                                                      
00000FB0: 8B 03                                 	mov eax, [ebx] 	
00000FB2: 83 F8 00                                  cmp eax, 0
00000FB5: 74 25                                     je  DB_0  
00000FB7: 83 F8 01                                  cmp eax, 1
00000FBA: 74 27                                     je  DB_1
00000FBC: 83 F8 02                                  cmp eax, 2
00000FBF: 74 29                                     je  DB_2
00000FC1: 83 F8 03                                  cmp eax, 3
00000FC4: 74 2B                                     je  DB_3
00000FC6: 83 F8 04                                  cmp eax, 4
00000FC9: 74 2D                                     je  DB_4
00000FCB: 83 F8 05                                  cmp eax, 5
00000FCE: 74 2F                                     je  DB_5
00000FD0: 83 F8 06                                  cmp eax, 6
00000FD3: 74 31                                     je  DB_6  
00000FD5: 83 F8 07                                  cmp eax, 7
00000FD8: 74 33                                     je  DB_7     
00000FDA: EB 38                                     jmp special_processing_DB
                                                DB_0:   
                                                ;	    DB /0     FILD mem4i      push, 0 := mem4i
00000FDC: DB 06                                      FILD dword [esi]
00000FDE: E9 44 03 00 00                        jmp end_DB_TAB         
                                                DB_1:
                                                ;       RESERVED  
00000FE3: D9 D0                                      FNOP
00000FE5: E9 3D 03 00 00                        jmp end_DB_TAB 
                                                DB_2:     
                                                ;	    DB /2     FIST mem4i      mem4i := 0
00000FEA: DB 16                                      FIST dword [esi]
00000FEC: E9 36 03 00 00                        jmp end_DB_TAB 
                                                DB_3:       
                                                ;	    DB /3     FISTP mem4i     mem4i := 0, pop
00000FF1: DB 1E                                      FISTP dword [esi]
00000FF3: E9 2F 03 00 00                        jmp end_DB_TAB 
                                                DB_4:   
                                                ;	    RESERVED
00000FF8: D9 D0                                      FNOP     
00000FFA: E9 28 03 00 00                        jmp end_DB_TAB 
                                                DB_5:     
                                                ;	    DB /5     FLD mem10r      push, 0 := mem10r
00000FFF: DB 2A                                      FLD tword [edx] 
00001001: E9 21 03 00 00                        jmp end_DB_TAB 
                                                DB_6:         
                                                ;	    RESERVED
00001006: D9 D0                                      FNOP
00001008: E9 1A 03 00 00                        jmp end_DB_TAB 
                                                DB_7:  
                                                ;	    DB /7     FSTP mem10r     mem10r := 0, pop
0000100D: DB 3A                                      FSTP tword [edx]  
0000100F: E9 13 03 00 00                        jmp end_DB_TAB
                                                
                                                    ;;;;;;;;;;;;;;;;;;;; special processing ;;;;;;;;;;;;;;
                                                    
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_DB:        
00001014: 3D C8 00 00 00                            cmp eax, 0C8h
00001019: 0F 82 0A 02 00 00                         jb  DB_C0  
0000101F: 3D D0 00 00 00                            cmp eax, 0D0h
00001024: 0F 82 06 02 00 00                         jb  DB_C8
                                                     
0000102A: 3D D0 00 00 00                            cmp eax, 0D0h
0000102F: 0F 84 02 02 00 00                         je  DB_D0 
00001035: 3D D1 00 00 00                            cmp eax, 0D1h
0000103A: 0F 84 FE 01 00 00                         je  DB_D1 
00001040: 3D D2 00 00 00                            cmp eax, 0D2h
00001045: 0F 84 F8 01 00 00                         je  DB_D2 
0000104B: 3D D3 00 00 00                            cmp eax, 0D3h
00001050: 0F 84 F4 01 00 00                         je  DB_D3 
00001056: 3D D4 00 00 00                            cmp eax, 0D4h
0000105B: 0F 84 F0 01 00 00                         je  DB_D4 
00001061: 3D D5 00 00 00                            cmp eax, 0D5h
00001066: 0F 84 EC 01 00 00                         je  DB_D5 
0000106C: 3D D6 00 00 00                            cmp eax, 0D6h
00001071: 0F 84 E8 01 00 00                         je  DB_D6 
00001077: 3D D7 00 00 00                            cmp eax, 0D7h
0000107C: 0F 84 E4 01 00 00                         je  DB_D7 
00001082: 3D D8 00 00 00                            cmp eax, 0D8h
00001087: 0F 84 E0 01 00 00                         je  DB_D8 
0000108D: 3D D9 00 00 00                            cmp eax, 0D9h
00001092: 0F 84 DC 01 00 00                         je  DB_D9 
00001098: 3D DA 00 00 00                            cmp eax, 0DAh
0000109D: 0F 84 D8 01 00 00                         je  DB_DA 
000010A3: 3D DB 00 00 00                            cmp eax, 0DBh
000010A8: 0F 84 D4 01 00 00                         je  DB_DB 
000010AE: 3D DC 00 00 00                            cmp eax, 0DCh
000010B3: 0F 84 D0 01 00 00                         je  DB_DC 
000010B9: 3D DD 00 00 00                            cmp eax, 0DDh
000010BE: 0F 84 CC 01 00 00                         je  DB_DD 
000010C4: 3D DE 00 00 00                            cmp eax, 0DEh
000010C9: 0F 84 C8 01 00 00                         je  DB_DE 
000010CF: 3D DF 00 00 00                            cmp eax, 0DFh
000010D4: 0F 84 C4 01 00 00                         je  DB_DF 
000010DA: 3D E0 00 00 00                            cmp eax, 0E0h
000010DF: 0F 84 C0 01 00 00                         je  DB_E0 
000010E5: 3D E1 00 00 00                            cmp eax, 0E1h
000010EA: 0F 84 BA 01 00 00                         je  DB_E1 
000010F0: 3D E2 00 00 00                            cmp eax, 0E2h
000010F5: 0F 84 B4 01 00 00                         je  DB_E2 
000010FB: 3D E3 00 00 00                            cmp eax, 0E3h
00001100: 0F 84 AE 01 00 00                         je  DB_E3 
00001106: 3D E4 00 00 00                            cmp eax, 0E4h
0000110B: 0F 84 A8 01 00 00                         je  DB_E4 
00001111: 3D E5 00 00 00                            cmp eax, 0E5h
00001116: 0F 84 A1 01 00 00                         je  DB_E5 
0000111C: 3D E6 00 00 00                            cmp eax, 0E6h
00001121: 0F 84 9A 01 00 00                         je  DB_E6 
00001127: 3D E7 00 00 00                            cmp eax, 0E7h
0000112C: 0F 84 93 01 00 00                         je  DB_E7 
00001132: 3D E8 00 00 00                            cmp eax, 0E8h
00001137: 0F 84 8C 01 00 00                         je  DB_E8 
0000113D: 3D E9 00 00 00                            cmp eax, 0E9h
00001142: 0F 84 85 01 00 00                         je  DB_E9 
00001148: 3D EA 00 00 00                            cmp eax, 0EAh
0000114D: 0F 84 7E 01 00 00                         je  DB_EA 
00001153: 3D EB 00 00 00                            cmp eax, 0EBh
00001158: 0F 84 77 01 00 00                         je  DB_EB 
0000115E: 3D EC 00 00 00                            cmp eax, 0ECh
00001163: 0F 84 70 01 00 00                         je  DB_EC 
00001169: 3D ED 00 00 00                            cmp eax, 0EDh
0000116E: 0F 84 69 01 00 00                         je  DB_ED 
00001174: 3D EE 00 00 00                            cmp eax, 0EEh
00001179: 0F 84 62 01 00 00                         je  DB_EE 
0000117F: 3D F0 00 00 00                            cmp eax, 0F0h
00001184: 0F 84 5F 01 00 00                         je  DB_F0 
0000118A: 3D F1 00 00 00                            cmp eax, 0F1h
0000118F: 0F 84 58 01 00 00                         je  DB_F1 
00001195: 3D F2 00 00 00                            cmp eax, 0F2h
0000119A: 0F 84 51 01 00 00                         je  DB_F2 
000011A0: 3D F3 00 00 00                            cmp eax, 0F3h
000011A5: 0F 84 4A 01 00 00                         je  DB_F3 
000011AB: 3D F4 00 00 00                            cmp eax, 0F4h
000011B0: 0F 84 43 01 00 00                         je  DB_F4 
000011B6: 3D F5 00 00 00                            cmp eax, 0F5h
000011BB: 0F 84 3C 01 00 00                         je  DB_F5 
000011C1: 3D F6 00 00 00                            cmp eax, 0F6h
000011C6: 0F 84 35 01 00 00                         je  DB_F6 
000011CC: 3D F7 00 00 00                            cmp eax, 0F7h
000011D1: 0F 84 2E 01 00 00                         je  DB_F7 
000011D7: 3D F8 00 00 00                            cmp eax, 0F8h
000011DC: 0F 84 27 01 00 00                         je  DB_F8 
000011E2: 3D F9 00 00 00                            cmp eax, 0F9h
000011E7: 0F 84 20 01 00 00                         je  DB_F9 
000011ED: 3D FA 00 00 00                            cmp eax, 0FAh
000011F2: 0F 84 19 01 00 00                         je  DB_FA 
000011F8: 3D FB 00 00 00                            cmp eax, 0FBh
000011FD: 0F 84 12 01 00 00                         je  DB_FB 
00001203: 3D FC 00 00 00                            cmp eax, 0FCh
00001208: 0F 84 0B 01 00 00                         je  DB_FC 
0000120E: 3D FD 00 00 00                            cmp eax, 0FDh
00001213: 0F 84 04 01 00 00                         je  DB_FD 
00001219: 3D FE 00 00 00                            cmp eax, 0FEh
0000121E: 0F 84 FD 00 00 00                         je  DB_FE      
00001224: E9 FC 00 00 00                            jmp DB_FF     ; == FF
                                                                
                                                        
                                                DB_C0:
                                                ; RESERVED     
00001229: D9 D0                                         fnop
0000122B: E9 F7 00 00 00                                jmp end_DB_SP  
                                                
                                                        
                                                        
                                                DB_C8:
                                                ; RESERVED
00001230: D9 D0                                         fnop
00001232: E9 F0 00 00 00                                jmp end_DB_SP  
                                                
                                                       
                                                DB_D0:               
                                                ; RESERVED .....
00001237: D9 D0                                         FNOP
00001239: E9 E9 00 00 00                                jmp end_DB_SP  
                                                DB_D1:          
                                                        ; there are no known 8087 instructions from C0 to DF
                                                        ; probably Pentium has something.....
                                                
0000123E: E9 E4 00 00 00                                jmp end_DB_SP
                                                DB_D2:          
00001243: D9 D0                                          FNOP
00001245: E9 DD 00 00 00                                jmp end_DB_SP
                                                DB_D3:          
0000124A: D9 D0                                          FNOP
0000124C: E9 D6 00 00 00                                jmp end_DB_SP
                                                DB_D4:          
00001251: D9 D0                                          FNOP
00001253: E9 CF 00 00 00                                jmp end_DB_SP
                                                DB_D5:          
00001258: D9 D0                                          FNOP
0000125A: E9 C8 00 00 00                                jmp end_DB_SP
                                                DB_D6:          
0000125F: D9 D0                                          FNOP
00001261: E9 C1 00 00 00                                jmp end_DB_SP
                                                DB_D7:          
                                                
00001266: D9 D0                                          FNOP
00001268: E9 BA 00 00 00                                jmp end_DB_SP
                                                DB_D8:          
                                                
0000126D: D9 D0                                          FNOP
0000126F: E9 B3 00 00 00                                jmp end_DB_SP
                                                DB_D9:          
00001274: D9 D0                                          FNOP  
00001276: E9 AC 00 00 00                                jmp end_DB_SP
                                                DB_DA:          
                                                
0000127B: D9 D0                                          FNOP
0000127D: E9 A5 00 00 00                                jmp end_DB_SP
                                                DB_DB:          
                                                
00001282: D9 D0                                          FNOP
00001284: E9 9E 00 00 00                                jmp end_DB_SP
                                                DB_DC:          
                                                
00001289: D9 D0                                          FNOP
0000128B: E9 97 00 00 00                                jmp end_DB_SP
                                                DB_DD:          
                                                
00001290: D9 D0                                          FNOP
00001292: E9 90 00 00 00                                jmp end_DB_SP
                                                DB_DE:          
                                                
00001297: D9 D0                                          FNOP
00001299: E9 89 00 00 00                                jmp end_DB_SP
                                                DB_DF:          
                                                
0000129E: D9 D0                                          FNOP
000012A0: E9 82 00 00 00                                jmp end_DB_SP
                                                DB_E0:          
                                                ;       DB E0     FENI            enable interrupts (.287 ignore)
000012A5: 9B DB E0                                      FENI
000012A8: EB 7D                                         jmp end_DB_SP
                                                DB_E1:          
                                                ;	    DB E1     FDISI           disable interrupts (.287 ignore)
000012AA: 9B DB E1                                      FDISI
000012AD: EB 78                                         jmp end_DB_SP
                                                DB_E2:          
                                                ;       DB E2     FCLEX           clear exceptions
000012AF: 9B DB E2                                      FCLEX
000012B2: EB 73                                         jmp end_DB_SP
                                                DB_E3:          
                                                ;       DB E3     FINIT           initialize 87
000012B4: 9B DB E3                                      FINIT
000012B7: EB 6E                                         jmp end_DB_SP
                                                DB_E4:          
                                                ;       DB E4     FSETPM          set protection mode
                                                ;        FSETPM
000012B9: D9 D0                                         FNOP  ; seems like only .286 supports it,
                                                              ; and all others: .386 and above replace it with FNOP.
000012BB: EB 6A                                         jmp end_DB_SP
                                                DB_E5:          
                                                ;       DB E8     FBANK 0         IIT only: set bank pointer to default
000012BD: D9 D0                                         FNOP  ; we have no banks.
000012BF: EB 66                                         jmp end_DB_SP
                                                DB_E6:          
                                                ;       DB EA     FBANK 2         IIT only: set bank pointer to bank 2
000012C1: D9 D0                                         FNOP  ; we have no banks. 
000012C3: EB 62                                         jmp end_DB_SP
                                                DB_E7:          
                                                ;       DB EB     FBANK 1         IIT only: set bank pointer to bank 1
000012C5: D9 D0                                         FNOP  ; we have no banks.
000012C7: EB 5E                                         jmp end_DB_SP
                                                DB_E8:          
                                                ;	    RESERVED
000012C9: D9 D0                                         FNOP
000012CB: EB 5A                                         jmp end_DB_SP
                                                DB_E9:          
                                                ;	    RESERVED
000012CD: D9 D0                                         FNOP
000012CF: EB 56                                         jmp end_DB_SP
                                                DB_EA:          
                                                ;	    RESERVED
000012D1: D9 D0                                         FNOP
000012D3: EB 52                                         jmp end_DB_SP
                                                DB_EB:          
                                                ;	    RESERVED
000012D5: D9 D0                                         FNOP
000012D7: EB 4E                                         jmp end_DB_SP
                                                DB_EC:          
                                                ;	    RESERVED
000012D9: D9 D0                                         FNOP
000012DB: EB 4A                                         jmp end_DB_SP
                                                DB_ED:          
                                                ;	    RESERVED
000012DD: D9 D0                                         FNOP
000012DF: EB 46                                         jmp end_DB_SP
                                                DB_EE:          
                                                ;	    RESERVED
000012E1: D9 D0                                         FNOP
000012E3: EB 42                                         jmp end_DB_SP
                                                DB_EF:          
                                                ;	    RESERVED
000012E5: D9 D0                                         FNOP
000012E7: EB 3E                                         jmp end_DB_SP
                                                DB_F0:          
                                                ;	    RESERVED
000012E9: D9 D0                                         FNOP
000012EB: EB 3A                                         jmp end_DB_SP
                                                DB_F1:          
                                                ;	    DB F1     F4X4            IIT only: 4 by 4 matrix multiply
000012ED: D9 D0                                         FNOP  ; don't know :)
000012EF: EB 36                                         jmp end_DB_SP
                                                DB_F2:          
                                                ;	    RESERVED
000012F1: D9 D0                                         FNOP
000012F3: EB 32                                         jmp end_DB_SP
                                                DB_F3:          
                                                ;	    RESERVED
000012F5: D9 D0                                         FNOP
000012F7: EB 2E                                         jmp end_DB_SP
                                                DB_F4:          
                                                ;	    RESERVED
000012F9: D9 D0                                         FNOP
000012FB: EB 2A                                         jmp end_DB_SP
                                                DB_F5:          
                                                ;	    RESERVED
000012FD: D9 D0                                         FNOP
000012FF: EB 26                                         jmp end_DB_SP
                                                DB_F6:          
                                                ;	    RESERVED
00001301: D9 D0                                         FNOP
00001303: EB 22                                         jmp end_DB_SP
                                                DB_F7:          
                                                ;	    RESERVED
00001305: D9 D0                                         FNOP
00001307: EB 1E                                         jmp end_DB_SP
                                                DB_F8:          
                                                ;	    RESERVED
00001309: D9 D0                                         FNOP
0000130B: EB 1A                                         jmp end_DB_SP
                                                DB_F9:          
                                                ;	    RESERVED
0000130D: D9 D0                                         FNOP
0000130F: EB 16                                         jmp end_DB_SP
                                                DB_FA:          
                                                ;	    RESERVED
00001311: D9 D0                                         FNOP
00001313: EB 12                                         jmp end_DB_SP
                                                DB_FB:          
                                                ;	    RESERVED
00001315: D9 D0                                         FNOP
00001317: EB 0E                                         jmp end_DB_SP
                                                DB_FC:          
                                                ;	    RESERVED
00001319: D9 D0                                         FNOP
0000131B: EB 0A                                         jmp end_DB_SP
                                                DB_FD:          
                                                ;	    RESERVED
0000131D: D9 D0                                         FNOP
0000131F: EB 06                                         jmp end_DB_SP
                                                DB_FE:          
                                                ;	    RESERVED
00001321: D9 D0                                         FNOP
00001323: EB 02                                         jmp end_DB_SP
                                                DB_FF:          
                                                ;	    RESERVED
00001325: D9 D0                                         FNOP
                                                        ; NR ; jmp end_DB_SP
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                     
                                                end_DB_SP:
                                                end_DB_TAB:     
00001327: 8B 5D 14                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
0000132A: 9B DD 33                              	FSAVE [ebx]    
0000132D: 9B                                        fwait 
                                                    
0000132E: 9B DB E2                                  FCLEX
                                                    
                                                    ; restore....      
00001331: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00001336: DD 23                                 	FRSTOR [ebx] 
00001338: 9B                                        fwait
                                                    
                                                    ; restore
00001339: 8B 5D F0                                  mov ebx, [tEBX]
0000133C: 8B 75 F4                                  mov esi, [tESI]
0000133F: 8B 55 F8                                  mov edx, [tEDX]
00001342: 8B 4D FC                                  mov ecx, [tECX]
                                                 
00001345: 9D                                        popf
                                                    
                                                	;eax=WHAT EVER
00001346: C9 C2 10 00                           	ret  
                                                endp
                                                ;  MicroAsm_DB_TAB
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
0000134A: 55 89 E5 83 EC 10                     proc MicroAsm_DC_TAB lEA_TAB, mem8r, virtual87state_94bytes
                                                    local tEBX:DWORD,  tESI:DWORD,   tEDX:DWORD,  tECX:DWORD 
00001350: 9C                                    	pushf
                                                	;cli 
                                                
                                                    ; store                                                                  
00001351: 89 5D F0                                  mov [tEBX], ebx
00001354: 89 75 F4                                  mov [tESI], esi
00001357: 89 55 F8                                  mov [tEDX], edx
0000135A: 89 4D FC                                  mov [tECX], ecx
                                                	
                                                	; FPU ->
0000135D: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00001362: 9B DD 33                              	FSAVE [ebx] 
00001365: 9B                                        fwait
                                                     
                                                    ; FPU <-       	      
00001366: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00001369: DD 23                                 	FRSTOR [ebx]
0000136B: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;; 
                                                	 
0000136C: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
0000136F: 8B 75 0C                              	mov esi, [mem8r]        ; pointer to pointer   
                                                
                                                      
00001372: 8B 03                                 	mov eax, [ebx] 	
00001374: 83 F8 00                                  cmp eax, 0
00001377: 74 25                                     je  DC_0  
00001379: 83 F8 01                                  cmp eax, 1
0000137C: 74 27                                     je  DC_1
0000137E: 83 F8 02                                  cmp eax, 2
00001381: 74 29                                     je  DC_2
00001383: 83 F8 03                                  cmp eax, 3
00001386: 74 2B                                     je  DC_3
00001388: 83 F8 04                                  cmp eax, 4
0000138B: 74 2D                                     je  DC_4
0000138D: 83 F8 05                                  cmp eax, 5
00001390: 74 2F                                     je  DC_5
00001392: 83 F8 06                                  cmp eax, 6
00001395: 74 31                                     je  DC_6  
00001397: 83 F8 07                                  cmp eax, 7
0000139A: 74 33                                     je  DC_7     
0000139C: EB 38                                     jmp special_processing_DC
                                                DC_0:   
                                                ;	    DC /0     FADD mem8r      0 := 0 + mem8r
0000139E: DC 06                                      FADD qword [esi]
000013A0: E9 CB 02 00 00                        jmp end_DC_TAB         
                                                DC_1:
                                                ;       DC /1     FMUL mem8r      0 := 0 * mem8r  
000013A5: DC 06                                      FADD qword [esi]
000013A7: E9 C4 02 00 00                        jmp end_DC_TAB 
                                                DC_2:     
                                                ;	    DC /2     FCOM mem8r      compare 0 - mem8r
000013AC: DC 16                                      FCOM qword [esi]
000013AE: E9 BD 02 00 00                        jmp end_DC_TAB 
                                                DC_3:       
                                                ;	    DC /3     FCOMP mem8r     compare 0 - mem8r, pop
000013B3: DC 1E                                      FCOMP qword [esi]
000013B5: E9 B6 02 00 00                        jmp end_DC_TAB 
                                                DC_4:   
                                                ;	    DC /4     FSUB mem8r      0 := 0 - mem8r
000013BA: DC 26                                      FSUB qword [esi]
000013BC: E9 AF 02 00 00                        jmp end_DC_TAB 
                                                DC_5:     
                                                ;	    DC /5     FSUBR mem8r     0 := mem8r - 0
000013C1: DC 2E                                      FSUBR qword [esi] 
000013C3: E9 A8 02 00 00                        jmp end_DC_TAB 
                                                DC_6:         
                                                ;	    DC /6     FDIV mem8r      0 := 0 / mem8r
000013C8: DC 36                                      FDIV qword [esi]
000013CA: E9 A1 02 00 00                        jmp end_DC_TAB 
                                                DC_7:  
                                                ;	    DC /7     FDIVR mem8r     0 := mem8r / 0
000013CF: DC 3E                                      FDIVR qword [esi]  
000013D1: E9 9A 02 00 00                        jmp end_DC_TAB
                                                
                                                    ;;;;;;;;;;;;;;;;;;;; special processing ;;;;;;;;;;;;;;
                                                    
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_DC:        
000013D6: 3D C8 00 00 00                            cmp eax, 0C8h
000013DB: 72 47                                     jb  DC_C0_i  
000013DD: 3D D0 00 00 00                            cmp eax, 0D0h
000013E2: 0F 82 A5 00 00 00                         jb  DC_C8_i      
000013E8: 3D D8 00 00 00                            cmp eax, 0D8h
000013ED: 0F 82 03 01 00 00                         jb  DC_D0_i       ; reserved
000013F3: 3D E0 00 00 00                            cmp eax, 0E0h
000013F8: 0F 82 FF 00 00 00                         jb  DC_D8_i       ; reserved
000013FE: 3D E8 00 00 00                            cmp eax, 0E8h
00001403: 0F 82 FB 00 00 00                         jb  DC_E0_i  
00001409: 3D F0 00 00 00                            cmp eax, 0F0h
0000140E: 0F 82 59 01 00 00                         jb  DC_E8_i 
00001414: 3D F8 00 00 00                            cmp eax, 0F8h
00001419: 0F 82 B7 01 00 00                         jb  DC_F0_i           
                                                     
0000141F: E9 00 02 00 00                            jmp DC_F8_i       ; F8+
                                                        
                                                DC_C0_i:
                                                ;	    DC C0+i   FADD i,0        i := i + 0
00001424: 2D C0 00 00 00                                SUB eax, 0C0h   ; get index
00001429: 74 2A                                         jZ  FADD_0
0000142B: 83 F8 01                                      cmp eax, 1
0000142E: 74 2C                                         je  FADD_1
00001430: 83 F8 02                                      cmp eax, 2
00001433: 74 2E                                         je  FADD_2
00001435: 83 F8 03                                      cmp eax, 3
00001438: 74 30                                         je  FADD_3
0000143A: 83 F8 04                                      cmp eax, 4
0000143D: 74 32                                         je  FADD_4
0000143F: 83 F8 05                                      cmp eax, 5
00001442: 74 34                                         je  FADD_5
00001444: 83 F8 06                                      cmp eax, 6
00001447: 74 36                                         je  FADD_6
00001449: 83 F8 07                                      cmp eax, 7
0000144C: 74 38                                         je  FADD_7        
0000144E: D9 D0                                         fnop            ; wrong index
00001450: E9 1B 02 00 00                                jmp end_DC_SP  
                                                FADD_0:          
00001455: D8 C0                                         FADD st0, st0 
00001457: E9 14 02 00 00                                jmp end_DC_SP
                                                FADD_1:                     
0000145C: DC C1                                         FADD st1, st0
0000145E: E9 0D 02 00 00                                jmp end_DC_SP
                                                FADD_2:          
00001463: DC C2                                         FADD st2, st0  
00001465: E9 06 02 00 00                                jmp end_DC_SP
                                                FADD_3:        
0000146A: DC C3                                         FADD st3, st0                  
0000146C: E9 FF 01 00 00                                jmp end_DC_SP
                                                FADD_4:        
00001471: DC C4                                         FADD st4, st0
00001473: E9 F8 01 00 00                                jmp end_DC_SP
                                                FADD_5:        
00001478: DC C5                                         FADD st5, st0
0000147A: E9 F1 01 00 00                                jmp end_DC_SP
                                                FADD_6:        
0000147F: DC C6                                         FADD st6, st0
00001481: E9 EA 01 00 00                                jmp end_DC_SP
                                                FADD_7:        
00001486: DC C7                                         FADD st7, st0
00001488: E9 E3 01 00 00                                jmp end_DC_SP 
                                                
                                                DC_C8_i:
                                                ;	    DC C8+i   FMUL i,0        i := i * 0
0000148D: 2D C8 00 00 00                                SUB eax, 0C8h   ; get index
00001492: 74 2A                                         jZ  FMUL_i_0
00001494: 83 F8 01                                      cmp eax, 1
00001497: 74 2C                                         je  FMUL_i_1
00001499: 83 F8 02                                      cmp eax, 2
0000149C: 74 2E                                         je  FMUL_i_2
0000149E: 83 F8 03                                      cmp eax, 3
000014A1: 74 30                                         je  FMUL_i_3
000014A3: 83 F8 04                                      cmp eax, 4
000014A6: 74 32                                         je  FMUL_i_4
000014A8: 83 F8 05                                      cmp eax, 5
000014AB: 74 34                                         je  FMUL_i_5
000014AD: 83 F8 06                                      cmp eax, 6
000014B0: 74 36                                         je  FMUL_i_6
000014B2: 83 F8 07                                      cmp eax, 7
000014B5: 74 38                                         je  FMUL_i_7        
000014B7: D9 D0                                         fnop            ; wrong index
000014B9: E9 B2 01 00 00                                jmp end_DC_SP  
                                                FMUL_i_0:          
000014BE: D8 C8                                         FMUL st0, st0 
000014C0: E9 AB 01 00 00                                jmp end_DC_SP
                                                FMUL_i_1:                     
000014C5: DC C9                                         FMUL st1, st0 
000014C7: E9 A4 01 00 00                                jmp end_DC_SP
                                                FMUL_i_2:          
000014CC: DC CA                                         FMUL st2, st0   
000014CE: E9 9D 01 00 00                                jmp end_DC_SP
                                                FMUL_i_3:        
000014D3: DC CB                                         FMUL st3, st0                   
000014D5: E9 96 01 00 00                                jmp end_DC_SP
                                                FMUL_i_4:        
000014DA: DC CC                                         FMUL st4, st0 
000014DC: E9 8F 01 00 00                                jmp end_DC_SP
                                                FMUL_i_5:        
000014E1: DC CD                                         FMUL st5, st0 
000014E3: E9 88 01 00 00                                jmp end_DC_SP
                                                FMUL_i_6:        
000014E8: DC CE                                         FMUL st6, st0 
000014EA: E9 81 01 00 00                                jmp end_DC_SP
                                                FMUL_i_7:        
000014EF: DC CF                                         FMUL st7, st0 
000014F1: E9 7A 01 00 00                                jmp end_DC_SP 
                                                
                                                DC_D0_i:
                                                       ; reserved  
000014F6: D9 D0                                        FNOP
000014F8: E9 73 01 00 00                               jmp end_DC_SP
                                                DC_D8_i:
                                                       ; reserved 
000014FD: D9 D0                                        FNOP
000014FF: E9 6C 01 00 00                               jmp end_DC_SP
                                                
                                                DC_E0_i:
                                                ;	    DC E0+i   FSUBR i,0       i := 0 - i
00001504: 2D E0 00 00 00                                SUB eax, 0E0h   ; get index
00001509: 74 2A                                         jZ  FSUBR_i_0
0000150B: 83 F8 01                                      cmp eax, 1
0000150E: 74 2C                                         je  FSUBR_i_1
00001510: 83 F8 02                                      cmp eax, 2
00001513: 74 2E                                         je  FSUBR_i_2
00001515: 83 F8 03                                      cmp eax, 3
00001518: 74 30                                         je  FSUBR_i_3
0000151A: 83 F8 04                                      cmp eax, 4
0000151D: 74 32                                         je  FSUBR_i_4
0000151F: 83 F8 05                                      cmp eax, 5
00001522: 74 34                                         je  FSUBR_i_5
00001524: 83 F8 06                                      cmp eax, 6
00001527: 74 36                                         je  FSUBR_i_6
00001529: 83 F8 07                                      cmp eax, 7
0000152C: 74 38                                         je  FSUBR_i_7        
0000152E: D9 D0                                         fnop            ; wrong index
00001530: E9 3B 01 00 00                                jmp end_DC_SP  
                                                FSUBR_i_0:          
00001535: D8 E8                                         FSUBR st0, st0 
00001537: E9 34 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_1:                     
0000153C: DC E1                                         FSUBR st1, st0 
0000153E: E9 2D 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_2:          
00001543: DC E2                                         FSUBR st2, st0   
00001545: E9 26 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_3:        
0000154A: DC E3                                         FSUBR st3, st0                   
0000154C: E9 1F 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_4:        
00001551: DC E4                                         FSUBR st4, st0 
00001553: E9 18 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_5:        
00001558: DC E5                                         FSUBR st5, st0 
0000155A: E9 11 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_6:        
0000155F: DC E6                                         FSUBR st6, st0 
00001561: E9 0A 01 00 00                                jmp end_DC_SP
                                                FSUBR_i_7:        
00001566: DC E7                                         FSUBR st7, st0 
00001568: E9 03 01 00 00                                jmp end_DC_SP 
                                                 
                                                DC_E8_i:
                                                ;	    DC E8+i   FSUB i,0        i := i - 0
0000156D: 2D E8 00 00 00                                SUB eax, 0E8h   ; get index
00001572: 74 2A                                         jZ  FSUB_i_0
00001574: 83 F8 01                                      cmp eax, 1
00001577: 74 2C                                         je  FSUB_i_1
00001579: 83 F8 02                                      cmp eax, 2
0000157C: 74 2E                                         je  FSUB_i_2
0000157E: 83 F8 03                                      cmp eax, 3
00001581: 74 30                                         je  FSUB_i_3
00001583: 83 F8 04                                      cmp eax, 4
00001586: 74 32                                         je  FSUB_i_4
00001588: 83 F8 05                                      cmp eax, 5
0000158B: 74 34                                         je  FSUB_i_5
0000158D: 83 F8 06                                      cmp eax, 6
00001590: 74 36                                         je  FSUB_i_6
00001592: 83 F8 07                                      cmp eax, 7
00001595: 74 38                                         je  FSUB_i_7        
00001597: D9 D0                                         fnop            ; wrong index
00001599: E9 D2 00 00 00                                jmp end_DC_SP  
                                                FSUB_i_0:          
0000159E: D8 E0                                         FSUB st0, st0 
000015A0: E9 CB 00 00 00                                jmp end_DC_SP
                                                FSUB_i_1:                     
000015A5: DC E9                                         FSUB st1, st0 
000015A7: E9 C4 00 00 00                                jmp end_DC_SP
                                                FSUB_i_2:          
000015AC: DC EA                                         FSUB st2, st0   
000015AE: E9 BD 00 00 00                                jmp end_DC_SP
                                                FSUB_i_3:        
000015B3: DC EB                                         FSUB st3, st0                   
000015B5: E9 B6 00 00 00                                jmp end_DC_SP
                                                FSUB_i_4:        
000015BA: DC EC                                         FSUB st4, st0 
000015BC: E9 AF 00 00 00                                jmp end_DC_SP
                                                FSUB_i_5:        
000015C1: DC ED                                         FSUB st5, st0 
000015C3: E9 A8 00 00 00                                jmp end_DC_SP
                                                FSUB_i_6:        
000015C8: DC EE                                         FSUB st6, st0 
000015CA: E9 A1 00 00 00                                jmp end_DC_SP
                                                FSUB_i_7:        
000015CF: DC EF                                         FSUB st7, st0 
000015D1: E9 9A 00 00 00                                jmp end_DC_SP  
                                                
                                                DC_F0_i:
                                                ;	    DC F0+i   FDIVR i,0       i := 0 / i
000015D6: 2D F0 00 00 00                                SUB eax, 0F0h   ; get index
000015DB: 74 27                                         jZ  FDIVR_i_0
000015DD: 83 F8 01                                      cmp eax, 1
000015E0: 74 26                                         je  FDIVR_i_1
000015E2: 83 F8 02                                      cmp eax, 2
000015E5: 74 25                                         je  FDIVR_i_2
000015E7: 83 F8 03                                      cmp eax, 3
000015EA: 74 24                                         je  FDIVR_i_3
000015EC: 83 F8 04                                      cmp eax, 4
000015EF: 74 23                                         je  FDIVR_i_4
000015F1: 83 F8 05                                      cmp eax, 5
000015F4: 74 22                                         je  FDIVR_i_5
000015F6: 83 F8 06                                      cmp eax, 6
000015F9: 74 21                                         je  FDIVR_i_6
000015FB: 83 F8 07                                      cmp eax, 7
000015FE: 74 20                                         je  FDIVR_i_7        
00001600: D9 D0                                         fnop            ; wrong index
00001602: EB 6C                                         jmp end_DC_SP  
                                                FDIVR_i_0:          
00001604: D8 F8                                         FDIVR st0, st0 
00001606: EB 68                                         jmp end_DC_SP
                                                FDIVR_i_1:                     
00001608: DC F1                                         FDIVR st1, st0 
0000160A: EB 64                                         jmp end_DC_SP
                                                FDIVR_i_2:          
0000160C: DC F2                                         FDIVR st2, st0   
0000160E: EB 60                                         jmp end_DC_SP
                                                FDIVR_i_3:        
00001610: DC F3                                         FDIVR st3, st0                   
00001612: EB 5C                                         jmp end_DC_SP
                                                FDIVR_i_4:        
00001614: DC F4                                         FDIVR st4, st0 
00001616: EB 58                                         jmp end_DC_SP
                                                FDIVR_i_5:        
00001618: DC F5                                         FDIVR st5, st0 
0000161A: EB 54                                         jmp end_DC_SP
                                                FDIVR_i_6:        
0000161C: DC F6                                         FDIVR st6, st0 
0000161E: EB 50                                         jmp end_DC_SP
                                                FDIVR_i_7:        
00001620: DC F7                                         FDIVR st7, st0 
00001622: EB 4C                                         jmp end_DC_SP  
                                                
                                                DC_F8_i:
                                                ;	    DC F8+i   FDIV i,0        i := i / 0
00001624: 2D F8 00 00 00                                SUB eax, 0F8h   ; get index
00001629: 74 27                                         jZ  FDIV_i_0
0000162B: 83 F8 01                                      cmp eax, 1
0000162E: 74 26                                         je  FDIV_i_1
00001630: 83 F8 02                                      cmp eax, 2
00001633: 74 25                                         je  FDIV_i_2
00001635: 83 F8 03                                      cmp eax, 3
00001638: 74 24                                         je  FDIV_i_3
0000163A: 83 F8 04                                      cmp eax, 4
0000163D: 74 23                                         je  FDIV_i_4
0000163F: 83 F8 05                                      cmp eax, 5
00001642: 74 22                                         je  FDIV_i_5
00001644: 83 F8 06                                      cmp eax, 6
00001647: 74 21                                         je  FDIV_i_6
00001649: 83 F8 07                                      cmp eax, 7
0000164C: 74 20                                         je  FDIV_i_7        
0000164E: D9 D0                                         fnop            ; wrong index
00001650: EB 1E                                         jmp end_DC_SP  
                                                FDIV_i_0:          
00001652: D8 F0                                         FDIV st0, st0 
00001654: EB 1A                                         jmp end_DC_SP
                                                FDIV_i_1:                     
00001656: DC F9                                         FDIV st1, st0 
00001658: EB 16                                         jmp end_DC_SP
                                                FDIV_i_2:          
0000165A: DC FA                                         FDIV st2, st0   
0000165C: EB 12                                         jmp end_DC_SP
                                                FDIV_i_3:        
0000165E: DC FB                                         FDIV st3, st0                   
00001660: EB 0E                                         jmp end_DC_SP
                                                FDIV_i_4:        
00001662: DC FC                                         FDIV st4, st0 
00001664: EB 0A                                         jmp end_DC_SP
                                                FDIV_i_5:        
00001666: DC FD                                         FDIV st5, st0 
00001668: EB 06                                         jmp end_DC_SP
                                                FDIV_i_6:        
0000166A: DC FE                                         FDIV st6, st0 
0000166C: EB 02                                         jmp end_DC_SP
                                                FDIV_i_7:        
0000166E: DC FF                                         FDIV st7, st0 
                                                        ; NR ; jmp end_DC_SP
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                     
                                                end_DC_SP:
                                                end_DC_TAB:     
00001670: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
00001673: 9B DD 33                              	FSAVE [ebx]    
00001676: 9B                                        fwait 
                                                    
00001677: 9B DB E2                                  FCLEX
                                                    
                                                    ; restore....      
0000167A: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
0000167F: DD 23                                 	FRSTOR [ebx] 
00001681: 9B                                        fwait
                                                    
                                                    ; restore
00001682: 8B 5D F0                                  mov ebx, [tEBX]
00001685: 8B 75 F4                                  mov esi, [tESI]
00001688: 8B 55 F8                                  mov edx, [tEDX]
0000168B: 8B 4D FC                                  mov ecx, [tECX]
                                                 
0000168E: 9D                                        popf
                                                    
                                                	;eax=WHAT EVER
0000168F: C9 C2 0C 00                           	ret  
                                                endp
                                                
                                                
                                                
                                                
                                                 
                                                 
                                                 
                                                
                                                
                                                
                                                
                                                
                                                
00001693: 55 89 E5 83 EC 10                     proc MicroAsm_DD_TAB lEA_TAB, mem8r, mem94, mem2i, virtual87state_94bytes
                                                    local tEBX:DWORD,  tESI:DWORD,   tEDX:DWORD,  tECX:DWORD 
00001699: 9C                                    	pushf
                                                	;cli 
                                                
                                                    ; store                                                                  
0000169A: 89 5D F0                                  mov [tEBX], ebx
0000169D: 89 75 F4                                  mov [tESI], esi
000016A0: 89 55 F8                                  mov [tEDX], edx
000016A3: 89 4D FC                                  mov [tECX], ecx
                                                	
                                                	; FPU ->
000016A6: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
000016AB: 9B DD 33                              	FSAVE [ebx] 
000016AE: 9B                                        fwait
                                                     
                                                    ; FPU <-       	      
000016AF: 8B 5D 18                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
000016B2: DD 23                                 	FRSTOR [ebx]
000016B4: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;; 
                                                	 
000016B5: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
000016B8: 8B 75 0C                              	mov esi, [mem8r]        ; pointer to pointer   
000016BB: 8B 55 10                                  mov edx, [mem94]        ; pointer to pointer
000016BE: 8B 4D 14                                  mov ecx, [mem2i]        ; pointer to pointer
                                                    
                                                      
000016C1: 8B 03                                 	mov eax, [ebx] 	
000016C3: 83 F8 00                                  cmp eax, 0
000016C6: 74 25                                     je  DD_0  
000016C8: 83 F8 01                                  cmp eax, 1
000016CB: 74 27                                     je  DD_1
000016CD: 83 F8 02                                  cmp eax, 2
000016D0: 74 29                                     je  DD_2
000016D2: 83 F8 03                                  cmp eax, 3
000016D5: 74 2B                                     je  DD_3
000016D7: 83 F8 04                                  cmp eax, 4
000016DA: 74 2D                                     je  DD_4
000016DC: 83 F8 05                                  cmp eax, 5
000016DF: 74 2F                                     je  DD_5
000016E1: 83 F8 06                                  cmp eax, 6
000016E4: 74 31                                     je  DD_6  
000016E6: 83 F8 07                                  cmp eax, 7
000016E9: 74 34                                     je  DD_7     
000016EB: EB 3A                                     jmp special_processing_DD
                                                DD_0:   
                                                ;	    DD /0     FLD mem8r       push, 0 := mem8r
000016ED: DD 06                                      FLD qword [esi]
000016EF: E9 65 02 00 00                        jmp end_DD_TAB         
                                                DD_1:
                                                ;       RESERVED  
000016F4: D9 D0                                      FNOP
000016F6: E9 5E 02 00 00                        jmp end_DD_TAB 
                                                DD_2:     
                                                ;	    DD /2     FST mem8r       mem8r := 0
000016FB: DD 16                                      FST qword [esi]
000016FD: E9 57 02 00 00                        jmp end_DD_TAB 
                                                DD_3:       
                                                ;	    DD /3     FSTP mem8r      mem8r := 0, pop
00001702: DD 1E                                      FSTP qword [esi]
00001704: E9 50 02 00 00                        jmp end_DD_TAB 
                                                DD_4:   
                                                ;	    DD /4     FRSTOR mem94    87 state := mem94
00001709: DD 22                                      FRSTOR [edx]   ; 94 bit pointer
0000170B: E9 49 02 00 00                        jmp end_DD_TAB 
                                                DD_5:     
                                                ;	    RESERVED
00001710: D9 D0                                      FNOP 
00001712: E9 42 02 00 00                        jmp end_DD_TAB 
                                                DD_6:         
                                                ;	    DD /6     FSAVE mem94     mem94 := 87 state
00001717: 9B DD 32                                   FSAVE [edx]   ; 94 bit pointer
0000171A: E9 3A 02 00 00                        jmp end_DD_TAB 
                                                DD_7:  
                                                ;	    DD /7     FSTSW mem2i     mem2i := status word
0000171F: 9B DD 39                                   FSTSW word [ecx]  
00001722: E9 32 02 00 00                        jmp end_DD_TAB
                                                
                                                    ;;;;;;;;;;;;;;;;;;;; special processing ;;;;;;;;;;;;;;
                                                    
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_DD:        
00001727: 3D C8 00 00 00                            cmp eax, 0C8h
0000172C: 72 47                                     jb  DD_C0_i  
0000172E: 3D D0 00 00 00                            cmp eax, 0D0h
00001733: 0F 82 A5 00 00 00                         jb  DD_C8_i      ; RESERVED
00001739: 3D D8 00 00 00                            cmp eax, 0D8h
0000173E: 0F 82 A1 00 00 00                         jb  DD_D0_i
00001744: 3D E0 00 00 00                            cmp eax, 0E0h
00001749: 0F 82 FF 00 00 00                         jb  DD_D8_i 
0000174F: 3D E8 00 00 00                            cmp eax, 0E8h
00001754: 0F 82 5D 01 00 00                         jb  DD_E0_i  
0000175A: 3D F0 00 00 00                            cmp eax, 0F0h
0000175F: 0F 82 A0 01 00 00                         jb  DD_E8_i 
00001765: 3D F8 00 00 00                            cmp eax, 0F8h
0000176A: 0F 82 E3 01 00 00                         jb  DD_F0_i           
                                                     
00001770: E9 E2 01 00 00                            jmp DD_F8_i       ; F8+
                                                        
                                                DD_C0_i:
                                                ;	    DD C0+i   FFREE i         empty i
00001775: 2D C0 00 00 00                                SUB eax, 0C0h   ; get index
0000177A: 74 2A                                         jZ  FFREE_0
0000177C: 83 F8 01                                      cmp eax, 1
0000177F: 74 2C                                         je  FFREE_1
00001781: 83 F8 02                                      cmp eax, 2
00001784: 74 2E                                         je  FFREE_2
00001786: 83 F8 03                                      cmp eax, 3
00001789: 74 30                                         je  FFREE_3
0000178B: 83 F8 04                                      cmp eax, 4
0000178E: 74 32                                         je  FFREE_4
00001790: 83 F8 05                                      cmp eax, 5
00001793: 74 34                                         je  FFREE_5
00001795: 83 F8 06                                      cmp eax, 6
00001798: 74 36                                         je  FFREE_6
0000179A: 83 F8 07                                      cmp eax, 7
0000179D: 74 38                                         je  FFREE_7        
0000179F: D9 D0                                         fnop            ; wrong index
000017A1: E9 B3 01 00 00                                jmp end_DD_SP  
                                                FFREE_0:          
000017A6: DD C0                                         FFREE st0 
000017A8: E9 AC 01 00 00                                jmp end_DD_SP
                                                FFREE_1:                     
000017AD: DD C1                                         FFREE st1
000017AF: E9 A5 01 00 00                                jmp end_DD_SP
                                                FFREE_2:          
000017B4: DD C2                                         FFREE st2  
000017B6: E9 9E 01 00 00                                jmp end_DD_SP
                                                FFREE_3:        
000017BB: DD C3                                         FFREE st3                  
000017BD: E9 97 01 00 00                                jmp end_DD_SP
                                                FFREE_4:        
000017C2: DD C4                                         FFREE st4
000017C4: E9 90 01 00 00                                jmp end_DD_SP
                                                FFREE_5:        
000017C9: DD C5                                         FFREE st5
000017CB: E9 89 01 00 00                                jmp end_DD_SP
                                                FFREE_6:        
000017D0: DD C6                                         FFREE st6
000017D2: E9 82 01 00 00                                jmp end_DD_SP
                                                FFREE_7:        
000017D7: DD C7                                         FFREE st7
000017D9: E9 7B 01 00 00                                jmp end_DD_SP 
                                                
                                                DD_C8_i:
                                                ;	    RESERVED   
000017DE: D9 D0                                         fnop            ; wrong index
000017E0: E9 74 01 00 00                                jmp end_DD_SP  
                                                DD_D0_i: 
                                                ;       DD D0+i   FST i           i := 0
000017E5: 2D D0 00 00 00                                SUB eax, 0D0h   ; get index
000017EA: 74 2A                                         jZ  FST_i_0
000017EC: 83 F8 01                                      cmp eax, 1
000017EF: 74 2C                                         je  FST_i_1
000017F1: 83 F8 02                                      cmp eax, 2
000017F4: 74 2E                                         je  FST_i_2
000017F6: 83 F8 03                                      cmp eax, 3
000017F9: 74 30                                         je  FST_i_3
000017FB: 83 F8 04                                      cmp eax, 4
000017FE: 74 32                                         je  FST_i_4
00001800: 83 F8 05                                      cmp eax, 5
00001803: 74 34                                         je  FST_i_5
00001805: 83 F8 06                                      cmp eax, 6
00001808: 74 36                                         je  FST_i_6
0000180A: 83 F8 07                                      cmp eax, 7
0000180D: 74 38                                         je  FST_i_7        
0000180F: D9 D0                                         fnop            ; wrong index
00001811: E9 43 01 00 00                                jmp end_DD_SP  
                                                FST_i_0:          
00001816: DD D0                                         FST st0
00001818: E9 3C 01 00 00                                jmp end_DD_SP
                                                FST_i_1:                     
0000181D: DD D1                                         FST st1 
0000181F: E9 35 01 00 00                                jmp end_DD_SP
                                                FST_i_2:          
00001824: DD D2                                         FST st2   
00001826: E9 2E 01 00 00                                jmp end_DD_SP
                                                FST_i_3:        
0000182B: DD D3                                         FST st3                   
0000182D: E9 27 01 00 00                                jmp end_DD_SP
                                                FST_i_4:        
00001832: DD D4                                         FST st4 
00001834: E9 20 01 00 00                                jmp end_DD_SP
                                                FST_i_5:        
00001839: DD D5                                         FST st5 
0000183B: E9 19 01 00 00                                jmp end_DD_SP
                                                FST_i_6:        
00001840: DD D6                                         FST st6 
00001842: E9 12 01 00 00                                jmp end_DD_SP
                                                FST_i_7:        
00001847: DD D7                                         FST st7 
00001849: E9 0B 01 00 00                                jmp end_DD_SP 
                                                
                                                
                                                
                                                  
                                                DD_D8_i:
                                                ;       DD D8+i   FSTP i          i := 0, pop
0000184E: 2D D8 00 00 00                                SUB eax, 0D8h   ; get index
00001853: 74 2A                                         jZ  FSTP_i_0
00001855: 83 F8 01                                      cmp eax, 1
00001858: 74 2C                                         je  FSTP_i_1
0000185A: 83 F8 02                                      cmp eax, 2
0000185D: 74 2E                                         je  FSTP_i_2
0000185F: 83 F8 03                                      cmp eax, 3
00001862: 74 30                                         je  FSTP_i_3
00001864: 83 F8 04                                      cmp eax, 4
00001867: 74 32                                         je  FSTP_i_4
00001869: 83 F8 05                                      cmp eax, 5
0000186C: 74 34                                         je  FSTP_i_5
0000186E: 83 F8 06                                      cmp eax, 6
00001871: 74 36                                         je  FSTP_i_6
00001873: 83 F8 07                                      cmp eax, 7
00001876: 74 38                                         je  FSTP_i_7        
00001878: D9 D0                                         fnop            ; wrong index
0000187A: E9 DA 00 00 00                                jmp end_DD_SP  
                                                FSTP_i_0:          
0000187F: DD D8                                         FSTP st0
00001881: E9 D3 00 00 00                                jmp end_DD_SP
                                                FSTP_i_1:                     
00001886: DD D9                                         FSTP st1 
00001888: E9 CC 00 00 00                                jmp end_DD_SP
                                                FSTP_i_2:          
0000188D: DD DA                                         FSTP st2   
0000188F: E9 C5 00 00 00                                jmp end_DD_SP
                                                FSTP_i_3:        
00001894: DD DB                                         FSTP st3                   
00001896: E9 BE 00 00 00                                jmp end_DD_SP
                                                FSTP_i_4:        
0000189B: DD DC                                         FSTP st4 
0000189D: E9 B7 00 00 00                                jmp end_DD_SP
                                                FSTP_i_5:        
000018A2: DD DD                                         FSTP st5 
000018A4: E9 B0 00 00 00                                jmp end_DD_SP
                                                FSTP_i_6:        
000018A9: DD DE                                         FSTP st6 
000018AB: E9 A9 00 00 00                                jmp end_DD_SP
                                                FSTP_i_7:        
000018B0: DD DF                                         FSTP st7 
000018B2: E9 A2 00 00 00                                jmp end_DD_SP 
                                                
                                                
                                                
                                                
                                                
                                                
                                                DD_E0_i:
                                                ;	    DD E0+i   FUCOM i         387 only: unordered compare 0 - i
000018B7: 2D E0 00 00 00                                SUB eax, 0E0h   ; get index
000018BC: 74 27                                         jZ  FUCOM_i_0
000018BE: 83 F8 01                                      cmp eax, 1
000018C1: 74 26                                         je  FUCOM_i_1
000018C3: 83 F8 02                                      cmp eax, 2
000018C6: 74 25                                         je  FUCOM_i_2
000018C8: 83 F8 03                                      cmp eax, 3
000018CB: 74 24                                         je  FUCOM_i_3
000018CD: 83 F8 04                                      cmp eax, 4
000018D0: 74 23                                         je  FUCOM_i_4
000018D2: 83 F8 05                                      cmp eax, 5
000018D5: 74 22                                         je  FUCOM_i_5
000018D7: 83 F8 06                                      cmp eax, 6
000018DA: 74 21                                         je  FUCOM_i_6
000018DC: 83 F8 07                                      cmp eax, 7
000018DF: 74 20                                         je  FUCOM_i_7        
000018E1: D9 D0                                         fnop            ; wrong index
000018E3: EB 74                                         jmp end_DD_SP  
                                                FUCOM_i_0:          
000018E5: DD E0                                         FUCOM st0 
000018E7: EB 70                                         jmp end_DD_SP
                                                FUCOM_i_1:                     
000018E9: DD E1                                         FUCOM st1
000018EB: EB 6C                                         jmp end_DD_SP
                                                FUCOM_i_2:          
000018ED: DD E2                                         FUCOM st2   
000018EF: EB 68                                         jmp end_DD_SP
                                                FUCOM_i_3:        
000018F1: DD E3                                         FUCOM st3                   
000018F3: EB 64                                         jmp end_DD_SP
                                                FUCOM_i_4:        
000018F5: DD E4                                         FUCOM st4 
000018F7: EB 60                                         jmp end_DD_SP
                                                FUCOM_i_5:        
000018F9: DD E5                                         FUCOM st5 
000018FB: EB 5C                                         jmp end_DD_SP
                                                FUCOM_i_6:        
000018FD: DD E6                                         FUCOM st6 
000018FF: EB 58                                         jmp end_DD_SP
                                                FUCOM_i_7:        
00001901: DD E7                                         FUCOM st7 
00001903: EB 54                                         jmp end_DD_SP 
                                                                 
                                                                 
                                                DD_E8_i:
                                                ;	    DD E8+i   FUCOMP i        387 only: unordered compare 0 - i, pop
00001905: 2D E8 00 00 00                                SUB eax, 0E8h   ; get index
0000190A: 74 27                                         jZ  FUCOMP_i_0
0000190C: 83 F8 01                                      cmp eax, 1
0000190F: 74 26                                         je  FUCOMP_i_1
00001911: 83 F8 02                                      cmp eax, 2
00001914: 74 25                                         je  FUCOMP_i_2
00001916: 83 F8 03                                      cmp eax, 3
00001919: 74 24                                         je  FUCOMP_i_3
0000191B: 83 F8 04                                      cmp eax, 4
0000191E: 74 23                                         je  FUCOMP_i_4
00001920: 83 F8 05                                      cmp eax, 5
00001923: 74 22                                         je  FUCOMP_i_5
00001925: 83 F8 06                                      cmp eax, 6
00001928: 74 21                                         je  FUCOMP_i_6
0000192A: 83 F8 07                                      cmp eax, 7
0000192D: 74 20                                         je  FUCOMP_i_7        
0000192F: D9 D0                                         fnop            ; wrong index
00001931: EB 26                                         jmp end_DD_SP  
                                                FUCOMP_i_0:          
00001933: DD E8                                         FUCOMP st0
00001935: EB 22                                         jmp end_DD_SP
                                                FUCOMP_i_1:                     
00001937: DD E9                                         FUCOMP st1 
00001939: EB 1E                                         jmp end_DD_SP
                                                FUCOMP_i_2:          
0000193B: DD EA                                         FUCOMP st2   
0000193D: EB 1A                                         jmp end_DD_SP
                                                FUCOMP_i_3:        
0000193F: DD EB                                         FUCOMP st3                  
00001941: EB 16                                         jmp end_DD_SP
                                                FUCOMP_i_4:        
00001943: DD EC                                         FUCOMP st4
00001945: EB 12                                         jmp end_DD_SP
                                                FUCOMP_i_5:        
00001947: DD ED                                         FUCOMP st5
00001949: EB 0E                                         jmp end_DD_SP
                                                FUCOMP_i_6:        
0000194B: DD EE                                         FUCOMP st6
0000194D: EB 0A                                         jmp end_DD_SP
                                                FUCOMP_i_7:        
0000194F: DD EF                                         FUCOMP st7
00001951: EB 06                                         jmp end_DD_SP  
                                                
                                                DD_F0_i:
                                                ;	    RESERVED
00001953: D9 D0                                         FNOP
00001955: EB 02                                         jmp end_DD_SP  
                                                
                                                DD_F8_i:
                                                ;	    RESERVED
00001957: D9 D0                                         FNOP
                                                        ; NR ; jmp end_DD_SP
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                     
                                                end_DD_SP:
                                                end_DD_TAB:     
00001959: 8B 5D 18                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
0000195C: 9B DD 33                              	FSAVE [ebx]    
0000195F: 9B                                        fwait 
                                                    
00001960: 9B DB E2                                  FCLEX
                                                    
                                                    ; restore....      
00001963: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00001968: DD 23                                 	FRSTOR [ebx] 
0000196A: 9B                                        fwait
                                                    
                                                    ; restore
0000196B: 8B 5D F0                                  mov ebx, [tEBX]
0000196E: 8B 75 F4                                  mov esi, [tESI]
00001971: 8B 55 F8                                  mov edx, [tEDX]
00001974: 8B 4D FC                                  mov ecx, [tECX]
                                                 
00001977: 9D                                        popf
                                                    
                                                	;eax=WHAT EVER
00001978: C9 C2 14 00                           	ret  
                                                endp
                                                 
                                                 
                                                
                                                
                                                  
                                                  
                                                  
                                                  
                                                  
                                                  
                                                
                                                
0000197C: 55 89 E5 83 EC 10                     proc MicroAsm_DE_TAB lEA_TAB, mem2i, virtual87state_94bytes
                                                    local tEBX:DWORD,  tESI:DWORD,   tEDX:DWORD,  tECX:DWORD 
00001982: 9C                                    	pushf
                                                	;cli 
                                                
                                                    ; store                                                                  
00001983: 89 5D F0                                  mov [tEBX], ebx
00001986: 89 75 F4                                  mov [tESI], esi
00001989: 89 55 F8                                  mov [tEDX], edx
0000198C: 89 4D FC                                  mov [tECX], ecx
                                                	
                                                	; FPU ->
0000198F: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00001994: 9B DD 33                              	FSAVE [ebx] 
00001997: 9B                                        fwait
                                                     
                                                    ; FPU <-       	      
00001998: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
0000199B: DD 23                                 	FRSTOR [ebx]
0000199D: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;; 
                                                	 
0000199E: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
000019A1: 8B 75 0C                              	mov esi, [mem2i]        ; pointer to pointer   
                                                
                                                      
000019A4: 8B 03                                 	mov eax, [ebx] 	
000019A6: 83 F8 00                                  cmp eax, 0
000019A9: 74 25                                     je  DE_0  
000019AB: 83 F8 01                                  cmp eax, 1
000019AE: 74 27                                     je  DE_1
000019B0: 83 F8 02                                  cmp eax, 2
000019B3: 74 29                                     je  DE_2
000019B5: 83 F8 03                                  cmp eax, 3
000019B8: 74 2B                                     je  DE_3
000019BA: 83 F8 04                                  cmp eax, 4
000019BD: 74 2D                                     je  DE_4
000019BF: 83 F8 05                                  cmp eax, 5
000019C2: 74 2F                                     je  DE_5
000019C4: 83 F8 06                                  cmp eax, 6
000019C7: 74 31                                     je  DE_6  
000019C9: 83 F8 07                                  cmp eax, 7
000019CC: 74 33                                     je  DE_7     
000019CE: EB 38                                     jmp special_processing_DE
                                                DE_0:   
                                                ;A86:	DE /0     FIADD mem2i     0 := 0 + mem4i    (??????)   should be + mem2i
                                                ;INTEL: DE /0     FIADD m16int    Add   m16int to ST(0)      and store result in ST(0).  ; mem16i = word
000019D0: DE 06                                      FIADD word [esi]
000019D2: E9 D7 02 00 00                        jmp end_DE_TAB         
                                                DE_1:
                                                ;       DE /1     FIMUL mem2i     0 := 0 * mem2i  
000019D7: DE 0E                                      FIMUL word [esi]
000019D9: E9 D0 02 00 00                        jmp end_DE_TAB 
                                                DE_2:     
                                                ;	    DE /2     FICOM mem2i     compare 0 - mem2i
000019DE: DE 16                                      FICOM word [esi]
000019E0: E9 C9 02 00 00                        jmp end_DE_TAB 
                                                DE_3:       
                                                ;	    DE /3     FICOMP mem2i    compare 0 - mem2i, pop
000019E5: DE 1E                                      FICOMP word [esi]
000019E7: E9 C2 02 00 00                        jmp end_DE_TAB 
                                                DE_4:   
                                                ;	    DE /4     FISUB mem2i     0 := 0 - mem2i
000019EC: DE 26                                      FISUB word [esi]
000019EE: E9 BB 02 00 00                        jmp end_DE_TAB 
                                                DE_5:     
                                                ;	    DE /5     FISUBR mem2i    0 := mem2i - 0
000019F3: DE 2E                                      FISUBR word [esi] 
000019F5: E9 B4 02 00 00                        jmp end_DE_TAB 
                                                DE_6:         
                                                ;	    DE /6     FIDIV mem2i     0 := 0 / mem2i
000019FA: DE 36                                      FIDIV word [esi]
000019FC: E9 AD 02 00 00                        jmp end_DE_TAB 
                                                DE_7:  
                                                ;	    DE /7     FIDIVR mem2i    0 := mem2i / 0
00001A01: DE 3E                                      FIDIVR word [esi]  
00001A03: E9 A6 02 00 00                        jmp end_DE_TAB
                                                
                                                    ;;;;;;;;;;;;;;;;;;;; special processing ;;;;;;;;;;;;;;
                                                    
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_DE:        
00001A08: 3D C8 00 00 00                            cmp eax, 0C8h
00001A0D: 72 47                                     jb  DE_C0_i  
00001A0F: 3D D0 00 00 00                            cmp eax, 0D0h
00001A14: 0F 82 A5 00 00 00                         jb  DE_C8_i      
00001A1A: 3D D8 00 00 00                            cmp eax, 0D8h
00001A1F: 0F 82 03 01 00 00                         jb  DE_D0_i
00001A25: 3D E0 00 00 00                            cmp eax, 0E0h
00001A2A: 0F 82 FF 00 00 00                         jb  DE_D8_i       
00001A30: 3D E8 00 00 00                            cmp eax, 0E8h
00001A35: 0F 82 07 01 00 00                         jb  DE_E0_i  
00001A3B: 3D F0 00 00 00                            cmp eax, 0F0h
00001A40: 0F 82 65 01 00 00                         jb  DE_E8_i 
00001A46: 3D F8 00 00 00                            cmp eax, 0F8h
00001A4B: 0F 82 C3 01 00 00                         jb  DE_F0_i           
                                                     
00001A51: E9 0C 02 00 00                            jmp DE_F8_i       ; F8+
                                                        
                                                DE_C0_i:
                                                ;	    DE C0+i   FADDP i,0       i := i + 0, pop
00001A56: 2D C0 00 00 00                                SUB eax, 0C0h   ; get index
00001A5B: 74 2A                                         jZ  FADDP_0
00001A5D: 83 F8 01                                      cmp eax, 1
00001A60: 74 2C                                         je  FADDP_1
00001A62: 83 F8 02                                      cmp eax, 2
00001A65: 74 2E                                         je  FADDP_2
00001A67: 83 F8 03                                      cmp eax, 3
00001A6A: 74 30                                         je  FADDP_3
00001A6C: 83 F8 04                                      cmp eax, 4
00001A6F: 74 32                                         je  FADDP_4
00001A71: 83 F8 05                                      cmp eax, 5
00001A74: 74 34                                         je  FADDP_5
00001A76: 83 F8 06                                      cmp eax, 6
00001A79: 74 36                                         je  FADDP_6
00001A7B: 83 F8 07                                      cmp eax, 7
00001A7E: 74 38                                         je  FADDP_7        
00001A80: D9 D0                                         fnop            ; wrong index
00001A82: E9 27 02 00 00                                jmp end_DE_SP  
                                                FADDP_0:          
00001A87: DE C0                                         FADDP st0, st0 
00001A89: E9 20 02 00 00                                jmp end_DE_SP
                                                FADDP_1:                     
00001A8E: DE C1                                         FADDP st1, st0
00001A90: E9 19 02 00 00                                jmp end_DE_SP
                                                FADDP_2:          
00001A95: DE C2                                         FADDP st2, st0  
00001A97: E9 12 02 00 00                                jmp end_DE_SP
                                                FADDP_3:        
00001A9C: DE C3                                         FADDP st3, st0                  
00001A9E: E9 0B 02 00 00                                jmp end_DE_SP
                                                FADDP_4:        
00001AA3: DE C4                                         FADDP st4, st0
00001AA5: E9 04 02 00 00                                jmp end_DE_SP
                                                FADDP_5:        
00001AAA: DE C5                                         FADDP st5, st0
00001AAC: E9 FD 01 00 00                                jmp end_DE_SP
                                                FADDP_6:        
00001AB1: DE C6                                         FADDP st6, st0
00001AB3: E9 F6 01 00 00                                jmp end_DE_SP
                                                FADDP_7:        
00001AB8: DE C7                                         FADDP st7, st0
00001ABA: E9 EF 01 00 00                                jmp end_DE_SP 
                                                
                                                DE_C8_i:
                                                ;	    DE C8+i   FMULP i,0       i := i * 0, pop
00001ABF: 2D C8 00 00 00                                SUB eax, 0C8h   ; get index
00001AC4: 74 2A                                         jZ  FMULP_i_0
00001AC6: 83 F8 01                                      cmp eax, 1
00001AC9: 74 2C                                         je  FMULP_i_1
00001ACB: 83 F8 02                                      cmp eax, 2
00001ACE: 74 2E                                         je  FMULP_i_2
00001AD0: 83 F8 03                                      cmp eax, 3
00001AD3: 74 30                                         je  FMULP_i_3
00001AD5: 83 F8 04                                      cmp eax, 4
00001AD8: 74 32                                         je  FMULP_i_4
00001ADA: 83 F8 05                                      cmp eax, 5
00001ADD: 74 34                                         je  FMULP_i_5
00001ADF: 83 F8 06                                      cmp eax, 6
00001AE2: 74 36                                         je  FMULP_i_6
00001AE4: 83 F8 07                                      cmp eax, 7
00001AE7: 74 38                                         je  FMULP_i_7        
00001AE9: D9 D0                                         fnop            ; wrong index
00001AEB: E9 BE 01 00 00                                jmp end_DE_SP  
                                                FMULP_i_0:          
00001AF0: DE C8                                         FMULP st0, st0 
00001AF2: E9 B7 01 00 00                                jmp end_DE_SP
                                                FMULP_i_1:                     
00001AF7: DE C9                                         FMULP st1, st0 
00001AF9: E9 B0 01 00 00                                jmp end_DE_SP
                                                FMULP_i_2:          
00001AFE: DE CA                                         FMULP st2, st0   
00001B00: E9 A9 01 00 00                                jmp end_DE_SP
                                                FMULP_i_3:        
00001B05: DE CB                                         FMULP st3, st0                   
00001B07: E9 A2 01 00 00                                jmp end_DE_SP
                                                FMULP_i_4:        
00001B0C: DE CC                                         FMULP st4, st0 
00001B0E: E9 9B 01 00 00                                jmp end_DE_SP
                                                FMULP_i_5:        
00001B13: DE CD                                         FMULP st5, st0 
00001B15: E9 94 01 00 00                                jmp end_DE_SP
                                                FMULP_i_6:        
00001B1A: DE CE                                         FMULP st6, st0 
00001B1C: E9 8D 01 00 00                                jmp end_DE_SP
                                                FMULP_i_7:        
00001B21: DE CF                                         FMULP st7, st0 
00001B23: E9 86 01 00 00                                jmp end_DE_SP 
                                                
                                                DE_D0_i:
                                                ;       reserved  
00001B28: D9 D0                                         FNOP
00001B2A: E9 7F 01 00 00                                jmp end_DE_SP 
                                                          
                                                          
                                                          
                                                          
                                                DE_D8_i:  
00001B2F: 3D D9 00 00 00                               cmp eax, 0D9h
00001B34: 74 05                                        JE  DE_D9
00001B36: E9 73 01 00 00                               jmp end_DE_SP     ; ALL OTHERS RESERVED.
                                                DE_D9:
                                                ;      DE D9     FCOMPP          compare 0 - 1, pop both
00001B3B: DE D9                                        FCOMPP                                         
00001B3D: E9 6C 01 00 00                               jmp end_DE_SP
                                                            
                                                            
                                                            
                                                            
                                                            
                                                DE_E0_i:
                                                ;	    DE E0+i   FSUBRP i,0      i := 0 - i, pop
00001B42: 2D E0 00 00 00                                SUB eax, 0E0h   ; get index
00001B47: 74 2A                                         jZ  FSUBRP_i_0
00001B49: 83 F8 01                                      cmp eax, 1
00001B4C: 74 2C                                         je  FSUBRP_i_1
00001B4E: 83 F8 02                                      cmp eax, 2
00001B51: 74 2E                                         je  FSUBRP_i_2
00001B53: 83 F8 03                                      cmp eax, 3
00001B56: 74 30                                         je  FSUBRP_i_3
00001B58: 83 F8 04                                      cmp eax, 4
00001B5B: 74 32                                         je  FSUBRP_i_4
00001B5D: 83 F8 05                                      cmp eax, 5
00001B60: 74 34                                         je  FSUBRP_i_5
00001B62: 83 F8 06                                      cmp eax, 6
00001B65: 74 36                                         je  FSUBRP_i_6
00001B67: 83 F8 07                                      cmp eax, 7
00001B6A: 74 38                                         je  FSUBRP_i_7        
00001B6C: D9 D0                                         fnop            ; wrong index
00001B6E: E9 3B 01 00 00                                jmp end_DE_SP  
                                                FSUBRP_i_0:          
00001B73: DE E0                                         FSUBRP st0, st0 
00001B75: E9 34 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_1:                     
00001B7A: DE E1                                         FSUBRP st1, st0 
00001B7C: E9 2D 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_2:          
00001B81: DE E2                                         FSUBRP st2, st0   
00001B83: E9 26 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_3:        
00001B88: DE E3                                         FSUBRP st3, st0                   
00001B8A: E9 1F 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_4:        
00001B8F: DE E4                                         FSUBRP st4, st0 
00001B91: E9 18 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_5:        
00001B96: DE E5                                         FSUBRP st5, st0 
00001B98: E9 11 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_6:        
00001B9D: DE E6                                         FSUBRP st6, st0 
00001B9F: E9 0A 01 00 00                                jmp end_DE_SP
                                                FSUBRP_i_7:        
00001BA4: DE E7                                         FSUBRP st7, st0 
00001BA6: E9 03 01 00 00                                jmp end_DE_SP 
                                                 
                                                DE_E8_i:
                                                ;	    DE E8+i   FSUBP i,0       i := i - 0, pop
00001BAB: 2D E8 00 00 00                                SUB eax, 0E8h   ; get index
00001BB0: 74 2A                                         jZ  FSUBP_i_0
00001BB2: 83 F8 01                                      cmp eax, 1
00001BB5: 74 2C                                         je  FSUBP_i_1
00001BB7: 83 F8 02                                      cmp eax, 2
00001BBA: 74 2E                                         je  FSUBP_i_2
00001BBC: 83 F8 03                                      cmp eax, 3
00001BBF: 74 30                                         je  FSUBP_i_3
00001BC1: 83 F8 04                                      cmp eax, 4
00001BC4: 74 32                                         je  FSUBP_i_4
00001BC6: 83 F8 05                                      cmp eax, 5
00001BC9: 74 34                                         je  FSUBP_i_5
00001BCB: 83 F8 06                                      cmp eax, 6
00001BCE: 74 36                                         je  FSUBP_i_6
00001BD0: 83 F8 07                                      cmp eax, 7
00001BD3: 74 38                                         je  FSUBP_i_7        
00001BD5: D9 D0                                         fnop            ; wrong index
00001BD7: E9 D2 00 00 00                                jmp end_DE_SP  
                                                FSUBP_i_0:          
00001BDC: DE E8                                         FSUBP st0, st0 
00001BDE: E9 CB 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_1:                     
00001BE3: DE E9                                         FSUBP st1, st0 
00001BE5: E9 C4 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_2:          
00001BEA: DE EA                                         FSUBP st2, st0   
00001BEC: E9 BD 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_3:        
00001BF1: DE EB                                         FSUBP st3, st0                   
00001BF3: E9 B6 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_4:        
00001BF8: DE EC                                         FSUBP st4, st0 
00001BFA: E9 AF 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_5:        
00001BFF: DE ED                                         FSUBP st5, st0 
00001C01: E9 A8 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_6:        
00001C06: DE EE                                         FSUBP st6, st0 
00001C08: E9 A1 00 00 00                                jmp end_DE_SP
                                                FSUBP_i_7:        
00001C0D: DE EF                                         FSUBP st7, st0 
00001C0F: E9 9A 00 00 00                                jmp end_DE_SP  
                                                
                                                DE_F0_i:
                                                ;	    DE F0+i   FDIVRP i,0      i := 0 / i, pop
00001C14: 2D F0 00 00 00                                SUB eax, 0F0h   ; get index
00001C19: 74 27                                         jZ  FDIVRP_i_0
00001C1B: 83 F8 01                                      cmp eax, 1
00001C1E: 74 26                                         je  FDIVRP_i_1
00001C20: 83 F8 02                                      cmp eax, 2
00001C23: 74 25                                         je  FDIVRP_i_2
00001C25: 83 F8 03                                      cmp eax, 3
00001C28: 74 24                                         je  FDIVRP_i_3
00001C2A: 83 F8 04                                      cmp eax, 4
00001C2D: 74 23                                         je  FDIVRP_i_4
00001C2F: 83 F8 05                                      cmp eax, 5
00001C32: 74 22                                         je  FDIVRP_i_5
00001C34: 83 F8 06                                      cmp eax, 6
00001C37: 74 21                                         je  FDIVRP_i_6
00001C39: 83 F8 07                                      cmp eax, 7
00001C3C: 74 20                                         je  FDIVRP_i_7        
00001C3E: D9 D0                                         fnop            ; wrong index
00001C40: EB 6C                                         jmp end_DE_SP  
                                                FDIVRP_i_0:          
00001C42: DE F0                                         FDIVRP st0, st0 
00001C44: EB 68                                         jmp end_DE_SP
                                                FDIVRP_i_1:                     
00001C46: DE F1                                         FDIVRP st1, st0 
00001C48: EB 64                                         jmp end_DE_SP
                                                FDIVRP_i_2:          
00001C4A: DE F2                                         FDIVRP st2, st0   
00001C4C: EB 60                                         jmp end_DE_SP
                                                FDIVRP_i_3:        
00001C4E: DE F3                                         FDIVRP st3, st0                   
00001C50: EB 5C                                         jmp end_DE_SP
                                                FDIVRP_i_4:        
00001C52: DE F4                                         FDIVRP st4, st0 
00001C54: EB 58                                         jmp end_DE_SP
                                                FDIVRP_i_5:        
00001C56: DE F5                                         FDIVRP st5, st0 
00001C58: EB 54                                         jmp end_DE_SP
                                                FDIVRP_i_6:        
00001C5A: DE F6                                         FDIVRP st6, st0 
00001C5C: EB 50                                         jmp end_DE_SP
                                                FDIVRP_i_7:        
00001C5E: DE F7                                         FDIVRP st7, st0 
00001C60: EB 4C                                         jmp end_DE_SP  
                                                
                                                DE_F8_i:
                                                ;	    DE F8+i   FDIVP i,0       i := i / 0, pop
00001C62: 2D F8 00 00 00                                SUB eax, 0F8h   ; get index
00001C67: 74 27                                         jZ  FDIVP_i_0
00001C69: 83 F8 01                                      cmp eax, 1
00001C6C: 74 26                                         je  FDIVP_i_1
00001C6E: 83 F8 02                                      cmp eax, 2
00001C71: 74 25                                         je  FDIVP_i_2
00001C73: 83 F8 03                                      cmp eax, 3
00001C76: 74 24                                         je  FDIVP_i_3
00001C78: 83 F8 04                                      cmp eax, 4
00001C7B: 74 23                                         je  FDIVP_i_4
00001C7D: 83 F8 05                                      cmp eax, 5
00001C80: 74 22                                         je  FDIVP_i_5
00001C82: 83 F8 06                                      cmp eax, 6
00001C85: 74 21                                         je  FDIVP_i_6
00001C87: 83 F8 07                                      cmp eax, 7
00001C8A: 74 20                                         je  FDIVP_i_7        
00001C8C: D9 D0                                         fnop            ; wrong index
00001C8E: EB 1E                                         jmp end_DE_SP  
                                                FDIVP_i_0:          
00001C90: DE F8                                         FDIVP st0, st0 
00001C92: EB 1A                                         jmp end_DE_SP
                                                FDIVP_i_1:                     
00001C94: DE F9                                         FDIVP st1, st0 
00001C96: EB 16                                         jmp end_DE_SP
                                                FDIVP_i_2:          
00001C98: DE FA                                         FDIVP st2, st0   
00001C9A: EB 12                                         jmp end_DE_SP
                                                FDIVP_i_3:        
00001C9C: DE FB                                         FDIVP st3, st0                   
00001C9E: EB 0E                                         jmp end_DE_SP
                                                FDIVP_i_4:        
00001CA0: DE FC                                         FDIVP st4, st0 
00001CA2: EB 0A                                         jmp end_DE_SP
                                                FDIVP_i_5:        
00001CA4: DE FD                                         FDIVP st5, st0 
00001CA6: EB 06                                         jmp end_DE_SP
                                                FDIVP_i_6:        
00001CA8: DE FE                                         FDIVP st6, st0 
00001CAA: EB 02                                         jmp end_DE_SP
                                                FDIVP_i_7:        
00001CAC: DE FF                                         FDIVP st7, st0 
                                                        ; NR ; jmp end_DE_SP
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                     
                                                end_DE_SP:
                                                end_DE_TAB:     
00001CAE: 8B 5D 10                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
00001CB1: 9B DD 33                              	FSAVE [ebx]    
00001CB4: 9B                                        fwait 
                                                    
00001CB5: 9B DB E2                                  FCLEX
                                                    
                                                    ; restore....      
00001CB8: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00001CBD: DD 23                                 	FRSTOR [ebx] 
00001CBF: 9B                                        fwait
                                                    
                                                    ; restore
00001CC0: 8B 5D F0                                  mov ebx, [tEBX]
00001CC3: 8B 75 F4                                  mov esi, [tESI]
00001CC6: 8B 55 F8                                  mov edx, [tEDX]
00001CC9: 8B 4D FC                                  mov ecx, [tECX]
                                                 
00001CCC: 9D                                        popf
                                                    
                                                	;eax=WHAT EVER
00001CCD: C9 C2 0C 00                           	ret  
                                                endp
                                                
                                                  
                                                
                                                
                                                  
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                ; AX = mem2i for FSTSW AX
                                                ; (all passed by ref) 
                                                
00001CD1: 55 89 E5 83 EC 10                     proc MicroAsm_DF_TAB lEA_TAB, mem2i, mem8i, mem10d,  virtual87state_94bytes
                                                    local tEBX:DWORD,  tESI:DWORD,   tEDX:DWORD,  tECX:DWORD 
00001CD7: 9C                                    	pushf
                                                	;cli 
                                                
                                                    ; store                                                                  
00001CD8: 89 5D F0                                  mov [tEBX], ebx
00001CDB: 89 75 F4                                  mov [tESI], esi
00001CDE: 89 55 F8                                  mov [tEDX], edx
00001CE1: 89 4D FC                                  mov [tECX], ecx
                                                	
                                                	; FPU ->
00001CE4: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes
00001CE9: 9B DD 33                              	FSAVE [ebx] 
00001CEC: 9B                                        fwait
                                                     
                                                    ; FPU <-       	      
00001CED: 8B 5D 18                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer       
00001CF0: DD 23                                 	FRSTOR [ebx]
00001CF2: 9B                                    	fwait
                                                	
                                                	;;;;;;;;;;;;;; 
                                                	 
00001CF3: 8B 5D 08                              	mov ebx, [lEA_TAB]      ; pointer to pointer
00001CF6: 8B 75 0C                              	mov esi, [mem2i]        ; pointer to pointer   
00001CF9: 8B 55 10                                  mov edx, [mem8i]        ; pointer to pointer
00001CFC: 8B 4D 14                                  mov ecx, [mem10d]       ; pointer to pointer
                                                    
                                                    
                                                      
00001CFF: 8B 03                                 	mov eax, [ebx] 	
00001D01: 83 F8 00                                  cmp eax, 0
00001D04: 74 25                                     je  DF_0  
00001D06: 83 F8 01                                  cmp eax, 1
00001D09: 74 24                                     je  DF_1
00001D0B: 83 F8 02                                  cmp eax, 2
00001D0E: 74 23                                     je  DF_2
00001D10: 83 F8 03                                  cmp eax, 3
00001D13: 74 22                                     je  DF_3
00001D15: 83 F8 04                                  cmp eax, 4
00001D18: 74 21                                     je  DF_4
00001D1A: 83 F8 05                                  cmp eax, 5
00001D1D: 74 20                                     je  DF_5
00001D1F: 83 F8 06                                  cmp eax, 6
00001D22: 74 1F                                     je  DF_6  
00001D24: 83 F8 07                                  cmp eax, 7
00001D27: 74 1E                                     je  DF_7     
00001D29: EB 20                                     jmp special_processing_DF
                                                DF_0:   
                                                ;       DF /0     FILD mem2i      push, 0 := mem2i
00001D2B: DF 06                                      FILD word [esi]
00001D2D: EB 6E                                 jmp end_DF_TAB         
                                                DF_1:
                                                ;       DE /1     RESERVED  
00001D2F: D9 D0                                      FNOP
00001D31: EB 6A                                 jmp end_DF_TAB 
                                                DF_2:     
                                                ;	    DF /2     FIST mem2i      mem2i := 0
00001D33: DF 16                                      FIST word [esi]
00001D35: EB 66                                 jmp end_DF_TAB 
                                                DF_3:       
                                                ;	    DF /3     FISTP mem2i     mem2i := 0, pop
00001D37: DF 1E                                      FISTP word [esi]
00001D39: EB 62                                 jmp end_DF_TAB 
                                                DF_4:   
                                                ;	    DF /4     FBLD mem10d     push, 0 := mem10d
00001D3B: DF 21                                      FBLD tword [ecx]
00001D3D: EB 5E                                 jmp end_DF_TAB 
                                                DF_5:     
                                                ;	    DF /5     FILD mem8i      push, 0 := mem8i
00001D3F: DF 2A                                      FILD qword [edx] 
00001D41: EB 5A                                 jmp end_DF_TAB 
                                                DF_6:         
                                                ;	    DF /6     FBSTP mem10d    mem10d := 0, pop
00001D43: DF 31                                      FBSTP tword [ecx]
00001D45: EB 56                                 jmp end_DF_TAB 
                                                DF_7:  
                                                ;	    DF /7     FISTP mem8i     mem8i := 0, pop
00001D47: DF 3A                                      FISTP qword [edx]  
00001D49: EB 52                                 jmp end_DF_TAB
                                                
                                                    ;;;;;;;;;;;;;;;;;;;; special processing ;;;;;;;;;;;;;;
                                                    
                                                ; generally EA byte: C0 and up  
                                                ; it this case instead of TAB index, actual byte value from the RAM is passed
                                                special_processing_DF:        
00001D4B: 3D C8 00 00 00                            cmp eax, 0C8h
00001D50: 72 2C                                     jb  DF_C0_i  
00001D52: 3D D0 00 00 00                            cmp eax, 0D0h
00001D57: 72 27                                     jb  DF_C8_i      
00001D59: 3D D8 00 00 00                            cmp eax, 0D8h
00001D5E: 72 22                                     jb  DF_D0_i
00001D60: 3D E0 00 00 00                            cmp eax, 0E0h
00001D65: 72 1D                                     jb  DF_D8_i       
00001D67: 3D E8 00 00 00                            cmp eax, 0E8h
00001D6C: 72 1A                                     jb  DF_E0_i  
00001D6E: 3D F0 00 00 00                            cmp eax, 0F0h
00001D73: 72 24                                     jb  DF_E8_i 
00001D75: 3D F8 00 00 00                            cmp eax, 0F8h
00001D7A: 72 1F                                     jb  DF_F0_i           
                                                     
00001D7C: EB 1F                                     jmp DF_F8_i       ; F8+
                                                
                                                        
                                                DF_C0_i:
00001D7E: EB 1D                                         jmp end_DF_SP  
                                                DF_C8_i:
00001D80: EB 1B                                         jmp end_DF_SP 
                                                DF_D0_i:
00001D82: EB 19                                         jmp end_DF_SP 
                                                DF_D8_i:  
00001D84: EB 17                                         jmp end_DF_SP     
                                                DF_D9:
00001D86: EB 15                                         jmp end_DF_SP
                                                DF_E0_i:         
00001D88: 3D E0 00 00 00                                cmp eax, 0E0h
00001D8D: 74 02                                         je  DF_E0         ; ALL OTHERS RESERVED. 
00001D8F: EB 0C                                         jmp end_DF_SP
                                                DF_E0:
                                                ;        DF E0     FSTSW AX        AX := status word
00001D91: 9B DF E0                                      FSTSW AX
00001D94: 66 89 06                                      mov [esi], AX
                                                        
00001D97: EB 04                                         jmp end_DF_SP 
                                                DF_E8_i:
00001D99: EB 02                                         jmp end_DF_SP  
                                                DF_F0_i:
00001D9B: EB 00                                         jmp end_DF_SP  
                                                DF_F8_i:
                                                        ; NR ; jmp end_DF_SP
                                                    ;;;;;;;;;;;;;;;;;;;;;
                                                     
                                                end_DF_SP:
                                                end_DF_TAB:     
00001D9D: 8B 5D 18                              	mov ebx, [virtual87state_94bytes]  ; pointer to pointer      
00001DA0: 9B DD 33                              	FSAVE [ebx]    
00001DA3: 9B                                        fwait 
                                                    
00001DA4: 9B DB E2                                  FCLEX
                                                    
                                                    ; restore....      
00001DA7: BB 00 10 40 00                        	mov ebx,ORIG_87_STATE_94bytes 
00001DAC: DD 23                                 	FRSTOR [ebx] 
00001DAE: 9B                                        fwait
                                                    
                                                    ; restore
00001DAF: 8B 5D F0                                  mov ebx, [tEBX]
00001DB2: 8B 75 F4                                  mov esi, [tESI]
00001DB5: 8B 55 F8                                  mov edx, [tEDX]
00001DB8: 8B 4D FC                                  mov ecx, [tECX]
                                                 
00001DBB: 9D                                        popf
                                                    
                                                	;eax=WHAT EVER
00001DBC: C9 C2 14 00                           	ret  
                                                endp
                                                
                                                  
                                                
                                                
                                                
                                                
                                                
                                                       
                                                
                                                
                                                
                                                
                                                
                                                
                                                
00001DC0: 00 00 00 00 00 00 00 00 00 00 00 00   section '.idata' import data readable writeable
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00                           
00001E00: 54 30 00 00 00 00 00 00 00 00 00 00     library kernel,'KERNEL32.DLL',\
          3C 30 00 00 64 30 00 00 A0 30 00 00   	  user,'USER32.DLL'
          00 00 00 00 00 00 00 00 49 30 00 00   
          A8 30 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          4B 45 52 4E 45 4C 33 32 2E 44 4C 4C   
          00 55 53 45 52 33 32 2E 44 4C 4C 00   
00001E54: 74 30 00 00 83 30 00 00 94 30 00 00     import kernel,\
          00 00 00 00 74 30 00 00 83 30 00 00   	 GetLastError,'GetLastError',\
          94 30 00 00 00 00 00 00 00 00 47 65   	 SetLastError,'SetLastError',\
          74 4C 61 73 74 45 72 72 6F 72 00 00   	 FormatMessage,'FormatMessageA',\
          00 46 6F 72 6D 61 74 4D 65 73 73 61   	 LocalFree,'LocalFree'
          67 65 41 00 00 00 4C 6F 63 61 6C 46   
          72 65 65 00                           
00001EA0: B0 30 00 00 00 00 00 00 B0 30 00 00     import user,\
          00 00 00 00 00 00 4D 65 73 73 61 67   	 MessageBox,'MessageBoxA'
          65 42 6F 78 41 00                     
00001EBE: 00 00 00 00 00 00 00 00 00 00 00 00   section '.edata' export data readable
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00         
00002000: 00 00 00 00 00 00 00 00 00 00 00 00     export 'MICROASM.DLL',\
          AA 40 00 00 01 00 00 00 0D 00 00 00   	 ShowErrorMessage,'ShowErrorMessage',\ 
          0D 00 00 00 28 40 00 00 5C 40 00 00   	 ShowLastError,'ShowLastError',\  
          90 40 00 00 D0 10 00 00 0D 11 00 00   	 Copyright_emu8086, 'Copyright_emu8086',\
          23 11 00 00 F0 11 00 00 2B 12 00 00   	 MicroAsm_T,'MicroAsm_T',\
          67 12 00 00 68 16 00 00 EF 1A 00 00   	 MicroAsm_FINIT, 'MicroAsm_FINIT',    \
          85 1B 00 00 4A 1F 00 00 93 22 00 00   	 MicroAsm_D8_TAB, 'MicroAsm_D8_TAB',  \
          7C 25 00 00 D1 28 00 00 D6 40 00 00   	 MicroAsm_D9_TAB, 'MicroAsm_D9_TAB',  \
          02 41 00 00 12 41 00 00 22 41 00 00   	 MicroAsm_DA_TAB, 'MicroAsm_DA_TAB',  \
          32 41 00 00 42 41 00 00 52 41 00 00   	 MicroAsm_DB_TAB, 'MicroAsm_DB_TAB',  \
          62 41 00 00 72 41 00 00 F3 40 00 00   	 MicroAsm_DC_TAB, 'MicroAsm_DC_TAB',  \
          E8 40 00 00 B7 40 00 00 C8 40 00 00   	 MicroAsm_DD_TAB, 'MicroAsm_DD_TAB',  \
          02 00 05 00 06 00 07 00 08 00 09 00   	 MicroAsm_DE_TAB, 'MicroAsm_DE_TAB',  \
          0A 00 0B 00 0C 00 04 00 03 00 00 00   	 MicroAsm_DF_TAB, 'MicroAsm_DF_TAB'
          01 00 4D 49 43 52 4F 41 53 4D 2E 44   	 
          4C 4C 00 53 68 6F 77 45 72 72 6F 72   
          4D 65 73 73 61 67 65 00 53 68 6F 77   
          4C 61 73 74 45 72 72 6F 72 00 43 6F   
          70 79 72 69 67 68 74 5F 65 6D 75 38   
          30 38 36 00 4D 69 63 72 6F 41 73 6D   
          5F 54 00 4D 69 63 72 6F 41 73 6D 5F   
          46 49 4E 49 54 00 4D 69 63 72 6F 41   
          73 6D 5F 44 38 5F 54 41 42 00 4D 69   
          63 72 6F 41 73 6D 5F 44 39 5F 54 41   
          42 00 4D 69 63 72 6F 41 73 6D 5F 44   
          41 5F 54 41 42 00 4D 69 63 72 6F 41   
          73 6D 5F 44 42 5F 54 41 42 00 4D 69   
          63 72 6F 41 73 6D 5F 44 43 5F 54 41   
          42 00 4D 69 63 72 6F 41 73 6D 5F 44   
          44 5F 54 41 42 00 4D 69 63 72 6F 41   
          73 6D 5F 44 45 5F 54 41 42 00 4D 69   
          63 72 6F 41 73 6D 5F 44 46 5F 54 41   
          42 00                                 
00002182: 00 00 00 00 00 00 00 00 00 00 00 00   section '.reloc' fixups data discardable
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   ;    MicroAsm_FINIT, 'MicroAsm_FINIT',\ 
          00 00 00 00 00 00 00 00 00 00 00 00   ;	 MicroAsm_GETSTATE_94, 'MicroAsm_GETSTATE_94',\
          00 00 00 00 00 00 00 00 00 00 00 00   ;	 MicroAsm_SETSTATE_94, 'MicroAsm_SETSTATE_94',\
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 00 00 00 00 00   
          00 00 00 00 00 00 00 10 00 00 30 00   
          00 00 EC 30 FC 30 05 31 12 31 F5 31   ; [SOURCE]: D:\yur7\emu8086\emu8086v400src\MicroAsm_DLL\MicroAsm.asm
          FB 31 15 32 1B 32 36 32 53 32 75 32   
          56 36 7C 36 D7 3A FD 3A 73 3B 99 3B   
          32 3F 5E 3F 00 00 00 20 00 00 16 00   
          00 00 7B 32 A7 32 64 35 90 35 B9 38   
          E5 38 A8 39                           
