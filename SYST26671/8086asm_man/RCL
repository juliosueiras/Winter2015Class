 			<A NAME="RCL">&nbsp;</A>
</TD>
</TR>




<TR>
<TD>
<FONT FACE="Courier">
RCL
</FONT>
</TD>
<TD>
<FONT FACE="Courier">
	<NOBR>memory, immediate</NOBR><BR>
	<NOBR>REG, immediate</NOBR><BR><BR>
	<NOBR>memory, CL</NOBR><BR>
	<NOBR>REG, CL</NOBR>
</FONT>
</TD>
<TD>

Rotate operand1 left through Carry Flag. The number of rotates is set by operand2.
<BR>
When <B>immediate</B> is greater then 1, assembler generates several
<B>RCL xx, 1</B> instructions because 8086 has machine code only for this
instruction (the same principle works for all other shift/rotate instructions).

<BR><BR>Algorithm:<BR><BR>
<FONT FACE="Courier">
<UL>
	shift all bits left, the bit that goes off is set to
	CF and previous value of CF is inserted to the right-most position.
</UL>
</FONT>
<BR>Example:<PRE><FONT FACE="Courier">STC               ; set carry (CF=1).
MOV AL, 1Ch       ; AL = 00011100b
RCL AL, 1         ; AL = 00111001b,  CF=0.
RET</FONT></PRE>

<FONT FACE="Courier">
<TABLE BORDER=1 NOSHADE>
<TR> <TD>C</TD> <TD>O</TD> </TR>
<TR> <TD>r</TD> <TD>r</TD> </TR>
</TABLE>
<BR><BR>
OF=0 if first operand keeps original sign.
</FONT>
